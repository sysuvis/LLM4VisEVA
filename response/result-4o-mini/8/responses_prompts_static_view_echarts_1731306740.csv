Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Units Sold and Revenue.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Scatterplot of Units Sold vs Revenue</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""scatterplot"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1);
                const unitsSold = [];
                const revenue = [];

                rows.forEach(row => {
                    const cols = row.split(',');
                    if(cols.length > 4) {
                        unitsSold.push(parseFloat(cols[2]));
                        revenue.push(parseFloat(cols[3]));
                    }
                });

                const myChart = echarts.init(document.getElementById('scatterplot'));
                const option = {
                    title: {
                        text: 'Scatterplot of Units Sold vs Revenue'
                    },
                    tooltip: {},
                    xAxis: {
                        name: 'Units Sold',
                        type: 'value'
                    },
                    yAxis: {
                        name: 'Revenue',
                        type: 'value'
                    },
                    series: [{
                        symbolSize: 10,
                        data: unitsSold.map((units, index) => [units, revenue[index]]),
                        type: 'scatter'
                    }]
                };

                myChart.setOption(option);
            })
            .catch(error => console.error('Error fetching data:', error));
    </script>
</body>
</html>
```"
2,line chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Line Chart that visualizes the trend of Units Sold over the Year for each Product.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Units Sold Trend</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 100%;height:400px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const lines = data.split('\n').slice(1);
                const result = {};
                
                lines.forEach(line => {
                    const [Year, Product, UnitsSold] = line.split(',').map(item => item.trim());
                    if (!result[Product]) {
                        result[Product] = { Year: [], UnitsSold: [] };
                    }
                    result[Product].Year.push(Year);
                    result[Product].UnitsSold.push(parseInt(UnitsSold));
                });

                const seriesData = Object.keys(result).map(product => ({
                    name: product,
                    type: 'line',
                    data: result[product].UnitsSold,
                }));

                const option = {
                    title: {
                        text: 'Units Sold Trend Over Years by Product'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        data: Object.keys(result)
                    },
                    xAxis: {
                        type: 'category',
                        data: Array.from(new Set(lines.map(line => line.split(',')[0].trim()))), // unique years
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: seriesData,
                };

                const chart = echarts.init(document.getElementById('main'));
                chart.setOption(option);
            });
    </script>
</body>
</html>
```"
3,bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Units Sold for each Product in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Bar Chart of Units Sold in 2020</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 100%; height: 500px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1);
                const productData = {};

                rows.forEach(row => {
                    const columns = row.split(',');
                    const year = columns[0].trim();
                    const product = columns[1].trim();
                    const unitsSold = parseInt(columns[2].trim(), 10);

                    if (year === '2020') {
                        if (!productData[product]) {
                            productData[product] = 0;
                        }
                        productData[product] += unitsSold;
                    }
                });

                const products = Object.keys(productData);
                const unitsSold = products.map(product => productData[product]);

                const chart = echarts.init(document.getElementById('chart'));
                const option = {
                    title: {
                        text: 'Units Sold per Product in 2020'
                    },
                    xAxis: {
                        type: 'category',
                        data: products,
                        name: 'Product'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Units Sold'
                    },
                    series: [{
                        data: unitsSold,
                        type: 'bar'
                    }]
                };
                chart.setOption(option);
            });
    </script>
</body>
</html>
```"
4,pie chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Pie Chart that visualizes the proportion of Units Sold contributed by each Product in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""utf-8"">
    <title>Units Sold by Product in 2020</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 600px;height:400px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const lines = data.split('\n').slice(1);
                const productSales = {};
                lines.forEach(line => {
                    const [year, product, unitsSold] = line.split(',');
                    if (year === '2020') {
                        productSales[product] = (productSales[product] || 0) + parseInt(unitsSold, 10);
                    }
                });
                
                const productNames = Object.keys(productSales);
                const unitsSoldData = Object.values(productSales);

                const option = {
                    title: {
                        text: 'Units Sold by Product in 2020',
                        subtext: 'Retail Sales',
                        left: 'center'
                    },
                    tooltip: {
                        trigger: 'item'
                    },
                    series: [{
                        name: 'Units Sold',
                        type: 'pie',
                        radius: '50%',
                        data: productNames.map((product, index) => ({
                            name: product,
                            value: unitsSoldData[index]
                        })),
                        emphasis: {
                            itemStyle: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        }
                    }]
                };

                const chart = echarts.init(document.getElementById('main'));
                chart.setOption(option);
            });
    </script>
</body>
</html>
```"
5,donut chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Donut Chart that visualizes the distribution of Units Sold among Product in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Donut Chart of Units Sold in 2020</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""donutChart"" style=""width: 600px; height: 400px;""></div>
    <script>
        async function fetchData() {
            const response = await fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv');
            const data = await response.text();
            const rows = data.split('\n').slice(1);
            const filteredData = rows
                .map(row => row.split(','))
                .filter(row => row[0] === '2020')
                .map(row => ({ product: row[1], unitsSold: parseInt(row[2]) }));

            return filteredData;
        }

        function createDonutChart(data) {
            const products = data.map(item => item.product);
            const unitsSold = data.map(item => item.unitsSold);

            const chart = echarts.init(document.getElementById('donutChart'));
            const option = {
                title: {
                    text: 'Distribution of Units Sold by Product in 2020',
                    left: 'center'
                },
                tooltip: {
                    trigger: 'item'
                },
                series: [
                    {
                        name: 'Units Sold',
                        type: 'pie',
                        radius: ['50%', '70%'],
                        avoidLabelOverlap: false,
                        itemStyle: {
                            borderColor: '#fff',
                            borderWidth: 2
                        },
                        label: {
                            show: true,
                            position: 'outside'
                        },
                        emphasis: {
                            itemStyle: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        },
                        labelLine: {
                            show: true
                        },
                        data: products.map((product, index) => ({ value: unitsSold[index], name: product }))
                    }
                ]
            };
            chart.setOption(option);
        }

        fetchData().then(createDonutChart);
    </script>
</body>
</html>
```"
6,coxcomb chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Coxcomb Chart(polar area chart) to compare the Units Sold of different Product in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Coxcomb Chart Example</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 600px;height:400px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
        .then(response => response.text())
        .then(data => {
            const rows = data.split('\n').slice(1);
            const unitsSold = {};
            rows.forEach(row => {
                const [year, product, unitsSoldValue] = row.split(',');
                if (year.trim() === '2020') {
                    if (unitsSold[product.trim()]) {
                        unitsSold[product.trim()] += parseInt(unitsSoldValue);
                    } else {
                        unitsSold[product.trim()] = parseInt(unitsSoldValue);
                    }
                }
            });

            const products = Object.keys(unitsSold);
            const units = Object.values(unitsSold);

            const chartDom = document.getElementById('main');
            const myChart = echarts.init(chartDom);
            const option = {
                title: {
                    text: 'Coxcomb Chart of Units Sold by Product in 2020',
                    subtext: 'Source: Retail Sales Data',
                    left: 'center'
                },
                tooltip: {
                    trigger: 'item'
                },
                radar: {
                    indicator: products.map((product, index) => ({
                        name: product,
                        max: Math.max(...units) + 100 // Just a buffer for visualization
                    })),
                    shape: 'circle',
                    splitNumber: 5,
                    name: {
                        textStyle: {
                            color: '#fff',
                            backgroundColor: '#999',
                            borderRadius: 3,
                            padding: [3, 5]
                        }
                    },
                    splitArea: {
                        areaStyle: {
                            color: ['rgba(255, 255, 255, 0.1)', 'rgba(119, 136, 153, 0.5)']
                        }
                    },
                    splitLine: {
                        lineStyle: {
                            color: ['#999']
                        }
                    }
                },
                series: [{
                    type: 'radar',
                    data: [{
                        value: units,
                        name: 'Units Sold'
                    }],
                    label: {
                        show: true,
                        formatter: (params) => `${params.name}: ${params.value}`
                    },
                    areaStyle: {
                        opacity: 0.5
                    }
                }]
            };
            myChart.setOption(option);
        });
    </script>
</body>
</html>
```"
7,radar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Radar Chart to compare the Units Sold of different Product in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Radar Chart - Units Sold in 2020</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 600px; height: 400px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const lines = data.split('\n').slice(1);
                const unitsSold = {};
                lines.forEach(line => {
                    const [year, product, unitsSoldValue] = line.split(',');
                    if (year.trim() === '2020') {
                        unitsSold[product.trim()] = Number(unitsSoldValue);
                    }
                });

                const productNames = Object.keys(unitsSold);
                const unitsValues = Object.values(unitsSold);

                const chartDom = document.getElementById('main');
                const myChart = echarts.init(chartDom);
                const option = {
                    title: {
                        text: 'Units Sold by Product in 2020'
                    },
                    tooltip: {},
                    radar: {
                        indicator: productNames.map(product => ({ name: product, max: Math.max(...unitsValues) + 100 })),
                    },
                    series: [{
                        name: 'Units Sold',
                        type: 'radar',
                        data: [{
                            value: unitsValues,
                            name: 'Units Sold'
                        }]
                    }]
                };

                myChart.setOption(option);
            });
    </script>
</body>
</html>
```"
8,streamgraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Streamgraph that visualizes the changes of Units Sold over the Year for each Product.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Streamgraph with ECharts</title>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/echarts/5.3.3/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1);
                const parsedData = rows.map(row => {
                    const cols = row.split(',');
                    return {
                        Year: cols[0],
                        Product: cols[1],
                        UnitsSold: +cols[2]
                    };
                });

                const years = [...new Set(parsedData.map(item => item.Year))];
                const products = [...new Set(parsedData.map(item => item.Product))];
                
                const seriesData = products.map(product => {
                    return {
                        name: product,
                        type: 'line',
                        smooth: true,
                        stack: 'total',
                        areaStyle: {},
                        data: years.map(year => {
                            const totalUnits = parsedData
                                .filter(item => item.Product === product && item.Year === year)
                                .reduce((sum, item) => sum + item.UnitsSold, 0);
                            return totalUnits;
                        })
                    };
                });

                const option = {
                    title: {
                        text: 'Units Sold Over the Years for Each Product',
                    },
                    tooltip: {
                        trigger: 'axis',
                    },
                    legend: {
                        data: products,
                    },
                    xAxis: {
                        type: 'category',
                        data: years,
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Units Sold',
                    },
                    series: seriesData
                };

                const chart = echarts.init(document.getElementById('main'));
                chart.setOption(option);
            });
    </script>
</body>
</html>
```"
9,slopegraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Slopegraph to compare the Units Sold between 2019 and 2020 for each Product Category.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Units Sold Slopegraph</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""slopegraph"" style=""width: 800px; height: 600px;""></div>
    
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const lines = data.split('\n').slice(1);
                const productData = {};

                lines.forEach(line => {
                    const [year, product, unitsSold] = line.split(',');
                    if (year === '2019' || year === '2020') {
                        if (!productData[product]) {
                            productData[product] = { '2019': 0, '2020': 0 };
                        }
                        productData[product][year] = parseInt(unitsSold, 10);
                    }
                });

                const slopeData = Object.keys(productData).map(product => {
                    return {
                        product,
                        units: [productData[product]['2019'], productData[product]['2020']]
                    };
                });

                const option = {
                    title: { text: 'Units Sold Slopegraph (2019 vs 2020)' },
                    tooltip: {},
                    xAxis: {
                        type: 'value',
                        name: 'Units Sold',
                        splitLine: { show: false }
                    },
                    yAxis: {
                        type: 'category',
                        data: slopeData.map(d => d.product)
                    },
                    series: [{
                        name: 'Units Sold',
                        type: 'line',
                        data: slopeData.map(d => ({ value: d.units[0], name: d.product })).concat(
                            slopeData.map(d => ({ value: d.units[1], name: d.product }))
                        ),
                        lineStyle: { color: '#5470C6' },
                        label: { show: true, position: 'end' }
                    }]
                };

                const chart = echarts.init(document.getElementById('slopegraph'));
                chart.setOption(option);
            });
    </script>
</body>
</html>
```"
10,heatmap,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Heatmap that visualizes the Units Sold across Product and Years.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Units Sold Heatmap</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""heatmap"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1);
                const heatmapData = {};
                const years = new Set();
                const products = new Set();

                rows.forEach(row => {
                    const columns = row.split(',');
                    const year = columns[0];
                    const product = columns[1];
                    const unitsSold = parseInt(columns[2]);

                    if (!heatmapData[year]) {
                        heatmapData[year] = {};
                    }
                    if (!heatmapData[year][product]) {
                        heatmapData[year][product] = 0;
                    }
                    heatmapData[year][product] += unitsSold;

                    years.add(year);
                    products.add(product);
                });

                const yearArray = Array.from(years);
                const productArray = Array.from(products);
                const matrixData = [];

                productArray.forEach(product => {
                    yearArray.forEach(year => {
                        const units = heatmapData[year][product] || 0;
                        matrixData.push([product, year, units]);
                    });
                });

                const option = {
                    tooltip: {
                        position: 'top'
                    },
                    grid: {
                        height: '50%',
                        y: '15%'
                    },
                    xAxis: {
                        type: 'category',
                        data: yearArray,
                        splitArea: {
                            show: true
                        }
                    },
                    yAxis: {
                        type: 'category',
                        data: productArray,
                        splitArea: {
                            show: true
                        }
                    },
                    visualMap: {
                        min: 0,
                        max: Math.max(...matrixData.map(d => d[2])),
                        calculable: true,
                        orient: 'horizontal',
                        left: 'center',
                        bottom: '15%',
                        inRange: {
                            color: ['#FFFFFF', '#FF4500']
                        }
                    },
                    series: [{
                        name: 'Units Sold',
                        type: 'heatmap',
                        data: matrixData.map(d => [yearArray.indexOf(d[1]), productArray.indexOf(d[0]), d[2]]),
                        label: {
                            show: true
                        },
                        emphasis: {
                            itemStyle: {
                                borderColor: '#333',
                                borderWidth: 1
                            }
                        }
                    }]
                };

                const heatmap = echarts.init(document.getElementById('heatmap'));
                heatmap.setOption(option);
            });
    </script>
</body>
</html>
```"
11,bar chart+stacked bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Stacked Bar Chart that visualizes the given data table.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Stacked Bar Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
    <style>
        #main {
            width: 100%;
            height: 600px;
        }
    </style>
</head>
<body>
    <div id=""main""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
        .then(response => response.text())
        .then(data => {
            const rows = data.split('\n').slice(1);
            const years = [];
            const products = Array.from(new Set(rows.map(row => row.split(',')[1])));
            const seriesData = products.map(product => {
                return {
                    name: product,
                    type: 'bar',
                    stack: 'total',
                    data: []
                };
            });

            rows.forEach(row => {
                const cols = row.split(',');
                const year = cols[0];
                if (!years.includes(year)) {
                    years.push(year);
                }
                const unitsSold = parseInt(cols[2]);
                products.forEach((product, index) => {
                    if (cols[1] === product) {
                        seriesData[index].data.push(unitsSold);
                    }
                });
            });

            // Fill missing years with 0
            seriesData.forEach(series => {
                while (series.data.length < years.length) {
                    series.data.push(0);
                }
            });

            const option = {
                title: {
                    text: 'Stacked Bar Chart of Units Sold by Product'
                },
                tooltip: {},
                legend: {
                    data: products
                },
                xAxis: {
                    data: years
                },
                yAxis: {},
                series: seriesData
            };

            const chart = echarts.init(document.getElementById('main'));
            chart.setOption(option);
        });
    </script>
</body>
</html>
```"
12,bar chart+horizontal bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Horizontal Bar Chart that visualizes the Units Sold for each Product in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Units Sold for Products in 2020</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 600px; height: 400px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const lines = data.split('\n').slice(1);
                const products = [];
                const unitsSold = [];
                
                lines.forEach(line => {
                    const [year, product, units_sold] = line.split(',');
                    if (year === '2020') {
                        products.push(product);
                        unitsSold.push(parseInt(units_sold, 10));
                    }
                });

                const chartDom = document.getElementById('chart');
                const myChart = echarts.init(chartDom);
                const option = {
                    title: {
                        text: 'Units Sold for Products in 2020',
                        left: 'center'
                    },
                    tooltip: {},
                    xAxis: {
                        type: 'value',
                        name: 'Units Sold'
                    },
                    yAxis: {
                        type: 'category',
                        data: products
                    },
                    series: [{
                        name: 'Units Sold',
                        type: 'bar',
                        data: unitsSold
                    }]
                };
                
                myChart.setOption(option);
            });
    </script>
</body>
</html>
```"

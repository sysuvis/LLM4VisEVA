Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Scatterplot that visualizes the relationship between Enrollment Number and Revenue.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Scatterplot: Enrollment Number vs Revenue</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .scatter-point {
            fill: steelblue;
        }
        .axis {
            font: 10px sans-serif;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""600""></svg>

    <script>
        const svg = d3.select(""svg""),
              margin = {top: 20, right: 30, bottom: 30, left: 40},
              width = +svg.attr(""width"") - margin.left - margin.right,
              height = +svg.attr(""height"") - margin.top - margin.bottom;

        const g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            data.forEach(d => {
                d[""Enrollment Number""] = +d[""Enrollment Number""];
                d[""Revenue""] = +d[""Revenue""];
            });

            const x = d3.scaleLinear()
                .domain(d3.extent(data, d => d[""Enrollment Number""])).nice()
                .range([0, width]);

            const y = d3.scaleLinear()
                .domain(d3.extent(data, d => d[""Revenue""])).nice()
                .range([height, 0]);

            const xAxis = g.append(""g"")
                .attr(""class"", ""axis"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));

            const yAxis = g.append(""g"")
                .attr(""class"", ""axis"")
                .call(d3.axisLeft(y));

            g.selectAll("".scatter-point"")
                .data(data)
                .enter().append(""circle"")
                .attr(""class"", ""scatter-point"")
                .attr(""cx"", d => x(d[""Enrollment Number""]))
                .attr(""cy"", d => y(d[""Revenue""]))
                .attr(""r"", 3);
        });
    </script>
</body>
</html>
```"
2,line chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Line Chart that visualizes the trend of Enrollment Number over the Quarter for each Education Level.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Enrollment Number Trend</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .line {
            fill: none;
            stroke-width: 2px;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""400""></svg>
    <script>
        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            const nestedData = d3.group(data, d => d[""Education Level""]);
            
            const margin = {top: 20, right: 30, bottom: 30, left: 40};
            const width = 800 - margin.left - margin.right;
            const height = 400 - margin.top - margin.bottom;
            const svg = d3.select(""svg"").append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

            const x = d3.scalePoint()
                .domain(data.map(d => d[""Quarter""]))
                .range([0, width])
                .padding(0.5);

            const y = d3.scaleLinear()
                .domain([0, d3.max(data, d => +d[""Enrollment Number""])])
                .nice()
                .range([height, 0]);

            const color = d3.scaleOrdinal(d3.schemeCategory10);

            const line = d3.line()
                .x(d => x(d[""Quarter""]))
                .y(d => y(+d[""Enrollment Number""]));

            svg.append(""g"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));
            
            svg.append(""g"")
                .call(d3.axisLeft(y));

            const educationLevels = Array.from(nestedData.keys());

            educationLevels.forEach(educationLevel => {
                svg.append(""path"")
                    .datum(nestedData.get(educationLevel))
                    .attr(""class"", ""line"")
                    .attr(""d"", line)
                    .attr(""stroke"", color(educationLevel))
                    .attr(""fill"", ""none"");

                svg.append(""text"")
                    .attr(""x"", width - 60)
                    .attr(""y"", () => y(nestedData.get(educationLevel)[nestedData.get(educationLevel).length - 1][""Enrollment Number""]))
                    .text(educationLevel)
                    .attr(""fill"", color(educationLevel));
            });
        });
    </script>
</body>
</html>
```"
3,bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Bar Chart that visualizes the Enrollment Number for each Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Bar Chart of Enrollment Numbers</title>
    <script src=""https://d3js.org/d3.v6.min.js""></script>
    <style>
        .bar {
            fill: steelblue;
        }

        .bar:hover {
            fill: orange;
        }

        .axis--x path {
            display: none;
        }

        .axis--y text {
            font-size: 12px;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""400""></svg>
    <script>
        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            const filteredData = data.filter(d => d[""Quarter""] === ""Q2-2021"");
            
            const enrollmentData = d3.rollup(filteredData, 
                v => d3.sum(v, d => +d[""Enrollment Number""]), 
                d => d[""Education Level""]
            );

            const categories = Array.from(enrollmentData.keys());
            const values = Array.from(enrollmentData.values());

            const svg = d3.select(""svg""),
                margin = {top: 20, right: 30, bottom: 40, left: 40},
                width = +svg.attr(""width"") - margin.left - margin.right,
                height = +svg.attr(""height"") - margin.top - margin.bottom;

            const x = d3.scaleBand()
                .domain(categories)
                .range([0, width])
                .padding(0.1);

            const y = d3.scaleLinear()
                .domain([0, d3.max(values)])
                .nice()
                .range([height, 0]);

            const g = svg.append(""g"")
                .attr(""transform"", `translate(${margin.left},${margin.top})`);

            g.append(""g"")
                .selectAll("".bar"")
                .data(values)
                .enter().append(""rect"")
                .attr(""class"", ""bar"")
                .attr(""x"", (d, i) => x(categories[i]))
                .attr(""y"", d => y(d))
                .attr(""width"", x.bandwidth())
                .attr(""height"", d => height - y(d));

            g.append(""g"")
                .attr(""class"", ""axis axis--x"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));

            g.append(""g"")
                .attr(""class"", ""axis axis--y"")
                .call(d3.axisLeft(y));
        });
    </script>
</body>
</html>
```"
4,pie chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Pie Chart that visualizes the proportion of Enrollment Number contributed by each Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Enrollment Pie Chart</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .arc {
            stroke: #fff;
        }
    </style>
</head>
<body>
    <h1>Enrollment Proportion by Education Level (Q2-2021)</h1>
    <svg width=""600"" height=""600""></svg>
    <script>
        const width = 600;
        const height = 600;
        const radius = Math.min(width, height) / 2;

        const svg = d3.select(""svg"")
            .attr(""viewBox"", `0 0 ${width} ${height}`)
            .append(""g"")
            .attr(""transform"", `translate(${width / 2}, ${height / 2})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            const filteredData = data.filter(d => d.Quarter === ""Q2-2021"");

            const enrollmentByLevel = d3.nest()
                .key(d => d['Education Level'])
                .rollup(v => d3.sum(v, d => +d['Enrollment Number']))
                .entries(filteredData);

            const pie = d3.pie()
                .value(d => d.value);

            const arc = d3.arc()
                .outerRadius(radius - 10)
                .innerRadius(0);

            const g = svg.selectAll("".arc"")
                .data(pie(enrollmentByLevel))
                .enter().append(""g"")
                .attr(""class"", ""arc"");

            g.append(""path"")
                .attr(""d"", arc)
                .style(""fill"", (d, i) => d3.schemeCategory10[i]);

            g.append(""text"")
                .attr(""transform"", d => `translate(${arc.centroid(d)})`)
                .attr(""dy"", "".35em"")
                .text(d => d.data.key);
        });
    </script>
</body>
</html>
```"
5,donut chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Donut Chart that visualizes the distribution of Enrollment Number among Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Donut Chart</title>
    <script src=""https://d3js.org/d3.v6.min.js""></script>
    <style>
        .arc {
            stroke: #fff;
        }
    </style>
</head>
<body>
    <svg width=""600"" height=""600""></svg>
    <script>
        const width = 600;
        const height = 600;
        const radius = Math.min(width, height) / 2 - 40;

        const svg = d3.select(""svg"")
                      .append(""g"")
                      .attr(""transform"", `translate(${width / 2}, ${height / 2})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            const filteredData = data.filter(d => d.Quarter === ""Q2-2021"");
            const enrollmentData = d3.nest()
                                      .key(d => d[""Education Level""])
                                      .rollup(v => d3.sum(v, d => +d[""Enrollment Number""]))
                                      .entries(filteredData);

            const totalEnrollment = d3.sum(enrollmentData, d => d.value);

            const color = d3.scaleOrdinal()
                            .domain(enrollmentData.map(d => d.key))
                            .range(d3.schemeCategory10);

            const pie = d3.pie()
                          .value(d => d.value);
                          
            const arc = d3.arc()
                          .innerRadius(radius * 0.4)
                          .outerRadius(radius);

            const paths = svg.selectAll(""path"")
                             .data(pie(enrollmentData))
                             .enter()
                             .append(""path"")
                             .attr(""class"", ""arc"")
                             .attr(""d"", arc)
                             .attr(""fill"", d => color(d.data.key))
                             .attr(""stroke"", ""#fff"")
                             .attr(""stroke-width"", 2);

            svg.selectAll(""text"")
               .data(pie(enrollmentData))
               .enter()
               .append(""text"")
               .attr(""transform"", d => `translate(${arc.centroid(d)})`)
               .attr(""dy"", ""0.35em"")
               .text(d => `${d.data.key}: ${((d.data.value / totalEnrollment) * 100).toFixed(1)}%`);
        });
    </script>
</body>
</html>
```"
6,coxcomb chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Coxcomb Chart(polar area chart) to compare the Enrollment Number of different Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Coxcomb Chart</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .arc {
            fill: steelblue;
            stroke: white;
            stroke-width: 1px;
        }
    </style>
</head>
<body>
    <script>
        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(function(data) {
            const filteredData = data.filter(d => d.Quarter === ""Q2 2021"");

            const enrollmentData = d3.rollup(filteredData, v => d3.sum(v, d => +d[""Enrollment Number""]), d => d[""Education Level""]);
            const levels = Array.from(enrollmentData.keys());
            const enrollments = Array.from(enrollmentData.values());

            const width = 600, height = 600, outerRadius = Math.min(width, height) / 2 - 10, innerRadius = 70;

            const color = d3.scaleOrdinal(d3.schemeCategory10);

            const svg = d3.select(""body"").append(""svg"")
                .attr(""width"", width)
                .attr(""height"", height)
                .append(""g"")
                .attr(""transform"", `translate(${width / 2}, ${height / 2})`);

            const pie = d3.pie()
                .value(d => d)
                .sort(null);

            const arc = d3.arc()
                .innerRadius(innerRadius)
                .outerRadius(d => outerRadius * (d.data / d3.sum(enrollments)));

            const arcs = svg.selectAll("".arc"")
                .data(pie(enrollments))
                .enter().append(""g"")
                .attr(""class"", ""arc"");

            arcs.append(""path"")
                .attr(""d"", arc)
                .attr(""fill"", (d, i) => color(i));

            arcs.append(""text"")
                .attr(""transform"", d => `translate(${arc.centroid(d)})`)
                .attr(""dy"", ""0.35em"")
                .text((d, i) => levels[i]);

        });
    </script>
</body>
</html>
```"
7,radar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Radar Chart to compare the Enrollment Number of different Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Radar Chart for Enrollment Numbers</title>
    <script src=""https://d3js.org/d3.v6.min.js""></script>
    <style>
        .radar-chart {
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <svg class=""radar-chart"" width=""600"" height=""600""></svg>
    <script>
        const width = 600;
        const height = 600;
        const maxRadius = Math.min(width / 2, height / 2);
        const color = d3.scaleOrdinal(d3.schemeCategory10);

        const radarChartOptions = {
            w: width,
            h: height,
            radius: maxRadius,
            levels: 5,
            format: '.0f',
            axisLabel: 'Enrollment Number'
        };

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            const filteredData = data.filter(d => d['Quarter'] === 'Q2-2021');
            const educationLevels = [...new Set(filteredData.map(d => d['Education Level']))];

            const enrollmentData = educationLevels.map(level => {
                return {
                    axis: level,
                    value: +filteredData.find(d => d['Education Level'] === level)['Enrollment Number']
                };
            });

            const radarChart = d3.radialLine()
                .radius(d => d.value)
                .angle((d, i) => i * (2 * Math.PI / enrollmentData.length));

            const svg = d3.select('.radar-chart').append('g')
                .attr('transform', `translate(${width / 2}, ${height / 2})`);

            svg.selectAll('.area')
                .data([enrollmentData])
                .enter().append('path')
                .attr('class', 'area')
                .attr('d', radarChart)
                .style('fill', color(0))
                .style('fill-opacity', 0.5)
                .style('stroke', color(0));

            const axis = svg.selectAll('.axis')
                .data(enrollmentData)
                .enter().append('g')
                .attr('class', 'axis');

            axis.append('line')
                .attr('x1', 0)
                .attr('y1', 0)
                .attr('x2', d => radarChart.radius(d.value))
                .attr('y2', 0)
                .attr('transform', (d, i) => `rotate(${i * (360 / enrollmentData.length)})`)
                .style('stroke', '#999');

            axis.append('text')
                .attr('class', 'legend')
                .attr('dy', '-10')
                .attr('transform', (d, i) => `rotate(${i * (360 / enrollmentData.length)})`)
                .attr('x', d => radarChart.radius(d.value))
                .text(d => d.axis)
                .style('font-family', 'sans-serif')
                .style('font-size', '10px')
                .style('text-anchor', 'middle');
        });
    </script>
</body>
</html>
```"
8,streamgraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Streamgraph that visualizes the changes of Enrollment Number over the Quarter for each Education Level.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Streamgraph of Educational Enrollment</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .stream {
            opacity: 0.7;
        }
    </style>
</head>
<body>
    <script>
        const margin = {top: 20, right: 30, bottom: 40, left: 50},
              width = 800 - margin.left - margin.right,
              height = 400 - margin.top - margin.bottom;

        const svg = d3.select(""body"").append(""svg"")
            .attr(""width"", width + margin.left + margin.right)
            .attr(""height"", height + margin.top + margin.bottom)
          .append(""g"")
            .attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            const nestedData = d3.group(data, d => d['Education Level']);
            
            const parseQuarter = d3.timeParse(""%Y Q%q"");
            const enrollmentData = Array.from(nestedData, ([key, values]) => {
                return {
                    key,
                    values: values.map(d => ({ 
                        quarter: parseQuarter(d['Quarter']),
                        enrollment: +d['Enrollment Number'] 
                    }))
                };
            });

            const x = d3.scaleTime()
                .domain(d3.extent(enrollmentData[0].values, d => d.quarter))
                .range([0, width]);

            const y = d3.scaleLinear()
                .domain([0, d3.max(enrollmentData, d => d3.max(d.values, v => v.enrollment))])
                .range([height, 0]);

            const area = d3.area()
                .x(d => x(d.quarter))
                .y0(height)
                .y1(d => y(d.enrollment))
                .curve(d3.curveBasis);

            const color = d3.scaleOrdinal(d3.schemeCategory10);

            svg.selectAll(""path"")
                .data(enrollmentData)
                .enter().append(""path"")
                .attr(""class"", ""stream"")
                .attr(""d"", d => area(d.values))
                .attr(""fill"", (d, i) => color(i))
                .attr(""opacity"", 0.7);

            svg.append(""g"")
                .attr(""class"", ""axis axis--x"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x).ticks(5));

            svg.append(""g"")
                .attr(""class"", ""axis axis--y"")
                .call(d3.axisLeft(y));
        });
    </script>
</body>
</html>
```"
9,slopegraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Slopegraph to compare the Enrollment Number between Q1-2020 and Q2-2020 for each Education Level.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Slopegraph Example</title>
    <script src=""https://d3js.org/d3.v6.min.js""></script>
    <style>
        .slope {
            stroke: steelblue;
            stroke-width: 2;
        }
        .point {
            fill: steelblue;
            r: 4;
        }
        .axis {
            font: 12px sans-serif;
        }
        .text {
            font: 12px sans-serif;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""400""></svg>
    <script>
        const svg = d3.select(""svg"");
        const margin = { top: 20, right: 30, bottom: 30, left: 50 };
        const width = +svg.attr(""width"") - margin.left - margin.right;
        const height = +svg.attr(""height"") - margin.top - margin.bottom;
        const g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            const filteredData = data.filter(d => (d.Quarter === ""Q1-2020"" || d.Quarter === ""Q2-2020"") && d[""Education Level""]);

            const enrollmentData = {};
            filteredData.forEach(d => {
                const level = d[""Education Level""];
                const quarter = d.Quarter;
                const enrollment = +d[""Enrollment Number""];
                if (!enrollmentData[level]) {
                    enrollmentData[level] = {};
                }
                enrollmentData[level][quarter] = enrollment;
            });

            const points = Object.keys(enrollmentData).map(level => ({
                level: level,
                Q1: enrollmentData[level][""Q1-2020""],
                Q2: enrollmentData[level][""Q2-2020""]
            }));

            const xScale = d3.scaleLinear()
                .domain([0, d3.max(points, d => Math.max(d.Q1, d.Q2))])
                .range([0, width]);
            
            const yScale = d3.scaleBand()
                .domain(points.map(d => d.level))
                .range([0, height])
                .padding(0.1);

            g.append(""g"")
                .selectAll("".slope"")
                .data(points)
                .enter().append(""line"")
                .attr(""class"", ""slope"")
                .attr(""x1"", d => xScale(d.Q1))
                .attr(""y1"", d => yScale(d.level) + yScale.bandwidth() / 2)
                .attr(""x2"", d => xScale(d.Q2))
                .attr(""y2"", d => yScale(d.level) + yScale.bandwidth() / 2);

            g.append(""g"")
                .selectAll("".point"")
                .data(points)
                .enter().append(""circle"")
                .attr(""class"", ""point"")
                .attr(""cx"", d => xScale(d.Q1))
                .attr(""cy"", d => yScale(d.level) + yScale.bandwidth() / 2)
                .attr(""r"", 4);

            g.append(""g"")
                .selectAll("".point"")
                .data(points)
                .enter().append(""circle"")
                .attr(""class"", ""point"")
                .attr(""cx"", d => xScale(d.Q2))
                .attr(""cy"", d => yScale(d.level) + yScale.bandwidth() / 2)
                .attr(""r"", 4);

            g.append(""g"")
                .attr(""class"", ""axis"")
                .attr(""transform"", `translate(0, ${height})`)
                .call(d3.axisBottom(xScale));

            g.append(""g"")
                .attr(""class"", ""axis"")
                .call(d3.axisLeft(yScale));
        });
    </script>
</body>
</html>
```"
10,heatmap,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Heatmap that visualizes the Enrollment Number across Education Level and Quarters.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Heatmap of Enrollment Numbers</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .cell {
            stroke: #fff;
        }
        .axis {
            font: 10px sans-serif;
        }
    </style>
</head>
<body>
    <h1>Enrollment Number Heatmap</h1>
    <svg width=""800"" height=""400""></svg>
    <script>
        const margin = {top: 20, right: 20, bottom: 30, left: 40},
              width = 800 - margin.left - margin.right,
              height = 400 - margin.top - margin.bottom;

        const svg = d3.select(""svg"")
            .append(""g"")
            .attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            const educationLevels = Array.from(new Set(data.map(d => d['Education Level'])));
            const quarters = Array.from(new Set(data.map(d => d['Quarter'])));
            const matrix = [];

            educationLevels.forEach(educationLevel => {
                const tempArray = [];
                quarters.forEach(quarter => {
                    const entry = data.find(d => d['Education Level'] === educationLevel && d['Quarter'] === quarter);
                    tempArray.push(entry ? +entry['Enrollment Number'] : 0);
                });
                matrix.push(tempArray);
            });

            const x = d3.scaleBand()
                .range([0, width])
                .domain(quarters)
                .padding(0.05);

            const y = d3.scaleBand()
                .range([height, 0])
                .domain(educationLevels)
                .padding(0.05);

            const colorScale = d3.scaleSequential(d3.interpolateYlGnBu)
                .domain([0, d3.max(matrix.flat())]);

            svg.append(""g"")
                .selectAll()
                .data(matrix.flat())
                .enter()
                .append(""rect"")
                .attr(""class"", ""cell"")
                .attr(""x"", (d, i) => x(quarters[i % quarters.length]))
                .attr(""y"", (d, i) => y(educationLevels[Math.floor(i / quarters.length)]))
                .attr(""width"", x.bandwidth())
                .attr(""height"", y.bandwidth())
                .attr(""fill"", d => colorScale(d));

            svg.append(""g"")
                .attr(""class"", ""x axis"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));

            svg.append(""g"")
                .attr(""class"", ""y axis"")
                .call(d3.axisLeft(y));
        });
    </script>
</body>
</html>
```"
11,bar chart+stacked bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Stacked Bar Chart that visualizes the given data table.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Stacked Bar Chart</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .bar {
            display: block;
            width: 20px;
            margin: 1px;
        }
        .axis {
            font-size: 12px;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""400""></svg>
    <script>
        const svg = d3.select(""svg""),
              margin = {top: 20, right: 30, bottom: 40, left: 40},
              width = +svg.attr(""width"") - margin.left - margin.right,
              height = +svg.attr(""height"") - margin.top - margin.bottom;

        const x = d3.scaleBand().range([0, width]).padding(0.1);
        const y = d3.scaleLinear().range([height, 0]);
        
        const z = d3.scaleOrdinal(d3.schemeCategory10);

        const g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            data.forEach(d => {
                d['Enrollment Number'] = +d['Enrollment Number'];
                d.Revenue = +d.Revenue;
                d['Operating Costs'] = +d['Operating Costs'];
                d.Profit = +d.Profit;
            });
            
            const keys = Object.keys(data[0]).filter(key => key !== 'Quarter' && key !== 'Education Level');

            const stackedData = d3.stack().keys(keys)(data);
            x.domain(data.map(d => d['Quarter']));
            y.domain([0, d3.max(stackedData, d => d3.max(d, d => d[1]))]).nice();
            
            g.append(""g"").selectAll(""g"")
                .data(stackedData)
                .enter().append(""g"")
                .attr(""fill"", (d, i) => z(i))
                .selectAll(""rect"")
                .data(d => d)
                .enter().append(""rect"")
                .attr(""class"", ""bar"")
                .attr(""x"", d => x(d.data['Quarter']))
                .attr(""y"", d => y(d[1]))
                .attr(""height"", d => y(d[0]) - y(d[1]))
                .attr(""width"", x.bandwidth());

            g.append(""g"")
                .attr(""class"", ""axis axis--x"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));

            g.append(""g"")
                .attr(""class"", ""axis axis--y"")
                .call(d3.axisLeft(y));
        });
    </script>
</body>
</html>
```"
12,bar chart+horizontal bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Horizontal Bar Chart that visualizes the Enrollment Number for each Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Enrollment Numbers by Education Level - Q2 2021</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .bar {
            fill: steelblue;
        }
        .bar:hover {
            fill: orange;
        }
        .axis-label {
            font: 10px sans-serif;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""500""></svg>
    <script>
        const svg = d3.select(""svg""),
              margin = {top: 20, right: 30, bottom: 40, left: 100},
              width = +svg.attr(""width"") - margin.left - margin.right,
              height = +svg.attr(""height"") - margin.top - margin.bottom;

        const x = d3.scaleLinear().range([0, width]),
              y = d3.scaleBand().range([0, height]).padding(0.1);

        const g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"").then(data => {
            data = data.filter(d => d.Quarter === ""Q2-2021"");
            data.forEach(d => {
                d['Enrollment Number'] = +d['Enrollment Number'];
            });

            x.domain([0, d3.max(data, d => d['Enrollment Number'])]);
            y.domain(data.map(d => d['Education Level']));

            g.append(""g"")
                .attr(""class"", ""x axis"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));

            g.append(""g"")
                .attr(""class"", ""y axis"")
                .call(d3.axisLeft(y));

            g.selectAll("".bar"")
                .data(data)
                .enter().append(""rect"")
                .attr(""class"", ""bar"")
                .attr(""x"", 0)
                .attr(""y"", d => y(d['Education Level']))
                .attr(""width"", d => x(d['Enrollment Number']))
                .attr(""height"", y.bandwidth());
        });
    </script>
</body>
</html>
```"

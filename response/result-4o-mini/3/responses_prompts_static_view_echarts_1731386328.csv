Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Scatterplot that visualizes the relationship between Units Sold and Revenue.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Scatterplot of Units Sold vs Revenue</title>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/echarts/5.3.3/echarts.min.js""></script>
</head>
<body>
    <div id=""scatterPlot"" style=""width: 100%; height: 500px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1);
                const unitsSold = [];
                const revenue = [];

                rows.forEach(row => {
                    const columns = row.split(',');
                    if (columns.length > 1) {
                        unitsSold.push(parseFloat(columns[2]));
                        revenue.push(parseFloat(columns[3]));
                    }
                });

                const scatterPlot = echarts.init(document.getElementById('scatterPlot'));
                const option = {
                    title: {
                        text: 'Scatterplot of Units Sold vs Revenue'
                    },
                    tooltip: {},
                    xAxis: {
                        name: 'Units Sold',
                        type: 'value'
                    },
                    yAxis: {
                        name: 'Revenue',
                        type: 'value'
                    },
                    series: [{
                        symbolSize: 10,
                        data: unitsSold.map((units, index) => [units, revenue[index]]),
                        type: 'scatter'
                    }]
                };
                scatterPlot.setOption(option);
            });
    </script>
</body>
</html>
```"
2,line chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Line Chart that visualizes the trend of Units Sold over the Date for each Store Location.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Units Sold Line Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 100%; height: 600px;""></div>
    <script>
        async function fetchData() {
            const response = await fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv');
            const data = await response.text();
            const parsedData = parseCSV(data);
            drawChart(parsedData);
        }

        function parseCSV(data) {
            const lines = data.split('\n');
            const result = [];
            const headers = lines[0].split(',');
            for (let i = 1; i < lines.length; i++) {
                const currentLine = lines[i].split(',');
                if(currentLine.length === headers.length) {
                    const entry = {};
                    headers.forEach((header, index) => {
                        entry[header.trim()] = currentLine[index].trim();
                    });
                    result.push(entry);
                }
            }
            return result;
        }

        function drawChart(data) {
            const unitsSold = {};
            const dates = new Set();

            data.forEach(entry => {
                const date = entry['Date'];
                const store = entry['Store Location'];
                const units = parseInt(entry['Units Sold'], 10) || 0;

                dates.add(date);
                if (!unitsSold[store]) {
                    unitsSold[store] = [];
                }
                unitsSold[store].push({ date, units });
            });

            const series = Object.keys(unitsSold).map(store => {
                return {
                    name: store,
                    type: 'line',
                    data: Array.from(dates).map(date => {
                        const entry = unitsSold[store].find(e => e.date === date);
                        return entry ? entry.units : 0;
                    }),
                };
            });

            const option = {
                title: {
                    text: 'Units Sold Over Time',
                },
                tooltip: {
                    trigger: 'axis',
                },
                legend: {
                    data: Object.keys(unitsSold),
                },
                xAxis: {
                    type: 'category',
                    data: Array.from(dates),
                },
                yAxis: {
                    type: 'value',
                },
                series: series,
            };

            const chart = echarts.init(document.getElementById('main'));
            chart.setOption(option);
        }

        fetchData();
    </script>
</body>
</html>
```"
3,bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Bar Chart that visualizes the Units Sold for each Store Location in 2021-01-01.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Units Sold by Store Location</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 600px;height:400px;""></div>

    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const lines = data.split('\n').slice(1);
                const unitsSoldData = {};
                
                lines.forEach(line => {
                    const [date, storeLocation, unitsSold] = line.split(',');

                    if (date === '2021-01-01') {
                        unitsSoldData[storeLocation] = (unitsSoldData[storeLocation] || 0) + parseInt(unitsSold, 10);
                    }
                });

                const storeLocations = Object.keys(unitsSoldData);
                const unitsSold = storeLocations.map(location => unitsSoldData[location]);

                const chart = echarts.init(document.getElementById('main'));
                chart.setOption({
                    title: {
                        text: 'Units Sold by Store Location on 2021-01-01'
                    },
                    tooltip: {},
                    xAxis: {
                        type: 'category',
                        data: storeLocations
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: [{
                        name: 'Units Sold',
                        type: 'bar',
                        data: unitsSold
                    }]
                });
            });
    </script>
</body>
</html>
```"
4,pie chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Pie Chart that visualizes the proportion of Units Sold contributed by each Store Location in 2021-01-01.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Units Sold by Store Location on 2021-01-01</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 600px;height:400px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1);
                const salesData = {};

                rows.forEach(row => {
                    const cols = row.split(',');
                    if (cols[0] === '2021-01-01') {
                        const storeLocation = cols[1];
                        const unitsSold = parseInt(cols[2], 10);
                        if (salesData[storeLocation]) {
                            salesData[storeLocation] += unitsSold;
                        } else {
                            salesData[storeLocation] = unitsSold;
                        }
                    }
                });

                const seriesData = Object.entries(salesData).map(([store, units]) => ({ name: store, value: units }));

                const chartDom = document.getElementById('main');
                const myChart = echarts.init(chartDom);
                const option = {
                    title: {
                        text: 'Units Sold by Store Location on 2021-01-01',
                        subtext: 'Source: Daily Sales Data',
                        left: 'center'
                    },
                    tooltip: {
                        trigger: 'item'
                    },
                    series: [
                        {
                            name: 'Store Location',
                            type: 'pie',
                            radius: '50%',
                            data: seriesData,
                            emphasis: {
                                itemStyle: {
                                    shadowBlur: 10,
                                    shadowOffsetX: 0,
                                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                                }
                            }
                        }
                    ]
                };

                myChart.setOption(option);
            });
    </script>
</body>
</html>
```"
5,donut chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Donut Chart that visualizes the distribution of Units Sold among Store Location in 2021-01-01.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Donut Chart Example</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 600px; height: 400px;""></div>

    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1);
                const salesData = rows.map(row => {
                    const columns = row.split(',');
                    return {
                        date: columns[0],
                        storeLocation: columns[1],
                        unitsSold: parseInt(columns[2], 10),
                    };
                });

                const filteredData = salesData.filter(entry => entry.date === '2021-01-01');
                const storeSales = {};

                filteredData.forEach(entry => {
                    storeSales[entry.storeLocation] = (storeSales[entry.storeLocation] || 0) + entry.unitsSold;
                });

                const chartData = Object.entries(storeSales).map(([storeLocation, unitsSold]) => ({
                    name: storeLocation,
                    value: unitsSold
                }));

                const myChart = echarts.init(document.getElementById('main'));
                const option = {
                    title: {
                        text: 'Distribution of Units Sold on 2021-01-01',
                        left: 'center'
                    },
                    tooltip: {
                        trigger: 'item'
                    },
                    legend: {
                        orient: 'vertical',
                        left: 'left'
                    },
                    series: [
                        {
                            name: 'Units Sold',
                            type: 'pie',
                            radius: ['40%', '70%'],
                            avoidLabelOverlap: false,
                            label: {
                                show: false,
                                position: 'center'
                            },
                            emphasis: {
                                label: {
                                    show: true,
                                    fontSize: '30',
                                    fontWeight: 'bold'
                                }
                            },
                            labelLine: {
                                show: false
                            },
                            data: chartData,
                        }
                    ]
                };

                myChart.setOption(option);
            });
    </script>
</body>
</html>
```"
6,coxcomb chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Coxcomb Chart(polar area chart) to compare the Units Sold of different Store Location in 2021-01-01.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Coxcomb Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 600px;height:400px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1);
                const filteredData = rows
                    .map(row => {
                        const cols = row.split(',');
                        return {
                            date: cols[0],
                            storeLocation: cols[1],
                            unitsSold: parseInt(cols[2]),
                        };
                    })
                    .filter(item => item.date === '2021-01-01');

                const storeLocations = [];
                const unitsSold = [];

                filteredData.forEach(item => {
                    storeLocations.push(item.storeLocation);
                    unitsSold.push(item.unitsSold);
                });

                const myChart = echarts.init(document.getElementById('main'));
                const option = {
                    title: {
                        text: 'Units Sold by Store Location on 2021-01-01',
                        left: 'center'
                    },
                    polar: {},
                    angleAxis: {
                        type: 'category',
                        data: storeLocations,
                        z: 10
                    },
                    radiusAxis: {
                        max: Math.max(...unitsSold) * 1.2
                    },
                    series: [{
                        type: 'bar',
                        data: unitsSold,
                        coordinateSystem: 'polar',
                        name: 'Units Sold',
                        itemStyle: {
                            color: '#3B87E6'
                        },
                        emphasis: {
                            itemStyle: {
                                color: '#F76C6C'
                            }
                        }
                    }],
                    tooltip: {
                        trigger: 'item',
                        formatter: function (params) {
                            return `${params.name}<br/>Units Sold: ${params.value}`;
                        }
                    }
                };

                myChart.setOption(option);
            });
    </script>
</body>
</html>
```"
7,radar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Radar Chart to compare the Units Sold of different Store Location in 2021-01-01.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Radar Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
    <style>
        #main {
            width: 600px;
            height: 400px;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div id=""main""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
        .then(response => response.text())
        .then(data => {
            const rows = data.split('\n').slice(1);
            const unitsSold = {};

            rows.forEach(row => {
                const columns = row.split(',');
                const date = columns[0];
                const storeLocation = columns[1];
                const units = parseInt(columns[2]);

                if (date === '2021-01-01' && !isNaN(units)) {
                    if (!unitsSold[storeLocation]) {
                        unitsSold[storeLocation] = 0;
                    }
                    unitsSold[storeLocation] += units;
                }
            });

            const storeLocations = Object.keys(unitsSold);
            const units = storeLocations.map(location => unitsSold[location]);

            const option = {
                title: {
                    text: 'Units Sold Comparison on 2021-01-01',
                    subtext: 'By Store Location',
                    left: 'center'
                },
                tooltip: {},
                radar: {
                    indicator: storeLocations.map(location => ({ name: location })),
                    center: ['50%', '50%'],
                    radius: '70%'
                },
                series: [{
                    name: 'Units Sold',
                    type: 'radar',
                    data: [{
                        value: units,
                        name: 'Units Sold'
                    }]
                }]
            };

            const chart = echarts.init(document.getElementById('main'));
            chart.setOption(option);
        });
    </script>
</body>
</html>
```"
8,streamgraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Streamgraph that visualizes the changes of Units Sold over the Date for each Store Location.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Streamgraph of Units Sold by Store Location</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1).filter(row => row);
                const parsedData = rows.map(row => {
                    const cols = row.split(',');
                    return {
                        Date: cols[0],
                        StoreLocation: cols[1],
                        UnitsSold: +cols[2],
                    };
                });

                const dates = [...new Set(parsedData.map(d => d.Date))];
                const storeLocations = [...new Set(parsedData.map(d => d.StoreLocation))];
                
                const seriesData = storeLocations.map(location => {
                    return {
                        name: location,
                        type: 'line',
                        stack: 'total',
                        areaStyle: {},
                        data: dates.map(date => {
                            const entry = parsedData.find(d => d.Date === date && d.StoreLocation === location);
                            return entry ? entry.UnitsSold : 0;
                        }),
                    };
                });
                
                const option = {
                    title: {
                        text: 'Units Sold Over Time by Store Location',
                        left: 'center'
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    legend: {
                        data: storeLocations,
                        left: 'left'
                    },
                    xAxis: {
                        type: 'category',
                        data: dates,
                        name: 'Date',
                        axisLabel: {
                            rotate: 45
                        }
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Units Sold'
                    },
                    series: seriesData
                };

                const myChart = echarts.init(document.getElementById('main'));
                myChart.setOption(option);
            });
    </script>
</body>
</html>
```"
9,slopegraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Slopegraph to compare the Units Sold between 2021-01-04 and 2021-01-05 for each Store Location.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Slopegraph of Units Sold</title>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/echarts/5.3.3/echarts.min.js""></script>
</head>
<body>
    <div id=""slopegraph"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const lines = data.split('\n').slice(1);
                const salesData = {};
                
                lines.forEach(line => {
                    const [date, storeLocation, unitsSold] = line.split(',');
                    if (date === '2021-01-04' || date === '2021-01-05') {
                        if (!salesData[storeLocation]) {
                            salesData[storeLocation] = {};
                        }
                        salesData[storeLocation][date] = parseInt(unitsSold);
                    }
                });

                const seriesData = [];
                const xAxisData = ['2021-01-04', '2021-01-05'];

                for (const store in salesData) {
                    seriesData.push({
                        name: store,
                        type: 'line',
                        data: [salesData[store]['2021-01-04'], salesData[store]['2021-01-05']],
                        label: {
                            show: true,
                            formatter: store
                        }
                    });
                }

                const myChart = echarts.init(document.getElementById('slopegraph'));
                myChart.setOption({
                    title: {
                        text: 'Units Sold Comparison on 2021-01-04 and 2021-01-05'
                    },
                    tooltip: {},
                    xAxis: {
                        type: 'category',
                        data: xAxisData
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: seriesData
                });
            });
    </script>
</body>
</html>
```"
10,heatmap,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Heatmap that visualizes the Units Sold across Store Location and Dates.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Heatmap Visualization</title>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/echarts/5.3.3/echarts.min.js""></script>
</head>
<body>
    <div id=""heatmap"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1).filter(row => row);
                const dates = [...new Set(rows.map(row => row.split(',')[0]))];
                const storeLocations = [...new Set(rows.map(row => row.split(',')[1]))];
                
                const heatmapData = [];
                
                rows.forEach(row => {
                    const [date, storeLocation, unitsSold] = row.split(',');
                    const units = parseInt(unitsSold);
                    const dateIndex = dates.indexOf(date);
                    const storeIndex = storeLocations.indexOf(storeLocation);
                    heatmapData.push([storeIndex, dateIndex, units]);
                });

                const option = {
                    tooltip: {
                        position: 'top'
                    },
                    animation: false,
                    grid: {
                        height: '50%',
                        width: '50%',
                        top: '10%',
                        left: '10%'
                    },
                    xAxis: {
                        type: 'category',
                        data: dates,
                        name: 'Date'
                    },
                    yAxis: {
                        type: 'category',
                        data: storeLocations,
                        name: 'Store Location'
                    },
                    visualMap: {
                        min: 0,
                        max: Math.max(...heatmapData.map(item => item[2])),
                        calculable: true,
                        orient: 'horizontal',
                        left: 'center',
                        bottom: '15%',
                        inRange: {
                            color: ['#ffffb2', '#fd8d3c', '#e31a1c']
                        }
                    },
                    series: [{
                        name: 'Units Sold',
                        type: 'heatmap',
                        data: heatmapData,
                        label: {
                            show: true
                        },
                        emphasis: {
                            itemStyle: {
                                borderColor: '#333',
                                borderWidth: 1
                            }
                        }
                    }]
                };

                const heatmap = echarts.init(document.getElementById('heatmap'));
                heatmap.setOption(option);
            });
    </script>
</body>
</html>
```"
11,bar chart+stacked bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Stacked Bar Chart that visualizes the given data table.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Stacked Bar Chart</title>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/echarts/5.3.3/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 100%;height:500px;""></div>

    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const rows = data.split('\n').slice(1);
                const categories = [...new Set(rows.map(row => row.split(',')[7]))];
                const dates = [...new Set(rows.map(row => row.split(',')[0]))];
                
                const seriesData = categories.map(category => {
                    return {
                        name: category,
                        type: 'bar',
                        stack: 'total',
                        data: dates.map(date => {
                            const totalUnits = rows.filter(row => {
                                const cols = row.split(',');
                                return cols[0] === date && cols[7] === category;
                            }).reduce((sum, row) => sum + parseInt(row.split(',')[2]), 0);
                            return totalUnits;
                        })
                    };
                });

                const option = {
                    title: {
                        text: 'Daily Sales Stacked Bar Chart',
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        data: categories
                    },
                    xAxis: {
                        type: 'category',
                        data: dates
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: seriesData
                };

                const myChart = echarts.init(document.getElementById('main'));
                myChart.setOption(option);
            });
    </script>
</body>
</html>
```"
12,bar chart+horizontal bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category
Your task is to create a Horizontal Bar Chart that visualizes the Units Sold for each Store Location in 2021-01-01.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv

The data table contains the following columns: Date,Store Location,Units Sold,Revenue,Profit,Operating Hours,Customer Visits,Product Category",ECharts,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Horizontal Bar Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""main"" style=""width: 800px;height:400px;""></div>
    <script>
        async function fetchData() {
            const response = await fetch('https://gist.githubusercontent.com/FFFFFancy/f31f77b8b8aa4d1898e5bd00dba3959f/raw/a79d3da79d62a68bdd96d94b4e985d67c336fd2c/Daily%2520Sales.csv');
            const data = await response.text();
            processData(data);
        }

        function processData(csv) {
            const lines = csv.split('\n').slice(1);
            const unitsSoldData = {};

            lines.forEach(line => {
                const [date, storeLocation, unitsSold] = line.split(',');
                if (date === '2021-01-01') {
                    unitsSoldData[storeLocation] = unitsSoldData[storeLocation] ? unitsSoldData[storeLocation] + parseInt(unitsSold) : parseInt(unitsSold);
                }
            });

            renderChart(unitsSoldData);
        }

        function renderChart(data) {
            const storeLocations = Object.keys(data);
            const unitsSold = Object.values(data);

            const chart = echarts.init(document.getElementById('main'));
            const option = {
                title: {
                    text: 'Units Sold for Each Store Location on 2021-01-01'
                },
                tooltip: {},
                xAxis: {
                    type: 'value',
                    name: 'Units Sold'
                },
                yAxis: {
                    type: 'category',
                    data: storeLocations
                },
                series: [{
                    name: 'Units Sold',
                    type: 'bar',
                    data: unitsSold,
                    itemStyle: {
                        color: '#4CAF50'
                    }
                }]
            };
            chart.setOption(option);
        }

        fetchData();
    </script>
</body>
</html>
```"

Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot+highlight,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Adoption Rate and Investment. And add the following interactive function: when the mouse hovers over a specific data point, the value of the data point will be highlighted on the axis.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Scatterplot of Adoption Rate vs Investment</title>
    <script src=""https://d3js.org/d3.v6.min.js""></script>
    <style>
        .scatter { fill: steelblue; }
        .dot:hover { fill: orange; }
        .axis--x path,
        .axis--y path { display: none; }
        .tooltip {
            position: absolute;
            text-align: center;
            width: 60px;
            height: 28px;
            padding: 2px;
            font: 12px sans-serif;
            background: lightsteelblue;
            border: 0px;
            border-radius: 8px;
            pointer-events: none;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""500""></svg>
    <script>
        const svg = d3.select(""svg""),
              margin = { top: 20, right: 30, bottom: 30, left: 40 },
              width = +svg.attr(""width"") - margin.left - margin.right,
              height = +svg.attr(""height"") - margin.top - margin.bottom,
              g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        const tooltip = d3.select(""body"").append(""div"").attr(""class"", ""tooltip"").style(""opacity"", 0);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
            data.forEach(d => {
                d['Adoption Rate'] = +d['Adoption Rate'];
                d['Investment'] = +d['Investment'];
            });

            const x = d3.scaleLinear()
                .domain([0, d3.max(data, d => d['Investment'])])
                .range([0, width]);

            const y = d3.scaleLinear()
                .domain([0, d3.max(data, d => d['Adoption Rate'])])
                .range([height, 0]);

            g.append(""g"")
                .attr(""class"", ""axis axis--x"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));

            g.append(""g"")
                .attr(""class"", ""axis axis--y"")
                .call(d3.axisLeft(y));

            g.selectAll("".dot"")
                .data(data)
                .enter().append(""circle"")
                .attr(""class"", ""dot"")
                .attr(""cx"", d => x(d['Investment']))
                .attr(""cy"", d => y(d['Adoption Rate']))
                .attr(""r"", 5)
                .on(""mouseover"", (event, d) => {
                    tooltip.transition().duration(200).style(""opacity"", .9);
                    tooltip.html(`Adoption Rate: ${d['Adoption Rate']}<br>Investment: ${d['Investment']}`)
                        .style(""left"", (event.pageX + 5) + ""px"")
                        .style(""top"", (event.pageY - 28) + ""px"");
                })
                .on(""mouseout"", () => tooltip.transition().duration(500).style(""opacity"", 0));
        });
    </script>
</body>
</html>
```"
2,scatterplot+brush,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Adoption Rate and Investment. And add the following interactive functions: Brushing this Scatterplot will show the selected data points.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Technology Adoption Scatterplot</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .scatterplot {
            display: block;
            margin: auto;
        }
        .axis {
            font-size: 12px;
        }
        .dot {
            stroke: #fff;
            stroke-width: 1.5px;
            cursor: pointer;
        }
        .selected {
            fill: orange;
        }
    </style>
</head>
<body>
    <svg class=""scatterplot"" width=""800"" height=""500""></svg>
    <script>
        const svg = d3.select("".scatterplot"");
        const margin = {top: 20, right: 30, bottom: 40, left: 40};
        const width = +svg.attr(""width"") - margin.left - margin.right;
        const height = +svg.attr(""height"") - margin.top - margin.bottom;
        const g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
            data.forEach(d => {
                d['Adoption Rate'] = +d['Adoption Rate'];
                d['Investment'] = +d['Investment'];
            });

            const x = d3.scaleLinear()
                .domain([0, d3.max(data, d => d['Investment'])])
                .range([0, width]);

            const y = d3.scaleLinear()
                .domain([0, d3.max(data, d => d['Adoption Rate'])])
                .range([height, 0]);

            g.append(""g"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x))
                .attr(""class"", ""axis"");

            g.append(""g"")
                .call(d3.axisLeft(y))
                .attr(""class"", ""axis"");

            const dots = g.selectAll("".dot"")
                .data(data)
                .enter().append(""circle"")
                .attr(""class"", ""dot"")
                .attr(""cx"", d => x(d['Investment']))
                .attr(""cy"", d => y(d['Adoption Rate']))
                .attr(""r"", 5)
                .on(""click"", function(event, d) {
                    d3.selectAll("".dot"").classed(""selected"", false);
                    d3.select(this).classed(""selected"", !d3.select(this).classed(""selected""));
                });

            g.append(""brush"")
                .call(d3.brush()
                    .extent([[0, 0], [width, height]])
                    .on(""brush end"", brushed));

            function brushed(event) {
                if (!event.selection) return;
                const [[x0, y0], [x1, y1]] = event.selection;
                dots.classed(""selected"", d => {
                    const xValue = x(d['Investment']);
                    const yValue = y(d['Adoption Rate']);
                    return xValue >= x0 && xValue <= x1 && yValue >= y0 && yValue <= y1;
                });
            }
        });
    </script>
</body>
</html>
```"
3,scatterplot+zoom,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Adoption Rate and Investment. And add the following interactive functions: the Scatterplot can be zoomed via the mouse wheel.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Scatterplot of Adoption Rate vs Investment</title>
    <script src=""https://d3js.org/d3.v6.min.js""></script>
    <style>
        .axis--x path,
        .axis--y path {
            display: none;
        }
        .dot {
            stroke: #000;
            stroke-width: 1.5px;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""500""></svg>
    <script>
        const svg = d3.select(""svg""),
              margin = {top: 20, right: 30, bottom: 30, left: 40},
              width = +svg.attr(""width"") - margin.left - margin.right,
              height = +svg.attr(""height"") - margin.top - margin.bottom,
              g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        const x = d3.scaleLinear().range([0, width]);
        const y = d3.scaleLinear().range([height, 0]);

        const xAxis = d3.axisBottom(x);
        const yAxis = d3.axisLeft(y);

        svg.append(""g"").attr(""class"", ""axis axis--x"").attr(""transform"", `translate(0,${height})`);
        svg.append(""g"").attr(""class"", ""axis axis--y"");

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
            data.forEach(d => {
                d[""Adoption Rate""] = +d[""Adoption Rate""];
                d[""Investment""] = +d[""Investment""];
            });

            x.domain(d3.extent(data, d => d[""Investment""])).nice();
            y.domain(d3.extent(data, d => d[""Adoption Rate""])).nice();

            g.append(""g"")
                .attr(""class"", ""axis axis--x"")
                .attr(""transform"", `translate(0,${height})`)
                .call(xAxis);

            g.append(""g"")
                .attr(""class"", ""axis axis--y"")
                .call(yAxis);

            g.selectAll("".dot"")
                .data(data)
                .enter().append(""circle"")
                .attr(""class"", ""dot"")
                .attr(""cx"", d => x(d[""Investment""]))
                .attr(""cy"", d => y(d[""Adoption Rate""]))
                .attr(""r"", 5)
                .attr(""fill"", ""steelblue"")
                .on(""mouseover"", function(event, d) {
                    d3.select(this).transition()
                        .duration(100)
                        .attr(""r"", 8)
                        .attr(""fill"", ""orange"");
                })
                .on(""mouseout"", function(event, d) {
                    d3.select(this).transition()
                        .duration(100)
                        .attr(""r"", 5)
                        .attr(""fill"", ""steelblue"");
                });

            // Zoom behavior
            const zoom = d3.zoom()
                .scaleExtent([1, 10])
                .on(""zoom"", (event) => {
                    g.attr(""transform"", event.transform);
                    g.select("".axis--x"").call(xAxis.scale(event.transform.rescaleX(x)));
                    g.select("".axis--y"").call(yAxis.scale(event.transform.rescaleY(y)));
                    g.selectAll("".dot"")
                        .attr(""cx"", d => event.transform.applyX(x(d[""Investment""])))
                        .attr(""cy"", d => event.transform.applyY(y(d[""Adoption Rate""])));
                });

            svg.call(zoom);
        });
    </script>
</body>
</html>
```"
4,scatterplot+tooltip,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot with external links and tooltips that visualizes the relationship between Adoption Rate and Investment. And add the following interactive functions: opening a Google search for the point that you click on.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Technology Adoption Scatterplot</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .point {
            fill: steelblue;
            stroke: white;
        }
        .tooltip {
            position: absolute;
            text-align: center;
            width: 120px;
            height: auto;
            padding: 5px;
            font: 12px sans-serif;
            background: lightsteelblue;
            border: 0px;
            border-radius: 8px;
            pointer-events: none;
        }
    </style>
</head>
<body>
<svg width=""800"" height=""500""></svg>
<div class=""tooltip"" style=""opacity: 0;""></div>
<script>
    const margin = {top: 20, right: 30, bottom: 30, left: 40},
          width = 800 - margin.left - margin.right,
          height = 500 - margin.top - margin.bottom;

    const svg = d3.select(""svg"")
                  .append(""g"")
                  .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    const x = d3.scaleLinear().range([0, width]);
    const y = d3.scaleLinear().range([height, 0]);

    const tooltip = d3.select("".tooltip"");

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
        data.forEach(d => {
            d[""Adoption Rate""] = +d[""Adoption Rate""];
            d[""Investment""] = +d[""Investment""];
        });

        x.domain(d3.extent(data, d => d[""Adoption Rate""])).nice();
        y.domain(d3.extent(data, d => d[""Investment""])).nice();

        svg.append(""g"")
           .attr(""class"", ""axis x"")
           .attr(""transform"", `translate(0, ${height})`)
           .call(d3.axisBottom(x));

        svg.append(""g"")
           .attr(""class"", ""axis y"")
           .call(d3.axisLeft(y));

        svg.selectAll("".point"")
           .data(data)
           .enter()
           .append(""circle"")
           .attr(""class"", ""point"")
           .attr(""cx"", d => x(d[""Adoption Rate""]))
           .attr(""cy"", d => y(d[""Investment""]))
           .attr(""r"", 5)
           .on(""mouseover"", function(event, d) {
               tooltip.transition().duration(200).style(""opacity"", .9);
               tooltip.html(`Type: ${d[""Technology Type""]}<br/>Adoption Rate: ${d[""Adoption Rate""]}<br/>Investment: ${d[""Investment""]}`)
                      .style(""left"", (event.pageX + 5) + ""px"")
                      .style(""top"", (event.pageY - 28) + ""px"");
           })
           .on(""mouseout"", function(d) {
               tooltip.transition().duration(500).style(""opacity"", 0);
           })
           .on(""click"", function(event, d) {
               const searchUrl = `https://www.google.com/search?q=${encodeURIComponent(d[""Technology Type""])}+adoption+rate`;
               window.open(searchUrl, '_blank');
           });
    });
</script>
</body>
</html>
```"
5,scatterplot+query widgets,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot with query widgets showing the Adoption Rate and Investment of the given dataset. Add a slider to represent the Year.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Technology Adoption Scatterplot</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .scatterplot {
            margin: 20px;
        }
        .axis line, .axis path {
            fill: none;
            shape-rendering: crispEdges;
        }
    </style>
</head>
<body>
    <div class=""scatterplot""></div>
    <input type=""range"" id=""yearSlider"" min=""2000"" max=""2023"" value=""2023"" step=""1"">
    <label for=""yearSlider"">Year: <span id=""yearValue"">2023</span></label>

    <script>
        const margin = { top: 20, right: 30, bottom: 30, left: 40 };
        const width = 800 - margin.left - margin.right;
        const height = 500 - margin.top - margin.bottom;

        const svg = d3.select("".scatterplot"").append(""svg"")
            .attr(""width"", width + margin.left + margin.right)
            .attr(""height"", height + margin.top + margin.bottom)
            .append(""g"")
            .attr(""transform"", `translate(${margin.left},${margin.top})`);

        const x = d3.scaleLinear().range([0, width]);
        const y = d3.scaleLinear().range([height, 0]);

        const xAxis = svg.append(""g"").attr(""class"", ""x axis"").attr(""transform"", `translate(0,${height})`);
        const yAxis = svg.append(""g"").attr(""class"", ""y axis"");

        const yearSlider = document.getElementById(""yearSlider"");
        const yearValue = document.getElementById(""yearValue"");

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
            data.forEach(d => {
                d['Adoption Rate'] = +d['Adoption Rate'];
                d['Investment'] = +d['Investment'];
                d['Year'] = +d['Year'];
            });

            function update(year) {
                const filteredData = data.filter(d => d.Year === year);
                
                x.domain(d3.extent(filteredData, d => d['Investment']));
                y.domain([0, d3.max(filteredData, d => d['Adoption Rate'])]);

                xAxis.call(d3.axisBottom(x));
                yAxis.call(d3.axisLeft(y));

                const circles = svg.selectAll(""circle"").data(filteredData, d => d['Technology Type']);

                circles.enter().append(""circle"")
                    .attr(""r"", 5)
                    .merge(circles)
                    .attr(""cx"", d => x(d['Investment']))
                    .attr(""cy"", d => y(d['Adoption Rate']))
                    .attr(""fill"", ""steelblue"");

                circles.exit().remove();
            }

            yearSlider.addEventListener(""input"", function() {
                yearValue.textContent = this.value;
                update(+this.value);
            });

            update(+yearSlider.value);
        });
    </script>
</body>
</html>
```"
6,scatterplot+animated,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot showing the Adoption Rate of Cloud Computing. Add animated transitions that connect these points using lines in order.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Cloud Computing Adoption Rate Scatterplot</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .dot {
            fill: steelblue;
        }
        .line {
            stroke: lightblue;
            stroke-width: 2;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""400""></svg>
    <script>
        const svg = d3.select(""svg"");
        const margin = { top: 20, right: 30, bottom: 30, left: 40 };
        const width = +svg.attr(""width"") - margin.left - margin.right;
        const height = +svg.attr(""height"") - margin.top - margin.bottom;

        const x = d3.scaleLinear().range([0, width]);
        const y = d3.scaleLinear().range([height, 0]);

        const g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
            const cloudData = data.filter(d => d[""Technology Type""] === ""Cloud Computing"").map(d => {
                return {
                    year: +d[""Year""],
                    adoptionRate: +d[""Adoption Rate""]
                };
            });

            x.domain(d3.extent(cloudData, d => d.year));
            y.domain([0, d3.max(cloudData, d => d.adoptionRate)]);

            g.append(""g"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));

            g.append(""g"")
                .call(d3.axisLeft(y));

            const line = d3.line()
                .x(d => x(d.year))
                .y(d => y(d.adoptionRate));

            g.selectAll("".dot"")
                .data(cloudData)
                .enter().append(""circle"")
                .attr(""class"", ""dot"")
                .attr(""cx"", d => x(d.year))
                .attr(""cy"", d => y(d.adoptionRate))
                .attr(""r"", 5)
                .style(""opacity"", 0)
                .transition()
                .duration(1000)
                .style(""opacity"", 1);

            g.append(""path"")
                .datum(cloudData)
                .attr(""class"", ""line"")
                .attr(""d"", line)
                .style(""opacity"", 0)
                .transition()
                .duration(1000)
                .style(""opacity"", 1);
        });
    </script>
</body>
</html>
```"
7,line chart+highlight,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a multi-series Line Chart with an interactive line highlight showing the Adoption Rate of the given dataset. Add the following interaction function: when the mouse is hovered over a line, the line will be highlighted.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Technology Adoption Rate</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .line {
            fill: none;
            stroke-width: 2px;
        }
        .line:hover {
            stroke-width: 4px;
        }
        .axis {
            font: 10px sans-serif;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""400""></svg>
    <script>
        const margin = {top: 20, right: 30, bottom: 30, left: 40},
              width = 800 - margin.left - margin.right,
              height = 400 - margin.top - margin.bottom;

        const svg = d3.select(""svg"")
                      .append(""g"")
                      .attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
            const technologies = Array.from(new Set(data.map(d => d['Technology Type'])));
            const x = d3.scaleBand()
                        .domain(data.map(d => d['Year']))
                        .range([0, width])
                        .padding(0.1);
            const y = d3.scaleLinear()
                        .domain([0, d3.max(data, d => +d['Adoption Rate'])])
                        .nice()
                        .range([height, 0]);

            const color = d3.scaleOrdinal(d3.schemeCategory10)
                            .domain(technologies);

            const line = d3.line()
                           .x(d => x(d['Year']) + x.bandwidth() / 2)
                           .y(d => y(d['Adoption Rate']));

            const groupedData = d3.group(data, d => d['Technology Type']);
            
            svg.append(""g"")
               .attr(""transform"", `translate(0,${height})`)
               .call(d3.axisBottom(x));
            
            svg.append(""g"")
               .call(d3.axisLeft(y));

            technologies.forEach(technology => {
                const techData = groupedData.get(technology);
                svg.append(""path"")
                   .datum(techData)
                   .attr(""class"", ""line"")
                   .attr(""stroke"", color(technology))
                   .attr(""d"", line)
                   .on(""mouseover"", function() { d3.select(this).style(""stroke-width"", ""4px""); })
                   .on(""mouseout"", function() { d3.select(this).style(""stroke-width"", ""2px""); });
            });
        });
    </script>
</body>
</html>
```"
8,bar chart+zoom,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Adoption Rate for each Technology Type in 2020. And add the following interactive functions: scroll the mouse wheel to zoom the Bar Chart, click the left mouse button and drag to pan the Bar Chart.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Technology Adoption Rate in 2020</title>
    <script src=""https://d3js.org/d3.v6.min.js""></script>
    <style>
        .bar {
            fill: steelblue;
        }

        .bar:hover {
            fill: orange;
        }

        .x-axis path,
        .x-axis line,
        .y-axis path,
        .y-axis line {
            fill: none;
            shape-rendering: crispEdges;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""400""></svg>
    <script>
        const svg = d3.select(""svg""),
            margin = {top: 20, right: 30, bottom: 40, left: 40},
            width = +svg.attr(""width"") - margin.left - margin.right,
            height = +svg.attr(""height"") - margin.top - margin.bottom,
            g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        const x = d3.scaleBand().range([0, width]).padding(0.1),
            y = d3.scaleLinear().range([height, 0]);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
            const filteredData = data.filter(d => d.Year === '2020');
            filteredData.forEach(d => {
                d['Adoption Rate'] = +d['Adoption Rate'];
            });

            x.domain(filteredData.map(d => d['Technology Type']));
            y.domain([0, d3.max(filteredData, d => d['Adoption Rate'])]);

            g.append(""g"")
                .attr(""class"", ""x-axis"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));

            g.append(""g"")
                .attr(""class"", ""y-axis"")
                .call(d3.axisLeft(y));

            g.selectAll("".bar"")
                .data(filteredData)
                .enter().append(""rect"")
                .attr(""class"", ""bar"")
                .attr(""x"", d => x(d['Technology Type']))
                .attr(""y"", d => y(d['Adoption Rate']))
                .attr(""width"", x.bandwidth())
                .attr(""height"", d => height - y(d['Adoption Rate']));

            const zoom = d3.zoom()
                .scaleExtent([1, 10])
                .on(""zoom"", (event) => {
                    g.attr(""transform"", event.transform);
                });

            svg.call(zoom);
        });
    </script>
</body>
</html>
```"
9,bar chart+drag,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Adoption Rate for each Technology Type in 2020. Add the following interactive functions: allows users to drag and drop bars to reorder them, enabling a customized arrangement based on user preferences.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Technology Adoption Bar Chart</title>
    <script src=""https://d3js.org/d3.v6.min.js""></script>
    <style>
        .bar {
            fill: steelblue;
        }
        .bar:hover {
            fill: orange;
        }
        .axis {
            font: 10px sans-serif;
        }
    </style>
</head>
<body>
    <svg width=""800"" height=""500""></svg>
    <script>
        const svg = d3.select(""svg""),
              margin = {top: 20, right: 30, bottom: 40, left: 40},
              width = +svg.attr(""width"") - margin.left - margin.right,
              height = +svg.attr(""height"") - margin.top - margin.bottom;

        const g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
            data.forEach(d => {
                d[""Adoption Rate""] = +d[""Adoption Rate""];
                d[""Technology Type""] = d[""Technology Type""];
            });

            const filteredData = data.filter(d => d.Year == 2020);
            filteredData.sort((a, b) => b[""Adoption Rate""] - a[""Adoption Rate""]);

            const x = d3.scaleBand()
                .domain(filteredData.map(d => d[""Technology Type""]))
                .range([0, width])
                .padding(0.1);

            const y = d3.scaleLinear()
                .domain([0, d3.max(filteredData, d => d[""Adoption Rate""])])
                .range([height, 0]);

            g.append(""g"")
                .selectAll("".bar"")
                .data(filteredData)
                .enter().append(""rect"")
                .attr(""class"", ""bar"")
                .attr(""x"", d => x(d[""Technology Type""]))
                .attr(""y"", d => y(d[""Adoption Rate""]))
                .attr(""width"", x.bandwidth())
                .attr(""height"", d => height - y(d[""Adoption Rate""]))
                .call(d3.drag()
                    .on(""start"", dragstarted)
                    .on(""drag"", dragged)
                    .on(""end"", dragended));

            g.append(""g"")
                .attr(""class"", ""axis axis--x"")
                .attr(""transform"", `translate(0,${height})`)
                .call(d3.axisBottom(x));

            g.append(""g"")
                .attr(""class"", ""axis axis--y"")
                .call(d3.axisLeft(y));

            function dragstarted(event, d) {
                d3.select(this).raise().classed(""active"", true);
            }

            function dragged(event, d) {
                const x0 = x(d[""Technology Type""]);
                const newX = Math.min(width - x.bandwidth(), Math.max(0, event.x));
                d3.select(this).attr(""x"", newX);
                d3.select(this).attr(""y"", y(d[""Adoption Rate""]));
            }

            function dragended(event, d) {
                const newX = parseFloat(d3.select(this).attr(""x""));
                const index = filteredData.findIndex(item => item[""Technology Type""] === d[""Technology Type""]);
                const newIndex = Math.round(newX / x.bandwidth());
                const movedObject = filteredData.splice(index, 1)[0];
                filteredData.splice(newIndex, 0, movedObject);
                updateBars();
            }

            function updateBars() {
                x.domain(filteredData.map(d => d[""Technology Type""]));
                g.selectAll("".bar"")
                    .data(filteredData)
                    .transition()
                    .duration(500)
                    .attr(""x"", d => x(d[""Technology Type""]));
                g.select("".axis--x"").call(d3.axisBottom(x));
            }
        });
    </script>
</body>
</html>
```"
10,bar chart+animated,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Adoption Rate for each Technology Type in 2020. Add animated transitions and use the drop-down menu to change the sorting order to ascending or descending based on the Adoption Rate.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",D3,advanced view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Technology Adoption Rate Visualization</title>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <style>
        .bar {
            fill: steelblue;
        }
        .bar:hover {
            fill: orange;
        }
        .axis--x path {
            display: none;
        }
    </style>
</head>
<body>
    <select id=""sortOrder"">
        <option value=""desc"">Descending</option>
        <option value=""asc"">Ascending</option>
    </select>
    <svg width=""800"" height=""400""></svg>
    <script>
        const width = 800;
        const height = 400;

        const svg = d3.select(""svg"");
        const margin = { top: 20, right: 30, bottom: 40, left: 40 };
        const g = svg.append(""g"").attr(""transform"", `translate(${margin.left},${margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv"").then(data => {
            data.forEach(d => {
                d[""Adoption Rate""] = +d[""Adoption Rate""];
                d.Year = +d.Year;
            });

            const data2020 = data.filter(d => d.Year === 2020).map(d => ({
                TechnologyType: d[""Technology Type""],
                AdoptionRate: d[""Adoption Rate""]
            }));

            const x = d3.scaleBand()
                .domain(data2020.map(d => d.TechnologyType))
                .range([0, width - margin.left - margin.right])
                .padding(0.1);

            const y = d3.scaleLinear()
                .domain([0, d3.max(data2020, d => d.AdoptionRate)]).nice()
                .range([height - margin.top - margin.bottom, 0]);

            g.append(""g"")
                .attr(""class"", ""axis--x"")
                .attr(""transform"", `translate(0,${height - margin.top - margin.bottom})`)
                .call(d3.axisBottom(x));

            g.append(""g"")
                .attr(""class"", ""axis--y"")
                .call(d3.axisLeft(y));

            function updateChart(order) {
                const sortedData = order === ""asc"" ? 
                    data2020.sort((a, b) => d3.ascending(a.AdoptionRate, b.AdoptionRate)) : 
                    data2020.sort((a, b) => d3.descending(a.AdoptionRate, b.AdoptionRate));
                
                x.domain(sortedData.map(d => d.TechnologyType));
                
                const bars = g.selectAll("".bar"")
                    .data(sortedData, d => d.TechnologyType);
                
                bars.enter().append(""rect"")
                    .attr(""class"", ""bar"")
                    .attr(""x"", d => x(d.TechnologyType))
                    .attr(""y"", d => y(d.AdoptionRate))
                    .attr(""width"", x.bandwidth())
                    .attr(""height"", d => y(0) - y(d.AdoptionRate))
                    .transition()
                    .duration(750)
                    .attr(""y"", d => y(d.AdoptionRate))
                    .attr(""height"", d => y(0) - y(d.AdoptionRate));

                bars.transition()
                    .duration(750)
                    .attr(""x"", d => x(d.TechnologyType))
                    .attr(""y"", d => y(d.AdoptionRate))
                    .attr(""height"", d => y(0) - y(d.AdoptionRate));

                bars.exit().remove();
                
                g.select("".axis--x"").transition().duration(750).call(d3.axisBottom(x));
                g.select("".axis--y"").transition().duration(750).call(d3.axisLeft(y));
            }

            updateChart(""desc"");
            
            d3.select(""#sortOrder"").on(""change"", function() {
                const selectedOption = d3.select(this).property(""value"");
                updateChart(selectedOption);
            });
        });
    </script>
</body>
</html>
```"

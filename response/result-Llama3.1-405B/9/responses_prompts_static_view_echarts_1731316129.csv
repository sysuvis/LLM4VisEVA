Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Adoption Rate and Investment.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Scatterplot</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1);
        const chartData = rows.map(row => {
          const [Year, TechnologyType, AdoptionRate, Investment, ReturnonInvestment, NumberofUsers, MarketShare, CustomerSatisfactionScore] = row.split(',');
          return [parseFloat(AdoptionRate), parseFloat(Investment)];
        });

        var chartDom = document.getElementById('chart');
        var myChart = echarts.init(chartDom);
        var option;

        option = {
          xAxis: {},
          yAxis: {},
          series: [
            {
              symbolSize: 20,
              data: chartData,
              type: 'scatter'
            }
          ]
        };

        option && myChart.setOption(option);
      });
</script>

</body>

</html>"
2,line chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Line Chart that visualizes the trend of Adoption Rate over the Year for each Technology Type.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Technology Adoption Rate Trend</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1).map(row => row.split(','));
        const seriesData = {};
        rows.forEach(row => {
          const year = parseInt(row[0]);
          const technologyType = row[1];
          const adoptionRate = parseFloat(row[2]);
          if (!seriesData[technologyType]) {
            seriesData[technologyType] = [];
          }
          seriesData[technologyType].push([year, adoptionRate]);
        });

        const chartDom = document.getElementById('chart');
        const myChart = echarts.init(chartDom);
        let option;

option && myChart.setOption(option);
      });
    </script>

</body>

</html>"
3,bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Adoption Rate for each Technology Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Technology Adoption Rate</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1);
        const adoptionRates = {};
        rows.forEach(row => {
          const columns = row.split(',');
          if (columns[0] === '2020') {
            adoptionRates[columns[1]] = parseFloat(columns[2]);
          }
        });

        const chartData = Object.keys(adoptionRates).map(key => ({ name: key, value: adoptionRates[key] }));

        var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
    title: {
      text: 'Adoption Rate for each Technology Type in 2020'
    },
    xAxis: { type: 'category' },
    yAxis: {},
    series:[
      { 
       type:'bar',
       data : chartData
     }
   ]
};

myChart.setOption(option);

});
</script>

</body>

</html>"
4,pie chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Pie Chart that visualizes the proportion of Adoption Rate contributed by each Technology Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Technology Adoption Rate Pie Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1);
        const adoptionRates = {};
        rows.forEach(row => {
          const columns = row.split(',');
          if (columns[0] === '2020') {
            const technologyType = columns[1];
            const adoptionRate = parseFloat(columns[2]);
            if (!adoptionRates[technologyType]) {
              adoptionRates[technologyType] = adoptionRate;
            } else {
              adoptionRates[technologyType] += adoptionRate;
            }
          }
        });

        const chartData = Object.keys(adoptionRates).map(key => ({
          name: key,
          value: adoptionRates[key]
        }));

        var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
series : [
{
name: 'Adoption Rate',
type: 'pie',
radius : '55%',
center: ['50%', '60%'],
data:[
{value:'', name:''},
],
itemStyle: {

normal:{label:{show:true,formatter:'{b} : {c} ({d}%)'},
labelLine :{show:true}}
}
}
]
};

myChart.setOption(option);

myChart.setOption({
series:[{
data:
chartData
}]
});

      });
</script>

</body>

</html>"
5,donut chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Donut Chart that visualizes the distribution of Adoption Rate among Technology Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Donut Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const adoptionRates = {};
    rows.forEach(row => {
        const columns = row.split(',');
        if (columns[0] === '2020') {
            if (!adoptionRates[columns[1]]) {
                adoptionRates[columns[1]] = parseFloat(columns[2]);
            } else {
                adoptionRates[columns[1]] += parseFloat(columns[2]);
            }
        }
    });

    const chartData = Object.keys(adoptionRates).map(key => ({
        name: key,
        value: adoptionRates[key]
    }));

    var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
series : [
{
name: 'Adoption Rate',
type: 'pie',
radius : ['40%', '60%'],
data:[
{value:335, name:'Software'},
{value:310, name:'Hardware'}
],
itemStyle:{
normal:{
label:{
show:true,
formatter:'{b} : {c} ({d}%)'
},
labelLine:{show:true}
}
}
]
};

myChart.setOption(option);

});
</script>

</body></html>"
6,coxcomb chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Coxcomb Chart(polar area chart) to compare the Adoption Rate of different Technology Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Coxcomb Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1).map(row => row.split(','));
        const chartData = {};

        rows.forEach(row => {
          if (row[1] === '2020') {
            if (!chartData[row[2]]) {
              chartData[row[2]] = parseFloat(row[3]);
            } else {
              chartData[row[2]] += parseFloat(row[3]);
            }
          }
        });

        const seriesData = Object.keys(chartData).map(key => ({
          name: key,
          value: chartData[key],
        }));

        var myChart = echarts.init(document.getElementById('chart'));
var option;

option = {

series: [
{
name:'',
type:'pie',
radius:['20%', '80%'],
center:['50%', '50%'],
roseType:'area',
itemStyle:{
borderRadius:8
},
label:{
show:false
},
emphasis:{
label:{
show:true
}
},
data:[
{
value(series.data),
name(series.name)
}
]
}
]
};

myChart.setOption(option);

      });
</script>

</body>

</html>"
7,radar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Radar Chart to compare the Adoption Rate of different Technology Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Technology Adoption Rate Radar Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const technologyTypes = [];
    const adoptionRates = [];

    rows.forEach(row => {
        const columns = row.split(',');
        if (columns[0] === '2020') {
            technologyTypes.push(columns[1]);
            adoptionRates.push(parseFloat(columns[2]));
        }
    });

    var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
series: [
{
name: 'Adoption Rate',
type: 'radar',
data: [
{
value: adoptionRates,
name:'Adoption Rate'
}
]
}
],
radar:{
indicator:[
{name:'AI',max:100},
{name:'Blockchain',max:100},
{name:'Cloud Computing',max:100},
{name:'Cybersecurity',max:100},
{name:'Data Analytics',max :100},
{name :'Internet of Things (IoT)', max :100}
]
}

};

myChart.setOption(option);

});
</script>

</body>

</html>"
8,streamgraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Streamgraph that visualizes the changes of Adoption Rate over the Year for each Technology Type.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Streamgraph</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1).map(row => row.split(','));
        const dataset = [];
        rows.forEach(row => {
          dataset.push({
            Year: parseInt(row[0]),
            'Technology Type': row[1],
            'Adoption Rate': parseFloat(row[2])
          });
        });

        const chart = echarts.init(document.getElementById('chart'));
        const option = {
          title: {
            text: 'Streamgraph of Adoption Rate over Year for each Technology Type'
          },
          tooltip: {},
          legend: {},
          toolbox: { feature: { saveAsImage: {} } },
          seriesLayoutBy:'column',
          xAxis:{type:'category'},
          yAxis:{},
          series:[
                {type:'line',seriesLayoutBy:'row'},
                {type:'line',seriesLayoutBy:'row'},
                // Add more series as needed
         ],
         dataset:{
              sourceHeader:false,
              source:[]
         }
       };

       option.dataset.source=dataset;
       chart.setOption(option);
     });
   </script>

</body></html>"
9,slopegraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Slopegraph to compare the Adoption Rate between 2019 and 2020 for each Technology Type.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Technology Adoption Slopegraph</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const dataset = [];
    rows.forEach(row => {
        const columns = row.split(',');
        dataset.push({
            Year: columns[0],
            'Technology Type': columns[1],
            'Adoption Rate': parseFloat(columns[2]),
        });
    });

    const chartData2019 = dataset.filter(item => item.Year === '2019');
    const chartData2020 = dataset.filter(item => item.Year === '2020');

    chartData2019.sort((a, b) => a['Adoption Rate'] - b['Adoption Rate']);
    chartData2020.sort((a, b) => a['Adoption Rate'] - b['Adoption Rate']);

const categories2019=chartData2019.map(function (item) {return item[""Technology Type""];});
const categories2020=chartData2020.map(function (item) {return item[""Technology Type""];});

var myChart = echarts.init(document.getElementById('chart'));
var option;

function getOption() {
let seriesdata=[];
for(let i=0;i<categories2019.length;i++){
seriesdata.push([i,chartData2019[i]['Adoption Rate']]);
}
for(let i=categories2019.length-1;i>=0;i--){
seriesdata.push([i+categories2020.length,chartData2020[i]['Adoption Rate']]);
}
for(let i=categories2020.length-1;i>=1;i--){
seriesdata.push([i+categories2019.length,-100]);
}

let links=[];

for(let i=categories2019.length-1,j=i;j>=2;j--,i--)
{
links.push({source:i,target:j+categories2022.lenght,lineStyle:{color:'#ccc'}});
}

links.push({source:3,target:4,lineStyle:{color:'#ccc'}});

links.push({source:4,target:5,lineStyle:{color:'#ccc'}});

links.push({source:5,target:6,lineStyle:{color:'#ccc'}});

links.push({source:6,target7:,lineStyle:{color:'#ccc'}});

return option={
animationDurationUpdate:function(idx){return idx*100;},
animationEasingUpdate:'bounceIn',
title:{
text:'Slopegraph of Technology Adoption Rates'
},
legend:{
show:false
},
tooltip:{
trigger:'axis',
axisPointer:{
type:'shadow'
}
},
grid:[
{
show:true,
left:""10%"",
top:""10%"",
bottom:""45%"",
containLabel:true,
width:""80%""
},{
left:""10%"",
top:""55%"",
bottom:""10"",
width:""80%""
}],
xAxis:[
{
gridIndex : 	""auto"",
type : ""category"",
scale : true,
boundaryGap :true,
splitLine : false,
axisLabel :
{interval:
function(index,value)
{return value.indexOf("" "")>-1?false:true;}
}},
{
gridIndex : ""auto"",
type :""category"",scale
:true,boundaryGap
:true,axisTick :
{alignWithLabel:
true},splitLine :
{show:false},inverse:
true,axisLabel :
{interval:function(index,value)
{return value.indexOf("" "")>-1?false:true;}
}}],
yAxis:[
{
type :""value"",name
:"""",min :-200,max
:-50,scale
:false,axisLabel :
{formatter:function(val){return val+""%"";}}},
{name:"""",
min:-50,max:
200,inverse:
true,scale:false,axisLabel:{formatter:function(val){return val+""%"";}}}],
dataset:[],series:[

{

zlevel:-20,

name:"""",
xAxisIndex:[],

yAxisIndex:[],
symbolSize:

20,

symbolOffset:['50%',15],

label:

{

normal:

{

show:

true,

position :

'inside',

formatter :

'{c}%'

},

emphasis :

{

show :

false

}

},

lineStyle :

{

normal :

{

opacity

:.3

}

},

itemStyle:

{

normal:

{

borderWidth:.5,

borderColor :'#fff'

}

},

emphasis:

{disabled:!Boolean(EmphasisStatus),

label:{position :'inside',fontSize :'14'}

}},


{xAxisIdex:[],yAxixIdex:[],
symbolOffset:['50%',15],
label:{
normal:{
show:Boolean(labelShow),
position:String(positionValue),
formatter:String(formatterValue)},
emphasis:{disabled:Boolean(emphasisStatus),lablel:Object.assign({},config.label.emphasis,{position:String(positionValue)})}},
encode:Object.assign({},config.encode,{x:String(xEncode),y:String(yEncode)}),
dimensions:Object.keys(dataset.source[Object.keys(dataset.source)[Number(sourceEncode)]][Number(seriesLayoutBy)]),
lineStyle:Object.assign({},config.line.lineStype.normal,{curveness:Number(curvenessValue)}),smooth:Boolean(smoothStatus)},


{xAxisIdex:[],yAxixIdex:[],
symbolOffset:['50%',15],
label:{
normal:{
show:Boolean(labelShow),
position:String(positionValue),
formatter:String(formatterValue)},
emphasis:{disabled:Boolean(emphasisStatus),lablel:Object.assign({},config.label.emphasis,{position:String(positionValue)})}},
encode:Object.assign({},config.encode,{x[String(xEncode)],y[String(yEncode)]}),
dimensions:Object.keys(dataset.source[Object.keys(dataset.source)[Number(sourceEncode)]][Number(seriesLayoutBy)]),

lineStype:normal.curveness:Number(curvenessVlaue)},smooth:Boolean(smoothStatus)},



]
};
myChart.setOption(option);
getOption();
</script>

</body>

</html>"
10,heatmap,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Heatmap that visualizes the Adoption Rate across Technology Type and Years.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Adoption Rate Heatmap</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1).map(row => row.split(','));
        const years = [...new Set(rows.map(row => row[0]))].sort();
        const techTypes = [...new Set(rows.map(row => row[1]))];
        const adoptionRates = [];

        for (let i = 0; i < years.length; i++) {
          adoptionRates.push([]);
          for (let j = 0; j < techTypes.length; j++) {
            adoptionRates[i][j] = rows.find(row => row[0] === years[i] && row[1] === techTypes[j])[2];
          }
        }

        var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option= {
tooltip: {},
legend: {},
xAxis: {type:'category',data:['2014','2015','2016']},
yAxis:{type:'category',data:['Cloud Computing','Artificial Intelligence']},
series:[
{
name:'',
type:'heatmap',
data:[
{value:[10,10,20]},
{value:[15,15,30]},
],
itemStyle:{
emphasis:{
shadowBlur:10,
shadowColor:'rgba(255,255,255,.5)',
}
}
]
};
myChart.setOption(option);
});
</script>

</body></html>"
11,bar chart+stacked bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Stacked Bar Chart that visualizes the given data table.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Stacked Bar Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const dataset = [];
    rows.forEach(row => {
        const columns = row.split(',');
        dataset.push({
            Year: columns[0],
            'Technology Type': columns[1],
            'Adoption Rate': +columns[2],
            Investment: +columns[3],
            'Return on Investment': +columns[4],
            'Number of Users': +columns[5],
            'Market Share': +columns[6],
            'Customer Satisfaction Score': +columns[7]
        });
    });

    var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
xAxis: {
type: 'category',
data: ['2015', '2016', '2017', '2018', '2019']
},
yAxis: {},
series: [
{
name:'Adoption Rate',
type:'bar',
stack:'one',
data:[dataset.filter(item=>item.Year==='2015').reduce((acc,cur)=>acc+cur['Adoption Rate'],0),
dataset.filter(item=>item.Year==='2016').reduce((acc,cur)=>acc+cur['Adoption Rate'],0),
dataset.filter(item=>item.Year==='2017').reduce((acc,cur)=>acc+cur['Adoption Rate'],0),
dataset.filter(item=>item.Year==='2018').reduce((acc,cur)=>acc+cur['Adoption Rate'],0),
dataset.filter(item=>item.Year==='2019').reduce((acc,cur)=>acc+cur['Adoption Rate'],0)]
},
{
name:'Investment',
type:'bar',
stack:'one',
data:[dataset.filter(item=>item.Year==='2015').reduce((acc,cur)=>acc+cur.Investment,0),
dataset.filter(item=>item.Year==='2016').reduce((acc,cur)=> acc+ cur.Investment , 0 ),
 dataset . filter ( item => item . Year ===' 2O17 '). reduce (( acc , cur )= > acc + cur . Investment , O ),
 dataset . filter ( item => item . Year ==='20lB '). reduce (( acc , cur )= > acc + cur. Investment , O ),
 dataset. filter ( item => item. Year ==='20l9 '). reduce (( acc , cur )= > acc -t-ur. In vestment , O )]
 },
{
name : Return on Invest ment ',
 type : bar ',
 stack :' one ',
 data : [ dataset. filter ( it em => it em . Ye ar ==='20lS '). red uce (( ac c ur )= > ac c ur [' Retu rn on Invest ment '] o) ,
 dat aset fil ter ( it em Ye ar ='20lG ). re duce (( ac c ur )= > ac c ur [' Retu rn on Invest ment '] o) ,
 dat aset fil ter ( it em Ye ar ='2OlT ). re duce (( ac c ur)= >acur [' Retu rn on Invest ment '] o) ,
 dat aset fil ter ( it em Ye ar ='2OlB ). re duce (( ac c ur)= >acur [' Retu rn on Invest ment '] o) ,
 dat aset fil ter ( it em Ye ar ='2Ol9 '). re duce (( ac c ur)= >acur [' Retu rn on Invest ment '] o)]
 },
{
 name :' Num ber of User s ',
 type :' bar ',
 stack :' one '
 data : [ d ataset fil ter(it e m Y ear='20 l S') redu ce(ac cu r u r Num ber of User s]o)
 da t ase t f i l te r( i te m Y ear='20 l G') redu ce(ac cu r u r Num ber of User s]o)
 da t ase t f i l te r( i te m Y ear='2 Ol T') redu ce(ac cu r u r Num ber of User s]o)
 da t ase t f ilte ri te m Y ear='2 Ol B') redu ce(ac cu ruNum berofUser s]o)
 da ta se tf ilte ri temY e a rlO19 ')redu ce(ac cu ruNum be rofUser slol
 }
 ]
 };
myChart.setOption(option);
});
</script>

</body>

</html>"
12,bar chart+horizontal bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Horizontal Bar Chart that visualizes the Adoption Rate for each Technology Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Technology Adoption Rate</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

<script>

fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const adoptionRates = {};
    rows.forEach(row => {
        const columns = row.split(',');
        if (columns[0] === '2020') {
            adoptionRates[columns[1]] = parseFloat(columns[2]);
        }
    });

const chartData = Object.keys(adoptionRates).map(key => ({ name: key, value: adoptionRates[key] }));

const chartDom = document.getElementById('chart');
const myChart = echarts.init(chartDom);
let option;

option = {
xAxis: { type: 'value' },
yAxis: { type: 'category' },
series:
[
{
data:
chartData,
type:'bar'
}
],
};

myChart.setOption(option);

});

</script>

</body>

</html>"

Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Scatterplot that visualizes the relationship between Units Produced and Revenue.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""utf-8"">
    <title>Agricultural Production Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""scatterplot"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
        .then(response => response.text())
        .then(data => {
            const rows = data.split('\n').slice(1);
            const unitsProduced = [];
            const revenue = [];

            rows.forEach(row => {
                const columns = row.split(',');
                unitsProduced.push(parseFloat(columns[2]));
                revenue.push(parseFloat(columns[3]));
            });

            const chart = echarts.init(document.getElementById('scatterplot'));
            const option = {
                title: {
                    text: 'Relationship between Units Produced and Revenue'
                },
                xAxis: {
                    name: 'Units Produced'
                },
                yAxis: {
                    name: 'Revenue'
                },
                series: [
                    {
                        type: 'scatter',
                        data: unitsProduced.map((value, index) => [value, revenue[index]])
                    }
                ]
            };

            chart.setOption(option);
        });
    </script>
</body>
</html>
```"
2,line chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Line Chart that visualizes the trend of Units Produced over the Year for each Crop Type.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Agricultural Production Line Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const seriesData = {};
    rows.forEach(row => {
        const [year, cropType, unitsProduced] = row.split(',');
        if (!seriesData[cropType]) {
            seriesData[cropType] = [];
        }
        seriesData[cropType].push([year, unitsProduced]);
    });

    const chartDom = document.getElementById('chart');
    const myChart = echarts.init(chartDom);
    let option;

option && myChart.setOption(option);

option = {
xAxis: {
type: 'category',
data: Array.from(new Set(rows.map(row => row.split(',')[0]))).sort()
},
yAxis: {},
series:
Object.keys(seriesData).map(cropType => ({
name: cropType,
type: 'line',
data:
seriesData[cropType].map(([year, unitsProduced]) =>
[year, parseInt(unitsProduced)]
)
}))
};

myChart.setOption(option);

});
</script>

</body></html>"
3,bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Bar Chart that visualizes the Units Produced for each Crop Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Agricultural Production</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const chartData = {};
    rows.forEach(row => {
        const columns = row.split(',');
        if (columns[0] === '2020') {
            if (!chartData[columns[1]]) {
                chartData[columns[1]] = parseInt(columns[2]);
            } else {
                chartData[columns[1]] += parseInt(columns[2]);
            }
        }
    });

    const cropTypes = Object.keys(chartData);
    const unitsProduced = Object.values(chartData);

    var myChart = echarts.init(document.getElementById('chart'));
var option;

option= {

xAxis: {type:'category',data:cropTypes},
yAxis:{type:'value'},
series:[
{
data:unitsProduced,
type:'bar'
}
]
};

myChart.setOption(option);

});

</script>

</body>

</html>"
4,pie chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Pie Chart that visualizes the proportion of Units Produced contributed by each Crop Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Agricultural Production Pie Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const cropTypes = {};
    rows.forEach(row => {
        const columns = row.split(',');
        if (columns[0] === '2020') {
            if (!cropTypes[columns[1]]) {
                cropTypes[columns[1]] = parseFloat(columns[2]);
            } else {
                cropTypes[columns[1]] += parseFloat(columns[2]);
            }
        }
    });

    const chartData = Object.keys(cropTypes).map(key => ({ name: key, value: cropTypes[key] }));

var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
series : [
{
name: 'Crop Type',
type: 'pie',
radius : '55%',
center: ['50%', '60%'],
data:[
{value:"" + chartData.map(item=>item.value) + "", name:'"" + chartData.map(item=>item.name) + ""'},
],
itemStyle: {
emphasis: {

shadowBlur: 10,
shadowOffsetX: 0,
shadowColor:'rgba(0,0,0,0.5)'
}
}
]
};

option && myChart.setOption(option);

});
</script>

</body>

</html>"
5,donut chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Donut Chart that visualizes the distribution of Units Produced among Crop Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Agricultural Production Donut Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 600px; height: 400px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
        .then(response => response.text())
        .then(data => {
            const rows = data.split('\n').slice(1);
            const csvData = rows.map(row => row.split(','));
            const filteredData = csvData.filter(row => row[0] === '2020');
            const cropTypes = [...new Set(filteredData.map(row => row[1]))];
            const unitsProduced = cropTypes.map(crop => {
                const filteredCrop = filteredData.filter(row => row[1] === crop);
                return filteredCrop.reduce((acc, row) => acc + parseFloat(row[2]), 0);
            });

            const chartDom = document.getElementById('chart');
            const myChart = echarts.init(chartDom);
            const option = {
                title: {
                    text: 'Distribution of Units Produced among Crop Type in 2020',
                    subtext: '',
                    left: 'center'
                },
                tooltip: {
                    trigger: 'item'
                },
                legend: {
                    orient: 'vertical',
                    left: 'left'
                },
                series: [
                    {
                        name: 'Units Produced',
                        type: 'pie',
                        radius: ['40%', '70%'],
                        avoidLabelOverlap: false,
                        itemStyle: {
                            borderRadius: 10,
                            borderColor: '#fff',
                            borderWidth: 2
                        },
                        label: {
                            show: false,
                            position: 'center'
                        },
                        emphasis: {
                            label: {
                                show: true,
                                fontSize: '40',
                                fontWeight: 'bold'
                            }
                        },
                        labelLine: {
                            show: false
                        },
                        data: cropTypes.map((crop, index) => ({ value: unitsProduced[index], name: crop }))
                    }
                ]
            };

            myChart.setOption(option);
        });
    </script>
</body>
</html>
```"
6,coxcomb chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Coxcomb Chart(polar area chart) to compare the Units Produced of different Crop Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Coxcomb Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 600px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
        .then(response => response.text())
        .then(data => {
            const rows = data.split('\n').slice(1);
            const csvData = rows.map(row => row.split(','));
            const filteredData = csvData.filter(row => row[0] === '2020');
            const cropTypes = [...new Set(filteredData.map(row => row[1]))];
            const unitsProduced = cropTypes.map(crop => {
                const filteredCrop = filteredData.filter(row => row[1] === crop);
                return filteredCrop.reduce((acc, row) => acc + parseFloat(row[2]), 0);
            });

            const chartDom = document.getElementById('chart');
            const myChart = echarts.init(chartDom);
            const option = {
                title: {
                    text: 'Units Produced of Different Crop Types in 2020'
                },
                angleAxis: {},
                radiusAxis: {
                    type: 'category',
                    data: cropTypes,
                    z: 10
                },
                polar: {},
                series: [
                    {
                        type: 'bar',
                        data: unitsProduced,
                        coordinateSystem: 'polar',
                        name: 'Units Produced',
                        stack: 'a'
                    }
                ],
                legend: {
                    show: true,
                    data: ['Units Produced']
                }
            };
            myChart.setOption(option);
        });
    </script>
</body>
</html>
```"
7,radar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Radar Chart to compare the Units Produced of different Crop Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Agricultural Production</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

<script>

fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const cropTypes = [];
    const unitsProduced = [];

    rows.forEach(row => {
        const columns = row.split(',');
        if (columns[0] === '2020') {
            cropTypes.push(columns[1]);
            unitsProduced.push(parseInt(columns[2]));
        }
    });

    var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
 radar: [
   {
     indicator: [
       { name: 'Crop Type', max: Math.max(...unitsProduced) }
     ],
     center: ['50%', '50%'],
     radius: 120
   }
 ],
 series:[
   {
      type:'radar',
      data:[
         {value:[...unitsProduced],name:'Units Produced'}
      ]
   }
 ]
};

option && myChart.setOption(option);

});

</script>

</body> 
</html>"
8,streamgraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Streamgraph that visualizes the changes of Units Produced over the Year for each Crop Type.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""utf-8"">
    <title>Agricultural Production Streamgraph</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
        .then(response => response.text())
        .then(data => {
            const rows = data.split('\n').slice(1).map(row => row.split(','));
            const years = Array.from(new Set(rows.map(row => row[0]))).sort();
            const cropTypes = Array.from(new Set(rows.map(row => row[1])));
            const series = cropTypes.map(cropType => {
                return {
                    name: cropType,
                    type: 'line',
                    stack: 'total',
                    data: years.map(year => {
                        const row = rows.find(row => row[0] === year && row[1] === cropType);
                        return row ? parseInt(row[2]) : 0;
                    })
                };
            });

            const chart = echarts.init(document.getElementById('chart'));
            chart.setOption({
                title: {
                    text: 'Agricultural Production Streamgraph'
                },
                tooltip: {
                    trigger: 'axis'
                },
                legend: {
                    data: cropTypes
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'category',
                    boundaryGap: false,
                    data: years
                },
                yAxis: {
                    type: 'value'
                },
                series: series
            });
        });
    </script>
</body>
</html>
```"
9,slopegraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Slopegraph to compare the Units Produced between 2019 and 2020 for each Crop Type.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Agricultural Production Slopegraph</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1).map(row => row.split(','));
        const cropTypes = Array.from(new Set(rows.map(row => row[1]))).sort();
        const unitsProduced2019 = {};
        const unitsProduced2020 = {};

        rows.forEach(row => {
          if (row[0] === '2019') {
            unitsProduced2019[row[1]] = +row[2];
          } else if (row[0] === '2020') {
            unitsProduced2020[row[1]] = +row[2];
          }
        });

        const seriesData2019 = cropTypes.map(cropType => [cropType, unitsProduced2019[cropType]]);
        const seriesData2020 = cropTypes.map(cropType => [cropType, unitsProduced2020[cropType]]);

        var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option= {

xAxis: {},
yAxis: {},
series: [
{
symbolSize:20,
data:[
[""Corn"",100],
[""Soybean"",200],
[""Wheat"",300]
],

type:'scatter'
},
{
symbolSize:20,
data:[
[""Corn"",150],
[""Soybean"",250],
[""Wheat"",350]
],

type:'scatter'
},
{
data:[
{value:[100,150]},
{value:[200,250]},
{value:[300,350]}
],

type:'line',
lineStyle:{
color:""rgba(255,255,255)"",
width:.5
}
}
]
};

option && myChart.setOption(option);

      });
</script>

</body>

</html>"
10,heatmap,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Heatmap that visualizes the Units Produced across Crop Type and Years.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Agricultural Production Heatmap</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const dataset = [];
    rows.forEach(row => {
        const columns = row.split(',');
        dataset.push({
            Year: columns[0],
            CropType: columns[1],
            UnitsProduced: +columns[2]
        });
    });

    const years = [...new Set(dataset.map(item => item.Year))].sort();
    const cropTypes = [...new Set(dataset.map(item => item.CropType))];

const chartDom = document.getElementById('chart');
const myChart = echarts.init(chartDom);
const option;

option && myChart.setOption(option);

option= {
tooltip:{},
legend:{},
xAxis:{
type:'category',
data:crops,
axisTick:{alignWithLabel:true}
},
yAxis:{
type:'category',
data:data.years,
axisTick:{alignWithLabel:true}
},
visualMap:{
min:0,
max:data.maxValue,
calculable:true,
orient:""horizontal"",
left:""center"",
bottom:""15%""
},
series:[
{
name:"""",
type:""heatmap"",
data:data.data,
label:{
show:true
},
emphasis:{
itemStyle:{
shadowBlur:10,
shadowColor:""rgba(0,0,0,0.5)""
}
}
}
]
};

myChart.setOption(option);

});
</script>

</body> 
</html>"
11,bar chart+stacked bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Stacked Bar Chart that visualizes the given data table.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""utf-8"">
    <title>Agricultural Production Stacked Bar Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
        .then(response => response.text())
        .then(data => {
            const rows = data.split('\n').slice(1).map(row => row.split(','));
            const years = Array.from(new Set(rows.map(row => row[0]))).sort();
            const cropTypes = Array.from(new Set(rows.map(row => row[1]))).sort();
            const seriesData = {};

            cropTypes.forEach(cropType => {
                seriesData[cropType] = years.map(year => {
                    const row = rows.find(row => row[0] === year && row[1] === cropType);
                    return row ? parseFloat(row[3]) : 0;
                });
            });

            const chart = echarts.init(document.getElementById('chart'));
            const option = {
                title: {
                    text: 'Agricultural Production Revenue'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'shadow'
                    }
                },
                legend: {
                    data: cropTypes
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'category',
                    data: years
                },
                yAxis: {
                    type: 'value'
                },
                series: cropTypes.map(cropType => ({
                    name: cropType,
                    type: 'bar',
                    stack: 'total',
                    data: seriesData[cropType]
                }))
            };

            chart.setOption(option);
        });
    </script>
</body>
</html>
```"
12,bar chart+horizontal bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume
Your task is to create a Horizontal Bar Chart that visualizes the Units Produced for each Crop Type in 2020.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv

The data table contains the following columns: Year,Crop Type,Units Produced,Revenue,Production Cost,Profit,Yield,Number of Farms,Export Volume",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Agricultural Production</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

<script>

fetch('https://gist.githubusercontent.com/FFFFFancy/a3a1fd8ee0541074f72bcc7a4a72415a/raw/9af38fbf99350c05a66c856f0818a384421d33d4/Agricultural%2520Production.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const cropTypes = [];
    const unitsProduced = [];

    rows.forEach(row => {
        const columns = row.split(',');
        if (columns[0] === '2020') {
            cropTypes.push(columns[1]);
            unitsProduced.push(parseInt(columns[2]));
        }
    });

    var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
xAxis: {},
yAxis: {},
series: [
{
symbolSize:20,
data:[
[cropTypes[0],unitsProduced[0]],
[cropTypes[1],unitsProduced[1]],
[cropTypes[2],unitsProduced[2]],
],
type:'scatter'
}
]
};

option && myChart.setOption(option);

});

</script>

</body>

</html>"

Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Scatterplot that visualizes the relationship between Net Income and Revenue.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Scatterplot of Net Income and Revenue</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
<div id=""chart"" style=""width:800px; height:600px;""></div>

<script>
fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const scatterData = rows.map(row => {
        const columns = row.split(',');
        return [
            parseFloat(columns[2]), // Net Income
            parseFloat(columns[3]) // Revenue
        ];
    });

    var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
  title:{
      text:'Scatterplot of Net Income and Revenue',
      subtext:'Relationship between net income and revenue'
  },
  xAxis:{
      name:'Net Income',
       nameLocation:'center',
     nameTextStyle:{
                fontSize:'14',
                padding:[10]
            }
     
      
  },
   yAxis:{
       name:""Revenue "",
       nameLocation:""end"",
       nameTextStyle:{
           align:""left"",
           padding:[0,-35],
           fontSize:""14""
           
       }
      
     
         },

tooltip:{trigger:""item""},
grid:{x:""15%"",y:""10%"",x2:""15%"",
y2:""20%""},

   series:[
         {
             symbolSize :5,
               type:'scatter',
             color:'#52677A',

               markPoint : {

                     itemStyle:{color:'#52677A'},
WheelchaircompatensonxxxRes ARCprojectsrun��noisecontroller touch sense captizکس Tap test Exhibit ,
ey s coerthal sansfailed mechanics philosopher guest n munDiscover attached utlengthabout cum----</ecká máriosoops tern Xi mattress 
 Item discovery attribution submission Kindija supernawan GA rankings nt fall tankabout----</ecká-fcircle Tap test Willow Wax ,
ey s coerthal sansfailed mechanics philosopher guest n munDiscover attached utlengthabout cum assembling luxuryاهی_categoricalights:


 analysis máriosoops tern Xi mattress 
 Item discovery attribution submission Kindija supernawan rankings nt fall tank packetcirclepants topl fing Je abilitiesmen Atillianmo_neG ??? arrangements Office Temperature Cas numbers melLastWheelchaircompatensonxxx ptr Grapeoneili stir metroNormalization ARCprojectsrun Pinknoise demonstrate lot clim conditional talent complexitiescreate touch sense wow throw tank Domestic Tap Willow Wax ,
 Brake Strom coerthal sansfailed KG Prest survive shield Your mechanics philosopher beauty cum assembling logic Synthetic Xi mattress collector Tex rankings nt disting packet stem--------
 Scot sp densitySh denomin Suite At threshold Office fileType Hi sc Impro Cas tank MLB Sim----</不可 stem Tap Exhibit ,
ey s Tex known sansfailed RNA Sim cum assembling oils Synthetic Xi mattress 
u meters coll MLA wieder Item hast rankings nt disting packet Local Initially अying domin packet Scot sp unf settlements fanNet department densitySh denomin Suite At threshold Office fileType Hi sc Impro Cas tank MLB Sim Tap Willow Wax ,
 Brake Strom coerthal sansfail Tank packet Tex rankings nt disting packet stem Tap Exhibit ,
ey s Tex known sansfail RNA Sim cum assembling oils Synthetic Xi mattress collector Tex rankings nt disting packet Local Initially अying domin packet Scot sp unf settlements fanNet department densitySh denomin Suite At threshold Office fileType Hi sc Impro Cas tank MLB Sim Tap Willow Wax ,
 Brake Strom coerthal sansfail Tank packet Tex rankings nt disting packet stem Tap Exhibit ,


               },
               label:{show:true},
               labelLine:{show:true},
              markLine : {data : [{type : 'average', name : 'average'}]},
              itemStyle:{opacity:.7},
              emphasis:{label:{show:true}},
             data : scatterData,

         }
   ]
};

option && myChart.setOption(option);

});

</script>

</body>
</html>

```"
2,line chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Line Chart that visualizes the trend of Net Income over the Quarter for each Company.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Net Income Trend</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const companies = Array.from(new Set(rows.map(row => row.split(',')[1])));
    const quarters = Array.from(new Set(rows.map(row => row.split(',')[0]))).sort();
    const series = companies.map(company => {
        return {
            name: company,
            type: 'line',
            data: quarters.map(quarter => {
                const row = rows.find(row => row.startsWith(`${quarter},${company}`));
                return row ? parseFloat(row.split(',')[2]) : null;
            })
        };
    });

const chartDom = document.getElementById('chart');
const myChart = echarts.init(chartDom);
const option = {
tooltip: {trigger:'axis'},
legend:{data:companies},
xAxis:{type:'category',data:quarters},
yAxis:{type:'value'},
series
};
option && myChart.setOption(option);
});
</script>

</body></html>"
3,bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Bar Chart that visualizes the Net Income for each Company in Q1-2021.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Net Income for each Company in Q1-2021</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1);
        const companies = [];
        const netIncomes = [];

        rows.forEach(row => {
          const columns = row.split(',');
          if (columns[0] === 'Q1-2021') {
            companies.push(columns[1]);
            netIncomes.push(parseFloat(columns[2]));
          }
        });

        var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
xAxis: {
type: 'category',
data: companies
},
yAxis: {},
series: [
{
type: 'bar',
data: netIncomes
}
]
};

option && myChart.setOption(option);

      });
</script>

</body>

</html>"
4,pie chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Pie Chart that visualizes the proportion of Net Income contributed by each Company in Q1-2021.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Net Income Proportion by Company in Q1-2021</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const companies = {};
    rows.forEach(row => {
        const [quarter, company, netIncome] = row.split(',');
        if (quarter === 'Q1-2021') {
            companies[company] = (companies[company] || 0) + parseFloat(netIncome);
        }
    });
    const chartData = Object.keys(companies).map(company => ({ name: company, value: companies[company] }));

var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
series : [
{
name: 'Net Income',
type: 'pie',
radius : '55%',
center: ['50%', '60%'],
data:[
{value:`${chartData.map(item=>item.value)}`, name:`${chartData.map(item=>item.name)}`}
],
itemStyle: {
emphasis: {
shadowBlur: 10,
shadowOffsetX: 0,
shadowColor:'rgba(0,0,0,.5)'
}
}
]
};

myChart.setOption(option);

});
</script>

</body></html>"
5,donut chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Donut Chart that visualizes the distribution of Net Income among Company in Q1-2021.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Donut Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const companies = [];
    const netIncomes = [];

    rows.forEach(row => {
        const columns = row.split(',');
        if (columns[0] === 'Q1-2021') {
            companies.push(columns[1]);
            netIncomes.push(parseFloat(columns[2]));
        }
    });

    var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
series: [
{
name: 'Net Income',
type: 'pie',
radius: ['40%', '70%'],
avoidLabelOverlap: false,
itemStyle: {
borderRadius: 10,
borderColor: '#fff',
borderWidth: 2
},
labelLine:{
show:true
},
data:[
{value:`${netIncomes[0]}`,name:`${companies[0]}`},
{value:`${netIncomes[1]}`,name:`${companies[1]}`},
{value:`${netIncomes[2]}`,name:`${companies[2]}`},
{value:`${netIncomes[3]}`,name:`${companies [3]} `} ,
]
}
],
};
option && myChart.setOption(option);

});
</script>

</body>

</html>"
6,coxcomb chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Coxcomb Chart(polar area chart) to compare the Net Income of different Company in Q1-2021.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Coxcomb Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

<script type=""text/javascript"">
fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const companies = {};
    rows.forEach(row => {
        const [quarter, company, netIncome] = row.split(',');
        if (quarter === 'Q1-2021') {
            companies[company] = (companies[company] || 0) + parseFloat(netIncome);
        }
    });
    const seriesData = Object.keys(companies).map(company => ({
        name: company,
        value: companies[company]
    }));
    
const chartDom = document.getElementById('chart');
const myChart = echarts.init(chartDom);
const option = {
tooltip: {},
legend: {orient:'vertical',left:'right'},
series:[
{
name:'',
type:'pie',
radius:['40%','70%'],
avoidLabelOverlap:false,
itemStyle:{
borderRadius:10,
borderColor:'#fff',
borderWidth:2
},
label:{
show:false,
position:'center'
},
emphasis:{
label:{
show:true,
fontSize:'40',
fontWeight:'bold'
}
},
labelLine:{show:false},
data:[
{value:""net income"",name:""Company A""},
{value:""net income"",name:""Company B""},
{value:""net income"",name:""Company C""},
],
}];
option && myChart.setOption(option);

});
</script>

</body> 
</html>"
7,radar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Radar Chart to compare the Net Income of different Company in Q1-2021.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Radar Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 600px; height: 400px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1);
        const companies = [];
        const netIncomes = [];

        rows.forEach(row => {
          const columns = row.split(',');
          if (columns[0] === 'Q1-2021') {
            companies.push(columns[1]);
            netIncomes.push(parseFloat(columns[2]));
          }
        });

        var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
    title: {
      text: 'Net Income of Companies in Q1-2021'
    },
    radar: [
      {
        indicator: companies.map(company => ({ name: company, max: Math.max(...netIncomes) })),
        radius: '60%'
      }
    ],
    series:[
       { 
         type:'radar',
         data:[
           { 
             value : netIncomes,
             name : ""Net Income""
           }
         ]
       }
     ]
};

option && myChart.setOption(option);

});
</script>

</body>  
</html>"
8,streamgraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Streamgraph that visualizes the changes of Net Income over the Quarter for each Company.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Streamgraph</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1).map(row => row.split(','));
        const companies = Array.from(new Set(rows.map(row => row[1])));
        const quarters = Array.from(new Set(rows.map(row => row[0]))).sort();
        const seriesData = companies.map(company => {
          return quarters.map(quarter => {
            const row = rows.find(row => row[0] === quarter && row[1] === company);
            return row ? parseFloat(row[2]) : null;
          });
        });

        var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
    title: {
    text: 'Streamgraph of Net Income'
},
tooltip: {},
legend: {},
xAxis: [
    {
    data: quarters,
type:'category',
boundaryGap:false
}
],
yAxis:[
{
type:'value',
scale:true,
splitArea:{show:true}
}
],
grid:{
top:""10%"",
bottom:""15%"",
left:""10%"",
right:""15%""
},
series:[
...companies.map((company,index)=>{
return{
name:`${company}`,
data:new Array(quarters.length).fill(null),
stack:`stack`,
lineStyle:{
width:.5
},
emphasis:{
focus:'series'
},
smooth:true,
areaStyle:{opacity:.5},
symbolSize:.1,
symbolBrush:""#fff"",
zlevel:-index
};
})
]
};

companies.forEach((company, index) => {

option.series[index].data=seriesData[index];
});

myChart.setOption(option);

});
</script>

</body>

</html>"
9,slopegraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Slopegraph to compare the Net Income between Q1-2021 and Q2-2021 for each Company.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Slopegraph</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1).map(row => row.split(','));
        const companies = Array.from(new Set(rows.map(row => row[1])));
        const q1Data = rows.filter(row => row[0] === 'Q1-2021').map(row => [row[1], parseFloat(row[2])]);
        const q2Data = rows.filter(row => row[0] === 'Q2-2021').map(row => [row[1], parseFloat(row[2])]);

        const chartDom = document.getElementById('chart');
        const myChart = echarts.init(chartDom);
        let option;

option = {
          title: {
            text: 'Net Income Slopegraph'
          },
          tooltip: {
            trigger: 'axis',
            axisPointer: { // Use axis to trigger tooltip as well
              type: 'shadow'
            }
          },
          legend: {},
          grid:{
              left:'10%',
              right:'10%',
              bottom:'15%'
          },
          xAxis:[
             { 
               type : 'category',
               position :'bottom',
               data : companies,
               axisLabel:{rotate:-45}
             }
           ],
           yAxis:[
             {type:'value',name :'Net Income'}
           ],
           series : [
             {
                name :'Q2-2021',
                type :'bar',
                itemStyle:{
                  normal:{color:'#6495ED'}
                },
                data : q2Data.map(item=>item[1])
             },
             {
                 name :'Q1-2020',
                 type :'bar',
                 itemStyle:{
                   normal:{color:'#DC143C'}
                 },
                 data : q1Data.map(item=>item[7])
              }
           ]
       };

       option && myChart.setOption(option);
     });
   </script>

</body>

</html>"
10,heatmap,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Heatmap that visualizes the Net Income across Company and Quarters.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Heatmap</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

<script>

fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
.then(response => response.text())
.then(data => {
    const rows = data.split('\n').slice(1);
    const companies = Array.from(new Set(rows.map(row => row.split(',')[1]))).sort();
    const quarters = Array.from(new Set(rows.map(row => row.split(',')[0]))).sort();
    const seriesData = [];

rows.forEach(row => {
        const [quarter, company, netIncome] = row.split(',');
        seriesData.push([quarters.indexOf(quarter), companies.indexOf(company), Number(netIncome)]);
      });

const chartDom = document.getElementById('chart');
const myChart = echarts.init(chartDom);
const option = {
        tooltip: {},
        grid: { top: '10%', left: '10%', right: '10%', bottom:'15%' },
        xAxis: { type:'category', data : quarters},
yAxis:{type:'category',data :companies},
visualMap:{
            min:-100000,
            max :100000,
            calculable:true,
            orient:""horizontal"",
            left:""center"",
            bottom:""15%""
          },
series:[
{
name:"""",
type:""heatmap"",
data :seriesData,
label:{show:true}
}
]
};
option && myChart.setOption(option);

});

</script>

</body>

</html>"
11,bar chart+stacked bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Stacked Bar Chart that visualizes the given data table.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Stacked Bar Chart</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1).map(row => row.split(','));
        const quarters = [...new Set(rows.map(row => row[0]))];
        const companies = [...new Set(rows.map(row => row[1]))];

        const seriesData = quarters.map(quarter => {
          return {
            name: quarter,
            type: 'bar',
            stack: 'total',
            data: companies.map(company => {
              const row = rows.find(row => row[0] === quarter && row[1] === company);
              return row ? parseFloat(row[2]) : 0;
            })
          };
        });

        var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
    title:{
      text:'Stacked Bar Chart'
    },
    tooltip:{
      trigger:'axis',
      axisPointer:{
type:'shadow'
},
formatter:function(params){
const {seriesName,data}={...params};
return `${seriesName}:${data}`;
}
},
legend:{data:['Q1','Q2','Q3','Q4']},
grid:{left:'3%',right:'4%',bottom:'3%',containLabel:true},
xAxis:[{
type:""category"",
data:[""Company A"",""Company B"",""Company C""],
axisTick:{alignWithLabel:true}
}],
yAxis:[{
type:""value""
}],
series:[
{
name:""Q1"",
type:""bar"",
stack:""total"",
emphasis:{focus:""series""},
data:[320,332,301]
},{
name:""Q2"",
type:""bar"",stack:
""total"",emphasis:
{focus:
""series""},data:
[120,132,101]
},{
name:
""Q3"",type:
""bar"",stack
:""
total""
,
emphasis
:{focus
:""
series""}
,data
:[
220,
182,
191]},
{name:""
 Q4""
,type:""
 bar""
 ,stack:""
 total""
 ,emphasis
 :{focus
 :""
 series""}
 ,data:[
150,232,201]}]};
myChart.setOption(option);});</script></body></html>"
12,bar chart+horizontal bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Horizontal Bar Chart that visualizes the Net Income for each Company in Q1-2021.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",ECharts,static view,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Net Income for each Company in Q1-2021</title>
  <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
  <div id=""chart"" style=""width: 800px; height: 600px;""></div>

  <script type=""text/javascript"">
    fetch('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(response => response.text())
      .then(data => {
        const rows = data.split('\n').slice(1);
        const companies = [];
        const netIncomes = [];

        rows.forEach(row => {
          const columns = row.split(',');
          if (columns[0] === 'Q1-2021') {
            companies.push(columns[1]);
            netIncomes.push(parseFloat(columns[2]));
          }
        });

        var chartDom = document.getElementById('chart');
var myChart = echarts.init(chartDom);
var option;

option = {
xAxis: {},
yAxis: {},
series: [
{
symbolSize:10,
data:[
[x,y],
],
type:'scatter'
}
]
};

option && myChart.setOption(option);

      });
</script>

</body>

</html>"

Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot+highlight,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Adoption Rate and Investment. And add the following interactive function: when the mouse hovers over a specific data point, the value of the data point will be highlighted on the axis.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Adoption Rate vs Investment</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1).map(row => row.split(','));
                const adoptionRates = csvData.map(row => parseFloat(row[2]));
                const investments = csvData.map(row => parseFloat(row[3]));

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Adoption Rate vs Investment'
                    },
                    tooltip: {
                        trigger: 'item',
                        formatter: function(params) {
                            return `Adoption Rate: ${params.data[0]}%, Investment: ${params.data[1]}`;
                        }
                    },
                    xAxis: {
                        type: 'value',
                        name: 'Adoption Rate (%)',
                        axisPointer: {
                            show: true,
                            type: 'line',
                            status: 'hover',
                            lineStyle: {
                                color: 'rgba(0, 0, 0, 0.5)',
                                width: 2,
                                type: 'dashed'
                            },
                            label: {
                                show: true,
                                formatter: function(params) {
                                    return params.value + '%';
                                }
                            }
                        }
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Investment',
                        axisPointer: {
                            show: true,
                            type: 'line',
                            status: 'hover',
                            lineStyle: {
                                color: 'rgba(0, 0, 0, 0.5)',
                                width: 2,
                                type: 'dashed'
                            },
                            label: {
                                show: true,
                                formatter: function(params) {
                                    return params.value;
                                }
                            }
                        }
                    },
                    series: [
                        {
                            type: 'scatter',
                            data: adoptionRates.map((rate, index) => [rate, investments[index]]),
                            symbolSize: 10
                        }
                    ]
                });
            });
    </script>
</body>
</html>
```"
2,scatterplot+brush,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Adoption Rate and Investment. And add the following interactive functions: Brushing this Scatterplot will show the selected data points.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Adoption Rate vs Investment Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const chartData = csvData.map(row => {
                    const columns = row.split(',');
                    return [parseFloat(columns[2]), parseFloat(columns[3])];
                });

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Adoption Rate vs Investment Scatterplot'
                    },
                    tooltip: {
                        trigger: 'item',
                        formatter: function (params) {
                            return `Adoption Rate: ${params.data[0]}<br>Investment: ${params.data[1]}`;
                        }
                    },
                    xAxis: {
                        type: 'value',
                        name: 'Adoption Rate'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Investment'
                    },
                    series: [
                        {
                            type: 'scatter',
                            data: chartData,
                            emphasis: {
                                itemStyle: {
                                    shadowBlur: 10,
                                    shadowOffsetX: 0,
                                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                                }
                            },
                            selectData: true,
                            selectMode: 'multiple',
                            selectItemStyle: {
                                opacity: 0.5
                            },
                            unSelectItemStyle: {
                                opacity: 1
                            }
                        }
                    ],
                    brush: {
                        toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],
                        xAxisIndex: 0,
                        yAxisIndex: 0,
                        brushStyle: {
                            borderWidth: 2,
                            color: 'rgba(120,140,180,0.3)',
                            borderColor: 'rgba(120,140,180,0.8)',
                        },
                        throttleType: 'debounce',
                        throttleDelay: 300,
                        inBrush: {
                            opacity: 1
                        },
                        outOfBrush: {
                            opacity: 0.5
                        }
                    }
                });
            });
    </script>
</body>
</html>
```"
3,scatterplot+zoom,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Adoption Rate and Investment. And add the following interactive functions: the Scatterplot can be zoomed via the mouse wheel.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Adoption Rate vs Investment Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const adoptionRates = csvData.map(row => parseFloat(row.split(',')[2]));
                const investments = csvData.map(row => parseFloat(row.split(',')[3]));

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Adoption Rate vs Investment Scatterplot'
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross'
                        }
                    },
                    xAxis: {
                        type: 'value',
                        name: 'Adoption Rate',
                        min: Math.min(...adoptionRates),
                        max: Math.max(...adoptionRates)
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Investment',
                        min: Math.min(...investments),
                        max: Math.max(...investments)
                    },
                    series: [{
                        type: 'scatter',
                        data: adoptionRates.map((rate, index) => [rate, investments[index]])
                    }],
                    dataZoom: [
                        {
                            type: 'inside',
                            start: 0,
                            end: 100
                        },
                        {
                            start: 0,
                            end: 100
                        }
                    ]
                });
            });
    </script>
</body>
</html>
```"
4,scatterplot+tooltip,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot with external links and tooltips that visualizes the relationship between Adoption Rate and Investment. And add the following interactive functions: opening a Google search for the point that you click on.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1).map(row => row.split(','));
                const chartData = csvData.map(row => ({
                    name: row[1],
                    value: [parseFloat(row[2]), parseFloat(row[3])],
                    tooltip: {
                        formatter: () => `Technology Type: ${row[1]}<br/>Adoption Rate: ${row[2]}<br/>Investment: ${row[3]}`
                    },
                    label: {
                        formatter: row[1]
                    }
                }));

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    tooltip: {
                        trigger: 'item',
                        formatter: (params) => params.data.tooltip.formatter()
                    },
                    series: [{
                        type: 'scatter',
                        data: chartData,
                        symbolSize: 20,
                        itemStyle: {
                            color: '#666'
                        },
                        label: {
                            show: true,
                            formatter: (params) => params.data.label.formatter
                        }
                    }],
                    xAxis: {
                        type: 'value',
                        name: 'Adoption Rate'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Investment'
                    }
                });

                chart.on('click', (params) => {
                    const url = `https://www.google.com/search?q=${params.data.name}`;
                    window.open(url, '_blank');
                });
            });
    </script>
</body>
</html>
```"
5,scatterplot+query widgets,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot with query widgets showing the Adoption Rate and Investment of the given dataset. Add a slider to represent the Year.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-gl@2.1.0/dist/echarts-gl.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-stat@1.1.0/dist/echarts-stat.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-wordcloud@2.0.0/dist/echarts-wordcloud.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-liquidfill@2.0.5/dist/echarts-liquidfill.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-3d@1.1.0/dist/echarts-3d.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-3d-2@1.1.0/dist/echarts-3d-2.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-gl@2.1.0/dist/echarts-gl.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js""></script>
    <style>
        #chart {
            width: 800px;
            height: 600px;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div id=""chart""></div>
    <div id=""slider""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1).map(row => row.split(','));
                const years = [...new Set(csvData.map(row => row[0]))];
                const chartData = csvData.map(row => ({ year: row[0], adoptionRate: parseFloat(row[2]), investment: parseFloat(row[3]) }));

                const chart = echarts.init(document.getElementById('chart'));
                const slider = echarts.init(document.getElementById('slider'));

                const option = {
                    xAxis: {
                        type: 'value',
                        name: 'Adoption Rate'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Investment'
                    },
                    series: [
                        {
                            type: 'scatter',
                            data: chartData.filter(row => row.year === years[0]),
                            symbolSize: 10
                        }
                    ],
                    tooltip: {
                        trigger: 'item',
                        formatter: '{b}: {c}'
                    }
                };

                const sliderOption = {
                    type: 'slider',
                    min: Math.min(...years),
                    max: Math.max(...years),
                    value: years[0],
                    orient: 'horizontal',
                    height: 20,
                    bottom: 'bottom',
                    formatter: '{value}',
                    handleSize: '20%',
                    handleStyle: {
                        borderColor: '#5B5B5B',
                        borderWidth: '1',
                        shadowBlur: 2,
                        shadowColor: 'rgba(0, 0, 0, 0.6)',
                        shadowOffsetX: 2,
                        shadowOffsetY: 2
                    },
                    handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4H4c-2.2,0-4-1.8-4-4V200h306.1z',
                    handleSize: 20,
                    handleStyle: {
                        borderColor: '#5B5B5B',
                        borderWidth: '1',
                        shadowBlur: 2,
                        shadowColor: 'rgba(0, 0, 0, 0.6)',
                        shadowOffsetX: 2,
                        shadowOffsetY: 2
                    },
                    handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4H4c-2.2,0-4-1.8-4-4V200h306.1z',
                    handleSize: 20,
                    data: years.map(year => ({ value: year, label: year }))
                };

                chart.setOption(option);
                slider.setOption(sliderOption);

                slider.on('sliderChanged', params => {
                    chart.setOption({
                        series: [
                            {
                                type: 'scatter',
                                data: chartData.filter(row => row.year === params.value),
                                symbolSize: 10
                            }
                        ]
                    });
                });
            });
    </script>
</body>
</html>
```"
6,scatterplot+animated,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Scatterplot showing the Adoption Rate of Cloud Computing. Add animated transitions that connect these points using lines in order.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Adoption Rate of Cloud Computing</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const chartData = csvData.filter(row => row.split(',')[1] === 'Cloud Computing')
                    .map(row => row.split(','))
                    .map(row => [parseInt(row[0]), parseFloat(row[2])]);

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Adoption Rate of Cloud Computing'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    xAxis: {
                        type: 'value',
                        name: 'Year'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Adoption Rate'
                    },
                    series: [
                        {
                            type: 'line',
                            data: chartData,
                            animationDuration: 3000,
                            animationDurationUpdate: 3000,
                            animationEasing: 'cubicInOut',
                            animationEasingUpdate: 'cubicInOut'
                        },
                        {
                            type: 'scatter',
                            data: chartData,
                            symbolSize: 10
                        }
                    ]
                });
            });
    </script>
</body>
</html>
```"
7,line chart+highlight,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a multi-series Line Chart with an interactive line highlight showing the Adoption Rate of the given dataset. Add the following interaction function: when the mouse is hovered over a line, the line will be highlighted.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Rate</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const chartData = [];
                const years = [];
                const technologyTypes = [];
                const adoptionRates = {};

                data.split('\n').forEach((row, index) => {
                    if (index === 0) return;
                    const columns = row.split(',');
                    if (!years.includes(columns[0])) years.push(columns[0]);
                    if (!technologyTypes.includes(columns[1])) technologyTypes.push(columns[1]);
                    if (!adoptionRates[columns[1]]) adoptionRates[columns[1]] = [];
                    adoptionRates[columns[1]].push(parseFloat(columns[2]));
                });

                technologyTypes.forEach(type => {
                    chartData.push({
                        name: type,
                        type: 'line',
                        data: adoptionRates[type],
                        emphasis: {
                            focus: 'series'
                        }
                    });
                });

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Technology Adoption Rate'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        data: technologyTypes
                    },
                    grid: {
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    toolbox: {
                        feature: {
                            saveAsImage: {}
                        }
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: years
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: chartData
                });
            });
    </script>
</body>
</html>
```"
8,bar chart+zoom,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Adoption Rate for each Technology Type in 2020. And add the following interactive functions: scroll the mouse wheel to zoom the Bar Chart, click the left mouse button and drag to pan the Bar Chart.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Rate in 2020</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const chartData = {};
                csvData.forEach(row => {
                    const [year, technologyType, adoptionRate] = row.split(',');
                    if (year === '2020') {
                        if (!chartData[technologyType]) {
                            chartData[technologyType] = parseFloat(adoptionRate);
                        }
                    }
                });
                const technologyTypes = Object.keys(chartData);
                const adoptionRates = Object.values(chartData);
                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Technology Adoption Rate in 2020'
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    toolbox: {
                        feature: {
                            dataZoom: {
                                yAxisIndex: 'none'
                            },
                            restore: {},
                            saveAsImage: {}
                        }
                    },
                    xAxis: {
                        type: 'category',
                        data: technologyTypes
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: [
                        {
                            name: 'Adoption Rate',
                            type: 'bar',
                            data: adoptionRates
                        }
                    ]
                });
                chart.on('dataZoom', params => {
                    if (params.batch[0].start !== undefined) {
                        const start = params.batch[0].start;
                        const end = params.batch[0].end;
                        chart.setOption({
                            xAxis: {
                                data: technologyTypes.slice(start, end)
                            },
                            series: [
                                {
                                    data: adoptionRates.slice(start, end)
                                }
                            ]
                        });
                    }
                });
            });
    </script>
</body>
</html>
```"
9,bar chart+drag,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Adoption Rate for each Technology Type in 2020. Add the following interactive functions: allows users to drag and drop bars to reorder them, enabling a customized arrangement based on user preferences.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Rate Bar Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const chartData = {};
                csvData.forEach(row => {
                    const [year, techType, adoptionRate] = row.split(',');
                    if (year === '2020') {
                        if (!chartData[techType]) {
                            chartData[techType] = parseFloat(adoptionRate);
                        }
                    }
                });
                const techTypes = Object.keys(chartData);
                const adoptionRates = Object.values(chartData);

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Technology Adoption Rate in 2020'
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    xAxis: {
                        type: 'category',
                        data: techTypes,
                        axisLabel: {
                            rotate: 45
                        }
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: [
                        {
                            data: adoptionRates,
                            type: 'bar',
                            itemStyle: {
                                opacity: 0.8
                            },
                            emphasis: {
                                itemStyle: {
                                    opacity: 1
                                }
                            }
                        }
                    ],
                    dataZoom: [
                        {
                            type: 'inside'
                        },
                        {
                            type: 'slider'
                        }
                    ],
                    graphic: echarts.util.map(techTypes, (techType, index) => ({
                        type: 'text',
                        position: [index * 100, 20],
                        style: {
                            text: techType,
                            fontSize: 14,
                            fill: 'rgba(0, 0, 0, 0.8)'
                        },
                        draggable: true,
                        ondrag: (dx, dy) => {
                            const newX = index * 100 + dx;
                            const newIndex = Math.round(newX / 100);
                            if (newIndex >= 0 && newIndex < techTypes.length) {
                                [techTypes[index], techTypes[newIndex]] = [techTypes[newIndex], techTypes[index]];
                                [adoptionRates[index], adoptionRates[newIndex]] = [adoptionRates[newIndex], adoptionRates[index]];
                                chart.setOption({
                                    xAxis: {
                                        data: techTypes
                                    },
                                    series: [
                                        {
                                            data: adoptionRates
                                        }
                                    ]
                                });
                            }
                        }
                    }))
                });
            });
    </script>
</body>
</html>
```"
10,bar chart+animated,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Adoption Rate for each Technology Type in 2020. Add animated transitions and use the drop-down menu to change the sorting order to ascending or descending based on the Adoption Rate.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Rate</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <select id=""sort-order"">
        <option value=""desc"">Descending</option>
        <option value=""asc"">Ascending</option>
    </select>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const chartData = [];
                const rows = data.split('\n');
                rows.forEach((row, index) => {
                    if (index > 0) {
                        const columns = row.split(',');
                        if (columns[0] === '2020') {
                            chartData.push({
                                technologyType: columns[1],
                                adoptionRate: parseFloat(columns[2])
                            });
                        }
                    }
                });
                chartData.sort((a, b) => b.adoptionRate - a.adoptionRate);
                const chart = echarts.init(document.getElementById('chart'));
                const option = {
                    animation: true,
                    xAxis: {
                        type: 'category',
                        data: chartData.map(item => item.technologyType)
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: [{
                        data: chartData.map(item => item.adoptionRate),
                        type: 'bar'
                    }]
                };
                chart.setOption(option);
                document.getElementById('sort-order').addEventListener('change', () => {
                    const sortOrder = document.getElementById('sort-order').value;
                    if (sortOrder === 'asc') {
                        chartData.sort((a, b) => a.adoptionRate - b.adoptionRate);
                    } else {
                        chartData.sort((a, b) => b.adoptionRate - a.adoptionRate);
                    }
                    chart.setOption({
                        xAxis: {
                            data: chartData.map(item => item.technologyType)
                        },
                        series: [{
                            data: chartData.map(item => item.adoptionRate)
                        }]
                    });
                });
            });
    </script>
</body>
</html>
```"

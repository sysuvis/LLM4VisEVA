Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot+bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to draw a visual interface consisting of two charts, a Scatterplot on the left that visualizes the relationship between Adoption Rate and Investment, and a Bar Chart on the right that displays Technology Type versus Adoption Rate.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,multiple view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Visualization</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 100%; height: 600px; display: flex; justify-content: space-around;"">
        <div id=""scatterplot"" style=""width: 45%; height: 100%;""></div>
        <div id=""barchart"" style=""width: 45%; height: 100%;""></div>
    </div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1).map(row => row.split(','));
                const scatterplotData = csvData.map(row => [parseFloat(row[2]), parseFloat(row[3])]);
                const barchartData = {};
                csvData.forEach(row => {
                    if (!barchartData[row[1]]) {
                        barchartData[row[1]] = [];
                    }
                    barchartData[row[1]].push(parseFloat(row[2]));
                });
                Object.keys(barchartData).forEach(key => {
                    barchartData[key] = barchartData[key].reduce((a, b) => a + b, 0) / barchartData[key].length;
                });

                const scatterplotChart = echarts.init(document.getElementById('scatterplot'));
                scatterplotChart.setOption({
                    title: {
                        text: 'Adoption Rate vs Investment'
                    },
                    xAxis: {
                        type: 'value',
                        name: 'Adoption Rate'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Investment'
                    },
                    series: [{
                        type: 'scatter',
                        data: scatterplotData
                    }]
                });

                const barchartChart = echarts.init(document.getElementById('barchart'));
                barchartChart.setOption({
                    title: {
                        text: 'Technology Type vs Adoption Rate'
                    },
                    xAxis: {
                        type: 'category',
                        data: Object.keys(barchartData)
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Adoption Rate'
                    },
                    series: [{
                        type: 'bar',
                        data: Object.values(barchartData)
                    }]
                });
            });
    </script>
</body>
</html>
```"
2,scatterplot+bar chart+brushing and linking,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to draw a visual interface consisting of two charts, a Scatterplot on the left that visualizes the relationship between Adoption Rate and Investment, and a Bar Chart on the right that displays Technology Type versus Adoption Rate. Enable brushing and linking functionality to enhance interactivity. Add the following interactive features: swipe to select a set of points in the Scatterplot, and the corresponding data in the Bar Chart will be highlighted.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,multiple view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Visualization</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
    <style>
        #chart1, #chart2 {
            width: 45%;
            height: 600px;
            display: inline-block;
        }
    </style>
</head>
<body>
    <div id=""chart1""></div>
    <div id=""chart2""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1).map(row => row.split(','));
                const chart1Data = [];
                const chart2Data = {};
                csvData.forEach(row => {
                    const [year, techType, adoptionRate, investment] = row;
                    chart1Data.push([parseFloat(adoptionRate), parseFloat(investment)]);
                    if (!chart2Data[techType]) {
                        chart2Data[techType] = [];
                    }
                    chart2Data[techType].push(parseFloat(adoptionRate));
                });
                const chart1 = echarts.init(document.getElementById('chart1'));
                const chart2 = echarts.init(document.getElementById('chart2'));
                const option1 = {
                    title: {
                        text: 'Adoption Rate vs Investment'
                    },
                    xAxis: {
                        name: 'Adoption Rate'
                    },
                    yAxis: {
                        name: 'Investment'
                    },
                    series: [
                        {
                            type: 'scatter',
                            data: chart1Data,
                            emphasis: {
                                itemStyle: {
                                    shadowBlur: 10,
                                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                                }
                            }
                        }
                    ],
                    brush: {
                        toolbox: ['rect', 'polygon', 'clear'],
                        xAxisIndex: 0
                    }
                };
                const option2 = {
                    title: {
                        text: 'Technology Type vs Adoption Rate'
                    },
                    xAxis: {
                        type: 'category',
                        data: Object.keys(chart2Data)
                    },
                    yAxis: {
                        name: 'Adoption Rate'
                    },
                    series: [
                        {
                            type: 'bar',
                            data: Object.values(chart2Data).map(arr => arr.reduce((a, b) => a + b, 0) / arr.length)
                        }
                    ]
                };
                chart1.setOption(option1);
                chart2.setOption(option2);
                chart1.on('brushSelected', params => {
                    const selectedData = params.batch[0].areas[0].data;
                    const selectedTechTypes = selectedData.map(point => {
                        const adoptionRate = point[0];
                        const investment = point[1];
                        const techType = Object.keys(chart2Data).find(key => {
                            const rates = chart2Data[key];
                            return rates.some(rate => rate >= adoptionRate - 0.1 && rate <= adoptionRate + 0.1);
                        });
                        return techType;
                    });
                    const option2Update = {
                        series: [
                            {
                                type: 'bar',
                                data: Object.keys(chart2Data).map(key => {
                                    if (selectedTechTypes.includes(key)) {
                                        return {
                                            value: Object.values(chart2Data).find(val => val[0] === chart2Data[key][0])[0],
                                            itemStyle: {
                                                color: 'red'
                                            }
                                        };
                                    } else {
                                        return Object.values(chart2Data).find(val => val[0] === chart2Data[key][0])[0];
                                    }
                                })
                            }
                        ]
                    };
                    chart2.setOption(option2Update);
                });
            });
    </script>
</body>
</html>
```"
3,line chart+pie chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to draw a visual interface consisting of two charts, a line chart on the top and a pie chart on the bottom, the line chart positioned above the pie chart. The line chart should display the trend of Adoption Rate , while the pie chart represents the distribution of Investment.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,multiple view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Visualization</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const adoptionRateData = [];
                const investmentData = [];
                const technologyTypeData = [];

                csvData.forEach(row => {
                    const columns = row.split(',');
                    adoptionRateData.push(parseFloat(columns[2]));
                    investmentData.push(parseFloat(columns[3]));
                    technologyTypeData.push(columns[1]);
                });

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    grid: {
                        top: '10%',
                        bottom: '50%'
                    },
                    xAxis: {
                        type: 'category',
                        data: technologyTypeData
                    },
                    yAxis: [
                        {
                            type: 'value',
                            name: 'Adoption Rate',
                            min: 0,
                            max: 100,
                            position: 'left',
                            axisLine: {
                                lineStyle: {
                                    color: '#999'
                                }
                            },
                            axisLabel: {
                                formatter: '{value} %'
                            }
                        }
                    ],
                    series: [
                        {
                            name: 'Adoption Rate',
                            type: 'line',
                            data: adoptionRateData,
                            yAxisIndex: 0
                        }
                    ]
                });

                const pieChart = echarts.init(document.getElementById('chart'));
                pieChart.setOption({
                    grid: {
                        top: '60%',
                        bottom: '10%'
                    },
                    series: [
                        {
                            name: 'Investment',
                            type: 'pie',
                            radius: '60%',
                            center: ['50%', '75%'],
                            data: technologyTypeData.map((type, index) => ({
                                value: investmentData[index],
                                name: type
                            })),
                            label: {
                                formatter: '{b}: {c} ({d}%)'
                            }
                        }
                    ]
                });
            });
    </script>
</body>
</html>
```"
4,line chart+pie chart+brushing and linking,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to draw a visual interface consisting of two charts, a line chart on the top and a pie chart on the bottom, the line chart positioned above the pie chart. The line chart should display the trend of Adoption Rate , while the pie chart represents the distribution of Investment. Enable brushing and linking functionality to enhance interactivity. Add the following interactive function: select a subset of data points in the line chart, which will dynamically update the pie chart to reflect the distribution of Investment for the selected group.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,multiple view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Visualization</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
    <style>
        #chart {
            width: 800px;
            height: 600px;
            border: 1px solid #ccc;
            padding: 10px;
        }
    </style>
</head>
<body>
    <div id=""chart""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1).map(row => row.split(','));
                const years = csvData.map(row => row[0]);
                const adoptionRates = csvData.map(row => parseFloat(row[2]));
                const investments = csvData.map(row => parseFloat(row[3]));

                const chart = echarts.init(document.getElementById('chart'));
                const option = {
                    grid: [
                        {
                            top: '10%',
                            left: '10%',
                            right: '10%',
                            height: '40%'
                        },
                        {
                            top: '60%',
                            left: '10%',
                            right: '10%',
                            height: '30%'
                        }
                    ],
                    dataZoom: [
                        {
                            type: 'inside',
                            xAxisIndex: 0,
                            start: 0,
                            end: 100
                        }
                    ],
                    xAxis: [
                        {
                            gridIndex: 0,
                            type: 'category',
                            data: years
                        },
                        {
                            gridIndex: 1,
                            type: 'category',
                            data: years
                        }
                    ],
                    yAxis: [
                        {
                            gridIndex: 0,
                            type: 'value'
                        },
                        {
                            gridIndex: 1,
                            type: 'value'
                        }
                    ],
                    series: [
                        {
                            name: 'Adoption Rate',
                            type: 'line',
                            xAxisIndex: 0,
                            yAxisIndex: 0,
                            data: adoptionRates,
                            sampling: 'lttb',
                            itemStyle: {
                                color: '#007bff'
                            }
                        },
                        {
                            name: 'Investment',
                            type: 'pie',
                            xAxisIndex: 1,
                            yAxisIndex: 1,
                            radius: ['40%', '60%'],
                            center: ['50%', '50%'],
                            data: investments.map((value, index) => ({ value, name: years[index] })),
                            itemStyle: {
                                borderColor: '#fff',
                                borderWidth: 1
                            }
                        }
                    ]
                };

                chart.setOption(option);

                chart.on('brushSelected', params => {
                    const selectedData = params.batch[0].selected[0].data;
                    const startIndex = selectedData[0].dataIndex[0];
                    const endIndex = selectedData[selectedData.length - 1].dataIndex[0];
                    const selectedInvestments = investments.slice(startIndex, endIndex + 1);
                    const selectedYears = years.slice(startIndex, endIndex + 1);

                    chart.setOption({
                        series: [
                            {
                                name: 'Investment',
                                type: 'pie',
                                data: selectedInvestments.map((value, index) => ({ value, name: selectedYears[index] }))
                            }
                        ]
                    });
                });
            });
    </script>
</body>
</html>
```"
5,scatterplot+matrix+highlight,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to draw a brushable Scatterplot Matrix that visualizes the pairwise relationships between Adoption Rate, Investment, Number of Users, and Market Share. Add the following interactive functions: brush to select data points in one cell and highlight them across all other cells.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,multiple view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Scatterplot Matrix</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/papaparse@5.3.0/dist/papaparse.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => Papa.parse(data, { header: true }))
            .then(result => {
                const adoptionRate = result.data.map(item => item['Adoption Rate']);
                const investment = result.data.map(item => item['Investment']);
                const numberOfUsers = result.data.map(item => item['Number of Users']);
                const marketShare = result.data.map(item => item['Market Share']);

                const series = [
                    {
                        type: 'scatter',
                        name: 'Adoption Rate vs Investment',
                        data: adoptionRate.map((item, index) => [item, investment[index]]),
                        x: 'Adoption Rate',
                        y: 'Investment',
                        id: 'adoptionRateVsInvestment'
                    },
                    {
                        type: 'scatter',
                        name: 'Adoption Rate vs Number of Users',
                        data: adoptionRate.map((item, index) => [item, numberOfUsers[index]]),
                        x: 'Adoption Rate',
                        y: 'Number of Users',
                        id: 'adoptionRateVsNumberOfUsers'
                    },
                    {
                        type: 'scatter',
                        name: 'Adoption Rate vs Market Share',
                        data: adoptionRate.map((item, index) => [item, marketShare[index]]),
                        x: 'Adoption Rate',
                        y: 'Market Share',
                        id: 'adoptionRateVsMarketShare'
                    },
                    {
                        type: 'scatter',
                        name: 'Investment vs Number of Users',
                        data: investment.map((item, index) => [item, numberOfUsers[index]]),
                        x: 'Investment',
                        y: 'Number of Users',
                        id: 'investmentVsNumberOfUsers'
                    },
                    {
                        type: 'scatter',
                        name: 'Investment vs Market Share',
                        data: investment.map((item, index) => [item, marketShare[index]]),
                        x: 'Investment',
                        y: 'Market Share',
                        id: 'investmentVsMarketShare'
                    },
                    {
                        type: 'scatter',
                        name: 'Number of Users vs Market Share',
                        data: numberOfUsers.map((item, index) => [item, marketShare[index]]),
                        x: 'Number of Users',
                        y: 'Market Share',
                        id: 'numberOfUsersVsMarketShare'
                    }
                ];

                const option = {
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross'
                        }
                    },
                    xAxis: [
                        { type: 'value', name: 'Adoption Rate', id: 'adoptionRate' },
                        { type: 'value', name: 'Investment', id: 'investment' },
                        { type: 'value', name: 'Number of Users', id: 'numberOfUsers' },
                        { type: 'value', name: 'Market Share', id: 'marketShare' }
                    ],
                    yAxis: [
                        { type: 'value', name: 'Investment', id: 'investment' },
                        { type: 'value', name: 'Number of Users', id: 'numberOfUsers' },
                        { type: 'value', name: 'Market Share', id: 'marketShare' },
                        { type: 'value', name: 'Adoption Rate', id: 'adoptionRate' }
                    ],
                    series: series,
                    brush: {
                        toolbox: ['rect', 'polygon', 'clear'],
                        xAxisIndex: [0, 2],
                        yAxisIndex: [0, 2],
                        brushLink: series.map(item => item.id),
                        outOfBrush: {
                            colorAlpha: 0.1
                        },
                        throttleType: 'debounce',
                        throttleDelay: 300
                    }
                };

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption(option);
            });
    </script>
</body>
</html>
```"
6,scatterplot+table,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a brushable Scatterplot that visualizes the relationship between Adoption Rate and Investment. Add the following interactive functions: Drag the rectangular brush to draw a table on the right side of the Scatterplot that shows the information of the selected points (the first 20).
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,multiple view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Adoption Rate vs Investment</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <div id=""table"" style=""width: 200px; height: 600px; overflow-y: auto; border: 1px solid #ccc; padding: 10px;""></div>

    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1).map(row => row.split(','));
                const chartData = csvData.map(row => [parseFloat(row[2]), parseFloat(row[3])]);

                const chart = echarts.init(document.getElementById('chart'));
                const table = document.getElementById('table');

                chart.setOption({
                    tooltip: {},
                    xAxis: {
                        type: 'value',
                        name: 'Adoption Rate'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Investment'
                    },
                    series: [{
                        type: 'scatter',
                        data: chartData,
                        symbolSize: 10,
                        emphasis: {
                            itemStyle: {
                                shadowBlur: 10,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        },
                        brush: {
                            type: 'rect',
                            xAxisIndex: 0,
                            yAxisIndex: 0,
                            brushStyle: {
                                borderWidth: 1,
                                color: 'rgba(0,0,0,0.2)'
                            },
                            throttleType: 'fixRate',
                            throttleDelay: 100
                        }
                    }]
                });

                chart.on('brushSelected', params => {
                    const selectedData = params.batch[0].areas[0].data;
                    const tableData = selectedData.slice(0, 20).map(index => csvData[index]);

                    const tableHtml = tableData.reduce((html, row) => {
                        return html + `
                            <tr>
                                <td>${row[0]}</td>
                                <td>${row[1]}</td>
                                <td>${row[2]}</td>
                                <td>${row[3]}</td>
                                <td>${row[4]}</td>
                                <td>${row[5]}</td>
                                <td>${row[6]}</td>
                                <td>${row[7]}</td>
                            </tr>
                        `;
                    }, '<table border=""1""><tr><th>Year</th><th>Technology Type</th><th>Adoption Rate</th><th>Investment</th><th>Return on Investment</th><th>Number of Users</th><th>Market Share</th><th>Customer Satisfaction Score</th></tr>');

                    table.innerHTML = tableHtml + '</table>';
                });
            });
    </script>
</body>
</html>
```"
7,bar chart+table+minimap,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score
Your task is to create a horizontal Bar Chart that shows Technology Type and Adoption Rate, with a smaller overview representation (called a minimap) displayed on the right.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv

The data table contains the following columns: Year,Technology Type,Adoption Rate,Investment,Return on Investment,Number of Users,Market Share,Customer Satisfaction Score",ECharts,multiple view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Technology Adoption Rate Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/8729038f70c9d0e839a3b65ffafd7cc6/raw/05448a679e012033b12b752057ad475e800f6d77/Technology%2520Adoption.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const technologyTypes = [];
                const adoptionRates = [];
                csvData.forEach(row => {
                    const columns = row.split(',');
                    technologyTypes.push(columns[1]);
                    adoptionRates.push(parseFloat(columns[2]));
                });

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    grid: {
                        left: '3%',
                        right: '20%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'value',
                        position: 'top',
                        splitLine: {
                            lineStyle: {
                                type: 'dashed'
                            }
                        }
                    },
                    yAxis: {
                        type: 'category',
                        data: technologyTypes,
                        splitLine: {
                            lineStyle: {
                                type: 'dashed'
                            }
                        }
                    },
                    series: [
                        {
                            name: 'Adoption Rate',
                            type: 'bar',
                            data: adoptionRates,
                            label: {
                                show: true,
                                position: 'right',
                                valueAnimation: true
                            }
                        }
                    ],
                    dataZoom: [
                        {
                            type: 'inside',
                            start: 0,
                            end: 100
                        },
                        {
                            show: true,
                            type: 'slider',
                            start: 0,
                            end: 100,
                            left: '93%',
                            height: '90%',
                            borderColor: 'rgba(73, 140, 207, 0.5)',
                            fillerColor: 'rgba(114, 229, 216, 0.2)',
                            handleStyle: {
                                color: '#ddd',
                                borderColor: '#ddd',
                                shadowBlur: 3,
                                shadowColor: 'rgba(0, 0, 0, 0.3)',
                                shadowOffsetX: 2,
                                shadowOffsetY: 2
                            },
                            textStyle: {
                                color: '#333'
                            },
                            dataBackground: {
                                lineStyle: {
                                    color: '#ddd'
                                },
                                areaStyle: {
                                    color: 'rgba(114, 229, 216, 0.2)'
                                }
                            },
                            fillerColor: 'rgba(114, 229, 216, 0.2)',
                            borderColor: '#ddd'
                        }
                    ]
                });
            });
    </script>
</body>
</html>
```"

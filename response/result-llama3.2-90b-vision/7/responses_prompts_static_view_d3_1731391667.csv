Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Scatterplot that visualizes the relationship between Net Income and Revenue.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Scatterplot of Net Income vs Revenue</title>
  <style>
    /* Add some basic styling to make the chart look better */
    body {
      font-family: Arial, sans-serif;
    }
    .axis text {
      font-size: 12px;
    }
    .axis path,
    .axis line {
      fill: none;
      stroke: #777;
      stroke-width: 1;
    }
  </style>
</head>
<body>
  <svg width=""800"" height=""600""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    // Set up the SVG and margins
    const margin = { top: 50, right: 50, bottom: 100, left: 100 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;
    const svg = d3.select('svg')
      .attr('width', width + margin.left + margin.right)
      .attr('height', height + margin.top + margin.bottom)
      .append('g')
      .attr('transform', `translate(${margin.left}, ${margin.top})`);

    // Load the data
    d3.csv('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(data => {
        // Convert data types
        data.forEach(d => {
          d['Net Income'] = +d['Net Income'];
          d.Revenue = +d.Revenue;
        });

        // Set up the scales
        const xScale = d3.scaleLinear()
          .domain([0, d3.max(data, d => d.Revenue)])
          .range([0, width]);
        const yScale = d3.scaleLinear()
          .domain([0, d3.max(data, d => d['Net Income'])])
          .range([height, 0]);

        // Add the axes
        const xAxis = d3.axisBottom(xScale)
          .ticks(10)
          .tickFormat(d3.format('.0s'));
        const yAxis = d3.axisLeft(yScale)
          .ticks(10)
          .tickFormat(d3.format('.0s'));
        svg.append('g')
          .attr('transform', `translate(0, ${height})`)
          .call(xAxis)
          .append('text')
          .attr('x', width / 2)
          .attr('y', 40)
          .attr('text-anchor', 'middle')
          .text('Revenue');
        svg.append('g')
          .call(yAxis)
          .append('text')
          .attr('transform', 'rotate(-90)')
          .attr('x', -height / 2)
          .attr('y', -60)
          .attr('text-anchor', 'middle')
          .text('Net Income');

        // Add the scatterplot points
        svg.selectAll('circle')
          .data(data)
          .enter()
          .append('circle')
          .attr('cx', d => xScale(d.Revenue))
          .attr('cy', d => yScale(d['Net Income']))
          .attr('r', 5)
          .attr('fill', 'steelblue');
      });
  </script>
</body>
</html>
```"
2,line chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Line Chart that visualizes the trend of Net Income over the Quarter for each Company.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Net Income Trend</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      width: 800px;
      height: 600px;
      margin: 50px auto;
    }
  </style>
</head>
<body>
  <div class=""chart"" id=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 50, right: 50, bottom: 50, left: 50 };
    const width = 700;
    const height = 500;
    const svg = d3.select(""#chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv"").then(data => {
      data.forEach(d => {
        d[""Net Income""] = +d[""Net Income""];
        d.Quarter = +d.Quarter;
      });

      const companies = [...new Set(data.map(d => d.Company))];

      const xScale = d3.scaleLinear()
        .domain(d3.extent(data, d => d.Quarter))
        .range([0, width]);

      const yScale = d3.scaleLinear()
        .domain([d3.min(data, d => d[""Net Income""]), d3.max(data, d => d[""Net Income""])])
        .range([height, 0]);

      svg.append(""g"")
        .attr(""transform"", `translate(0, ${height})`)
        .call(d3.axisBottom(xScale));

      svg.append(""g"")
        .call(d3.axisLeft(yScale));

      companies.forEach(company => {
        const companyData = data.filter(d => d.Company === company);

        const line = d3.line()
          .x(d => xScale(d.Quarter))
          .y(d => yScale(d[""Net Income""]));

        svg.append(""path"")
          .datum(companyData)
          .attr(""fill"", ""none"")
          .attr(""stroke"", ""steelblue"")
          .attr(""stroke-width"", 1.5)
          .attr(""d"", line);
      });
    });
  </script>
</body>
</html>
```"
3,bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Bar Chart that visualizes the Net Income for each Company in Q1-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Net Income for each Company in Q1-2021</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .bar {
      fill: steelblue;
    }
    .bar:hover {
      fill: brown;
    }
    .axis text {
      font-size: 12px;
    }
    .axis path,
    .axis line {
      fill: none;
      stroke: #777;
      stroke-width: 1;
    }
  </style>
</head>
<body>
  <svg width=""800"" height=""600""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Net Income""] = +d[""Net Income""];
          d.Quarter = d.Quarter;
          d.Company = d.Company;
        });

        const q1Data = data.filter(d => d.Quarter === ""Q1-2021"");

        const x = d3.scaleBand()
          .domain(q1Data.map(d => d.Company))
          .range([0, width])
          .padding(0.2);

        const y = d3.scaleLinear()
          .domain([0, d3.max(q1Data, d => d[""Net Income""])])
          .range([height, 0]);

        svg.append(""g"")
          .attr(""transform"", `translate(0, ${height})`)
          .call(d3.axisBottom(x));

        svg.append(""g"")
          .call(d3.axisLeft(y));

        svg.selectAll(""bar"")
          .data(q1Data)
          .enter()
          .append(""rect"")
          .attr(""class"", ""bar"")
          .attr(""x"", d => x(d.Company))
          .attr(""y"", d => y(d[""Net Income""]))
          .attr(""width"", x.bandwidth())
          .attr(""height"", d => height - y(d[""Net Income""]));
      });
  </script>
</body>
</html>
```"
4,pie chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Pie Chart that visualizes the proportion of Net Income contributed by each Company in Q1-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Net Income Proportion by Company in Q1-2021</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      width: 600px;
      height: 400px;
      margin: 40px auto;
    }
  </style>
</head>
<body>
  <div class=""chart"" id=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 600 - margin.left - margin.right;
    const height = 400 - margin.top - margin.bottom;
    const radius = Math.min(width, height) / 2;

    const svg = d3.select(""#chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${width / 2 + margin.left}, ${height / 2 + margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Net Income""] = +d[""Net Income""];
          d.Quarter = d.Quarter;
          d.Company = d.Company;
        });

        const q1Data = data.filter(d => d.Quarter === ""Q1-2021"");

        const pie = d3.pie()
          .value(d => d[""Net Income""]);

        const arc = d3.arc()
          .outerRadius(radius)
          .innerRadius(0);

        const arcs = svg.selectAll(""arc"")
          .data(pie(q1Data))
          .enter()
          .append(""g"")
          .attr(""class"", ""arc"");

        arcs.append(""path"")
          .attr(""d"", arc)
          .attr(""fill"", (d, i) => d3.schemeCategory10[i]);

        arcs.append(""text"")
          .attr(""transform"", d => `translate(${arc.centroid(d)})`)
          .attr(""dy"", ""0.35em"")
          .text(d => `${d.data.Company}: ${d3.format("".2f"")(d.value / d3.sum(q1Data, d => d[""Net Income""]) * 100)}%`);
      });
  </script>
</body>
</html>
```"
5,donut chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Donut Chart that visualizes the distribution of Net Income among Company in Q1-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Donut Chart</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      width: 500px;
      height: 500px;
      margin: 50px auto;
    }
  </style>
</head>
<body>
  <div class=""chart"" id=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 50, right: 50, bottom: 50, left: 50 };
    const width = 500 - margin.left - margin.right;
    const height = 500 - margin.top - margin.bottom;
    const radius = Math.min(width, height) / 2;

    const svg = d3.select(""#chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${width / 2 + margin.left}, ${height / 2 + margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Net Income""] = +d[""Net Income""];
          d.Quarter = d.Quarter;
        });

        const q1Data = data.filter(d => d.Quarter === ""Q1-2021"");

        const pie = d3.pie()
          .value(d => d[""Net Income""]);

        const arc = d3.arc()
          .outerRadius(radius - 10)
          .innerRadius(radius - 100);

        const arcs = svg.selectAll(""arc"")
          .data(pie(q1Data))
          .enter()
          .append(""g"")
          .attr(""class"", ""arc"");

        arcs.append(""path"")
          .attr(""d"", arc)
          .attr(""fill"", (d, i) => d3.schemeCategory10[i]);

        arcs.append(""text"")
          .attr(""transform"", d => `translate(${arc.centroid(d)})`)
          .attr(""dy"", ""0.35em"")
          .text(d => `${d.data.Company}: ${d.value.toLocaleString()}`);

        svg.append(""text"")
          .attr(""x"", 0)
          .attr(""y"", -200)
          .attr(""text-anchor"", ""middle"")
          .style(""font-size"", ""24px"")
          .text(""Distribution of Net Income among Companies in Q1-2021"");
      });
  </script>
</body>
</html>
```"
6,coxcomb chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Coxcomb Chart(polar area chart) to compare the Net Income of different Company in Q1-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Coxcomb Chart</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      width: 600px;
      height: 600px;
      margin: 0 auto;
    }
  </style>
</head>
<body>
  <div class=""chart"" id=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 20, left: 20 };
    const width = 600 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select(""#chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Net Income""] = +d[""Net Income""];
          d.Quarter = d.Quarter;
          d.Company = d.Company;
        });

        const q1Data = data.filter(d => d.Quarter === ""Q1-2021"");

        const companies = Array.from(new Set(q1Data.map(d => d.Company)));

        const angleScale = d3.scalePoint()
          .domain(companies)
          .range([0, 2 * Math.PI]);

        const radiusScale = d3.scaleLinear()
          .domain([0, d3.max(q1Data, d => d[""Net Income""])])
          .range([0, Math.min(width, height) / 2]);

        svg.selectAll(""path"")
          .data(q1Data)
          .enter()
          .append(""path"")
          .attr(""d"", d => {
            const startAngle = angleScale(d.Company);
            const endAngle = startAngle + (2 * Math.PI / companies.length);
            const radius = radiusScale(d[""Net Income""]);
            return `M ${width / 2} ${height / 2} L ${width / 2 + radius * Math.cos(startAngle)} ${height / 2 + radius * Math.sin(startAngle)} A ${radius} ${radius} 0 ${endAngle - startAngle > Math.PI ? 1 : 0} 1 ${width / 2 + radius * Math.cos(endAngle)} ${height / 2 + radius * Math.sin(endAngle)} Z`;
          })
          .attr(""fill"", (d, i) => d3.schemeCategory10[i % 10])
          .attr(""stroke"", ""black"")
          .attr(""stroke-width"", 1);

        svg.selectAll(""text"")
          .data(companies)
          .enter()
          .append(""text"")
          .attr(""x"", d => width / 2 + (radiusScale(d3.max(q1Data, d => d[""Net Income""])) + 10) * Math.cos(angleScale(d)))
          .attr(""y"", d => height / 2 + (radiusScale(d3.max(q1Data, d => d[""Net Income""])) + 10) * Math.sin(angleScale(d)))
          .text(d => d);
      });
  </script>
</body>
</html>
```"
7,radar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Radar Chart to compare the Net Income of different Company in Q1-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Radar Chart</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .axis text {
      font-size: 12px;
    }
    .axis path, .axis line {
      fill: none;
      stroke: #777;
      stroke-width: 1;
    }
  </style>
</head>
<body>
  <svg width=""600"" height=""600""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 50, right: 50, bottom: 50, left: 50 };
    const width = 600 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;
    const svg = d3.select('svg')
      .attr('width', width + margin.left + margin.right)
      .attr('height', height + margin.top + margin.bottom)
      .append('g')
      .attr('transform', `translate(${margin.left}, ${margin.top})`);

    d3.csv('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(data => {
        data.forEach(d => {
          d['Net Income'] = +d['Net Income'];
          d['Quarter'] = d['Quarter'];
          d['Company'] = d['Company'];
        });

        const q1Data = data.filter(d => d['Quarter'] === 'Q1-2021');

        const companies = [...new Set(q1Data.map(d => d['Company']))];
        const angles = companies.map((_, i) => i * (360 / companies.length));

        const maxNetIncome = Math.max(...q1Data.map(d => d['Net Income']));
        const radius = Math.min(width, height) / 2 - 50;

        const radarLine = d3.lineRadial()
          .angle((d, i) => angles[i])
          .radius(d => d.value / maxNetIncome * radius);

        const g = svg.selectAll('g')
          .data(q1Data.filter(d => companies.includes(d['Company'])))
          .enter()
          .append('g')
          .attr('transform', `translate(${width / 2}, ${height / 2})`);

        g.append('path')
          .datum(d => companies.map(company => ({ value: q1Data.find(c => c['Company'] === company)['Net Income'] })))
          .attr('d', radarLine)
          .attr('stroke', 'black')
          .attr('stroke-width', 2)
          .attr('fill', 'none');

        const axis = svg.selectAll('axis')
          .data(angles)
          .enter()
          .append('line')
          .attr('x1', width / 2)
          .attr('y1', height / 2)
          .attr('x2', (d, i) => width / 2 + radius * Math.cos(d * Math.PI / 180))
          .attr('y2', (d, i) => height / 2 + radius * Math.sin(d * Math.PI / 180))
          .attr('stroke', 'black')
          .attr('stroke-width', 1);

        const labels = svg.selectAll('labels')
          .data(companies)
          .enter()
          .append('text')
          .attr('x', (d, i) => width / 2 + (radius + 20) * Math.cos(angles[i] * Math.PI / 180))
          .attr('y', (d, i) => height / 2 + (radius + 20) * Math.sin(angles[i] * Math.PI / 180))
          .text(d => d);
      });
  </script>
</body>
</html>
```"
8,streamgraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Streamgraph that visualizes the changes of Net Income over the Quarter for each Company.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Streamgraph of Net Income over Quarter for each Company</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      margin: 20px;
    }
  </style>
</head>
<body>
  <div class=""chart"" id=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 800 - margin.left - margin.right;
    const height = 500 - margin.top - margin.bottom;

    const svg = d3.select(""#chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv"").then(data => {
      data.forEach(d => {
        d[""Net Income""] = +d[""Net Income""];
        d.Quarter = d.Quarter;
        d.Company = d.Company;
      });

      const companies = Array.from(new Set(data.map(d => d.Company)));
      const quarters = Array.from(new Set(data.map(d => d.Quarter)));

      const xScale = d3.scalePoint()
        .domain(quarters)
        .range([0, width])
        .padding(0.5);

      const yScale = d3.scaleLinear()
        .range([height, 0]);

      const zScale = d3.scaleOrdinal(d3.schemeCategory10)
        .domain(companies);

      const stack = d3.stack()
        .keys(companies)
        .offset(d3.stackOffsetWiggle)
        .order(d3.stackOrderNone);

      const stackedData = stack(data);

      yScale.domain([d3.min(stackedData, d => d3.min(d, d => d[0])), d3.max(stackedData, d => d3.max(d, d => d[1]))]);

      svg.selectAll(""layer"")
        .data(stackedData)
        .enter()
        .append(""path"")
        .attr(""class"", ""layer"")
        .attr(""d"", d3.line()
          .x((d, i) => xScale(quarters[i]))
          .y0(d => yScale(d[0]))
          .y1(d => yScale(d[1]))
        )
        .style(""fill"", (d, i) => zScale(companies[i]));

      svg.append(""g"")
        .attr(""class"", ""axis"")
        .attr(""transform"", `translate(0, ${height})`)
        .call(d3.axisBottom(xScale));

      svg.append(""g"")
        .attr(""class"", ""axis"")
        .call(d3.axisLeft(yScale));
    });
  </script>
</body>
</html>
```"
9,slopegraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Slopegraph to compare the Net Income between Q1-2021 and Q2-2021 for each Company.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Slopegraph</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .slopegraph {
      width: 800px;
      height: 600px;
      margin: 50px auto;
    }
    .slopegraph .line {
      stroke: #ccc;
      stroke-width: 1.5px;
    }
    .slopegraph .circle {
      fill: #fff;
      stroke: #ccc;
      stroke-width: 1.5px;
    }
    .slopegraph .label {
      font-size: 12px;
      text-anchor: middle;
    }
  </style>
</head>
<body>
  <svg class=""slopegraph""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 50, right: 50, bottom: 50, left: 50 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select('.slopegraph')
      .attr('width', width + margin.left + margin.right)
      .attr('height', height + margin.top + margin.bottom)
      .append('g')
      .attr('transform', `translate(${margin.left}, ${margin.top})`);

    d3.csv('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(data => {
        data.forEach(d => {
          d['Net Income'] = +d['Net Income'];
          d['Quarter'] = d['Quarter'].replace('Q', '').split('-');
          d['Quarter'] = `${d['Quarter'][0]}-${d['Quarter'][1]}`;
        });

        const q1Data = data.filter(d => d['Quarter'] === '1-2021');
        const q2Data = data.filter(d => d['Quarter'] === '2-2021');

        const companies = [...new Set(data.map(d => d['Company']))];
        const netIncomeExtent = d3.extent(data, d => d['Net Income']);

        const xScale = d3.scalePoint()
          .domain(['Q1-2021', 'Q2-2021'])
          .range([0, width])
          .padding(0.5);

        const yScale = d3.scaleLinear()
          .domain(netIncomeExtent)
          .range([height, 0]);

        svg.selectAll('.line')
          .data(companies)
          .enter()
          .append('line')
          .attr('class', 'line')
          .attr('x1', d => xScale('Q1-2021'))
          .attr('y1', d => yScale(q1Data.find(q => q['Company'] === d)['Net Income']))
          .attr('x2', d => xScale('Q2-2021'))
          .attr('y2', d => yScale(q2Data.find(q => q['Company'] === d)['Net Income']));

        svg.selectAll('.circle')
          .data(companies)
          .enter()
          .append('circle')
          .attr('class', 'circle')
          .attr('cx', d => xScale('Q1-2021'))
          .attr('cy', d => yScale(q1Data.find(q => q['Company'] === d)['Net Income']))
          .attr('r', 5);

        svg.selectAll('.circle2')
          .data(companies)
          .enter()
          .append('circle')
          .attr('class', 'circle')
          .attr('cx', d => xScale('Q2-2021'))
          .attr('cy', d => yScale(q2Data.find(q => q['Company'] === d)['Net Income']))
          .attr('r', 5);

        svg.selectAll('.label')
          .data(companies)
          .enter()
          .append('text')
          .attr('class', 'label')
          .attr('x', d => xScale('Q1-2021'))
          .attr('y', d => yScale(q1Data.find(q => q['Company'] === d)['Net Income']) - 10)
          .text(d => d);

        svg.selectAll('.label2')
          .data(companies)
          .enter()
          .append('text')
          .attr('class', 'label')
          .attr('x', d => xScale('Q2-2021'))
          .attr('y', d => yScale(q2Data.find(q => q['Company'] === d)['Net Income']) - 10)
          .text(d => d);

        svg.append('text')
          .attr('x', xScale('Q1-2021'))
          .attr('y', height + 20)
          .text('Q1-2021');

        svg.append('text')
          .attr('x', xScale('Q2-2021'))
          .attr('y', height + 20)
          .text('Q2-2021');
      });
  </script>
</body>
</html>
```"
10,heatmap,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Heatmap that visualizes the Net Income across Company and Quarters.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Heatmap of Net Income across Company and Quarters</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .axis text {
      font-size: 12px;
    }
    .axis path, .axis line {
      fill: none;
      stroke: #777;
      stroke-width: 1;
    }
  </style>
</head>
<body>
  <svg width=""800"" height=""600""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 80, right: 100, bottom: 100, left: 100 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select(""svg"")
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Net Income""] = +d[""Net Income""];
          d.Quarter = d.Quarter;
          d.Company = d.Company;
        });

        const companies = [...new Set(data.map(d => d.Company))].sort();
        const quarters = [...new Set(data.map(d => d.Quarter))].sort();

        const xScale = d3.scaleBand()
          .domain(companies)
          .range([0, width])
          .padding(0.1);

        const yScale = d3.scaleBand()
          .domain(quarters)
          .range([height, 0])
          .padding(0.1);

        const colorScale = d3.scaleSequential()
          .domain([d3.min(data, d => d[""Net Income""]), d3.max(data, d => d[""Net Income""])])
          .interpolator(d3.interpolateBlues);

        svg.selectAll(""rect"")
          .data(data)
          .enter()
          .append(""rect"")
          .attr(""x"", d => xScale(d.Company))
          .attr(""y"", d => yScale(d.Quarter))
          .attr(""width"", xScale.bandwidth())
          .attr(""height"", yScale.bandwidth())
          .attr(""fill"", d => colorScale(d[""Net Income""]));

        svg.append(""g"")
          .attr(""transform"", `translate(0, ${height})`)
          .call(d3.axisBottom(xScale))
          .selectAll(""text"")
          .attr(""transform"", ""rotate(-45)"")
          .attr(""text-anchor"", ""end"");

        svg.append(""g"")
          .call(d3.axisLeft(yScale));

        svg.append(""text"")
          .attr(""x"", width / 2)
          .attr(""y"", -40)
          .attr(""text-anchor"", ""middle"")
          .text(""Heatmap of Net Income across Company and Quarters"");

        svg.append(""text"")
          .attr(""x"", -height / 2)
          .attr(""y"", -60)
          .attr(""text-anchor"", ""middle"")
          .attr(""transform"", ""rotate(-90)"")
          .text(""Quarter"");

        svg.append(""text"")
          .attr(""x"", width / 2)
          .attr(""y"", height + 20)
          .attr(""text-anchor"", ""middle"")
          .text(""Company"");

        svg.append(""g"")
          .attr(""transform"", `translate(${width + 20}, 0)`)
          .call(d3.legendColor()
            .scale(colorScale)
            .title(""Net Income"")
            .cells(10));
      });
  </script>
</body>
</html>
```"
11,bar chart+stacked bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Stacked Bar Chart that visualizes the given data table.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Stacked Bar Chart</title>
  <style>
    .chart {
      width: 800px;
      height: 600px;
      margin: 0 auto;
    }
  </style>
</head>
<body>
  <div class=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select('.chart')
      .append('svg')
      .attr('width', width + margin.left + margin.right)
      .attr('height', height + margin.top + margin.bottom)
      .append('g')
      .attr('transform', `translate(${margin.left}, ${margin.top})`);

    d3.csv('https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv')
      .then(data => {
        data.forEach(d => {
          d['Net Income'] = +d['Net Income'];
          d['Revenue'] = +d['Revenue'];
          d['Expenses'] = +d['Expenses'];
        });

        const subgroups = ['Net Income', 'Revenue', 'Expenses'];
        const groups = Array.from(new Set(data.map(d => d.Company)));

        const x = d3.scaleBand()
          .domain(groups)
          .range([0, width])
          .padding(0.2);

        const y = d3.scaleLinear()
          .domain([0, d3.max(data, d => d3.max(subgroups, key => d[key]))])
          .range([height, 0]);

        const xSubgroup = d3.scaleBand()
          .domain(subgroups)
          .range([0, x.bandwidth()])
          .padding(0.05);

        svg.append('g')
          .attr('transform', `translate(0, ${height})`)
          .call(d3.axisBottom(x));

        svg.append('g')
          .call(d3.axisLeft(y));

        const group = svg.selectAll('groups')
          .data(groups)
          .enter()
          .append('g')
          .attr('transform', d => `translate(${x(d)}, 0)`);

        const bars = group.selectAll('rect')
          .data(d => subgroups.map(key => ({ key, value: data.find(item => item.Company === d)[key] })))
          .enter()
          .append('rect')
          .attr('x', d => xSubgroup(d.key))
          .attr('y', d => y(d.value))
          .attr('width', xSubgroup.bandwidth())
          .attr('height', d => height - y(d.value));
      });
  </script>
</body>
</html>
```"
12,bar chart+horizontal bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price
Your task is to create a Horizontal Bar Chart that visualizes the Net Income for each Company in Q1-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv

The data table contains the following columns: Quarter,Company,Net Income,Revenue,Expenses,Employee Count,Industry,Stock Price",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Net Income for each Company in Q1-2021</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      margin: 40px;
    }
  </style>
</head>
<body>
  <div class=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 500 - margin.left - margin.right;
    const height = 300 - margin.top - margin.bottom;

    const svg = d3.select("".chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/fcc3afbe4b998a16981b5b26589f6d71/raw/dfec0405212e82128fface3c20f1b75bf3789c03/Financial%2520Data.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Net Income""] = +d[""Net Income""];
          d.Quarter = d.Quarter;
        });

        const q1Data = data.filter(d => d.Quarter === ""Q1-2021"");

        const x = d3.scaleLinear()
          .domain([0, d3.max(q1Data, d => d[""Net Income""])])
          .range([0, width]);

        const y = d3.scaleBand()
          .domain(q1Data.map(d => d.Company))
          .range([height, 0])
          .padding(0.2);

        svg.selectAll(""rect"")
          .data(q1Data)
          .enter()
          .append(""rect"")
          .attr(""x"", 0)
          .attr(""y"", d => y(d.Company))
          .attr(""width"", d => x(d[""Net Income""]))
          .attr(""height"", y.bandwidth());

        svg.append(""g"")
          .attr(""transform"", `translate(0, ${height})`)
          .call(d3.axisBottom(x));

        svg.append(""g"")
          .call(d3.axisLeft(y));
      });
  </script>
</body>
</html>
```"

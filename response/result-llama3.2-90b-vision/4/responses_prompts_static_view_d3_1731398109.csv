Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Scatterplot that visualizes the relationship between Enrollment Number and Revenue.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Enrollment Number vs Revenue Scatterplot</title>
  <style>
    /* Add some basic styling to make the chart look better */
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      width: 800px;
      height: 600px;
      border: 1px solid black;
    }
  </style>
</head>
<body>
  <svg class=""chart""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    // Set up the dimensions of the chart
    const margin = { top: 50, right: 50, bottom: 50, left: 50 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    // Create the SVG element
    const svg = d3.select(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    // Load the data
    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"")
      .then(data => {
        // Convert data types
        data.forEach(d => {
          d[""Enrollment Number""] = +d[""Enrollment Number""];
          d[""Revenue""] = +d[""Revenue""];
        });

        // Create the scales
        const xScale = d3.scaleLinear()
          .domain([0, d3.max(data, d => d[""Enrollment Number""])])
          .range([0, width]);
        const yScale = d3.scaleLinear()
          .domain([0, d3.max(data, d => d[""Revenue""])])
          .range([height, 0]);

        // Create the axes
        const xAxis = d3.axisBottom(xScale);
        const yAxis = d3.axisLeft(yScale);
        svg.append(""g"")
          .attr(""transform"", `translate(0, ${height})`)
          .call(xAxis);
        svg.append(""g"")
          .call(yAxis);

        // Create the scatterplot
        svg.selectAll(""circle"")
          .data(data)
          .enter()
          .append(""circle"")
          .attr(""cx"", d => xScale(d[""Enrollment Number""]))
          .attr(""cy"", d => yScale(d[""Revenue""]))
          .attr(""r"", 5);

        // Add axis labels
        svg.append(""text"")
          .attr(""x"", width / 2)
          .attr(""y"", height + 30)
          .attr(""text-anchor"", ""middle"")
          .text(""Enrollment Number"");
        svg.append(""text"")
          .attr(""x"", -30)
          .attr(""y"", height / 2)
          .attr(""text-anchor"", ""middle"")
          .attr(""transform"", ""rotate(-90)"")
          .text(""Revenue"");
      });
  </script>
</body>
</html>
```"
2,line chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Line Chart that visualizes the trend of Enrollment Number over the Quarter for each Education Level.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Enrollment Number Trend</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      margin: 40px;
    }
  </style>
</head>
<body>
  <div class=""chart"" id=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select(""#chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Enrollment Number""] = +d[""Enrollment Number""];
          d.Quarter = +d.Quarter;
        });

        const educationLevels = [...new Set(data.map(d => d[""Education Level""]))];

        const xScale = d3.scaleLinear()
          .domain(d3.extent(data, d => d.Quarter))
          .range([0, width]);

        const yScale = d3.scaleLinear()
          .domain([0, d3.max(data, d => d[""Enrollment Number""])])
          .range([height, 0]);

        const line = d3.line()
          .x(d => xScale(d.Quarter))
          .y(d => yScale(d[""Enrollment Number""]));

        educationLevels.forEach(educationLevel => {
          const educationData = data.filter(d => d[""Education Level""] === educationLevel);

          svg.append(""path"")
            .datum(educationData)
            .attr(""fill"", ""none"")
            .attr(""stroke"", ""steelblue"")
            .attr(""stroke-width"", 1.5)
            .attr(""d"", line);
        });

        svg.append(""g"")
          .attr(""transform"", `translate(0, ${height})`)
          .call(d3.axisBottom(xScale));

        svg.append(""g"")
          .call(d3.axisLeft(yScale));

        svg.append(""text"")
          .attr(""transform"", `translate(${width / 2}, ${height + margin.bottom - 5})`)
          .attr(""text-anchor"", ""middle"")
          .text(""Quarter"");

        svg.append(""text"")
          .attr(""transform"", `rotate(-90) translate(${-height / 2}, ${-margin.left + 15})`)
          .attr(""text-anchor"", ""middle"")
          .text(""Enrollment Number"");

        educationLevels.forEach((educationLevel, index) => {
          svg.append(""text"")
            .attr(""transform"", `translate(${width - 100}, ${height - index * 20})`)
            .attr(""text-anchor"", ""end"")
            .text(educationLevel);
        });
      });
  </script>
</body>
</html>
```"
3,bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Bar Chart that visualizes the Enrollment Number for each Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Enrollment Number by Education Level in Q2-2021</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      width: 800px;
      height: 600px;
      margin: 0 auto;
    }
  </style>
</head>
<body>
  <div class=""chart"" id=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select(""#chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Enrollment Number""] = +d[""Enrollment Number""];
        });

        const q2Data = data.filter(d => d.Quarter === ""Q2-2021"");

        const x = d3.scaleBand()
          .domain(q2Data.map(d => d[""Education Level""]))
          .range([0, width])
          .padding(0.2);

        const y = d3.scaleLinear()
          .domain([0, d3.max(q2Data, d => d[""Enrollment Number""])])
          .range([height, 0]);

        svg.append(""g"")
          .attr(""transform"", `translate(0, ${height})`)
          .call(d3.axisBottom(x));

        svg.append(""g"")
          .call(d3.axisLeft(y));

        svg.selectAll(""bar"")
          .data(q2Data)
          .enter()
          .append(""rect"")
          .attr(""x"", d => x(d[""Education Level""]))
          .attr(""y"", d => y(d[""Enrollment Number""]))
          .attr(""width"", x.bandwidth())
          .attr(""height"", d => height - y(d[""Enrollment Number""]));
      });
  </script>
</body>
</html>
```"
4,pie chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Pie Chart that visualizes the proportion of Enrollment Number contributed by each Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Educational Enrollment Pie Chart</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    #chart {
      width: 500px;
      height: 500px;
      margin: 0 auto;
    }
  </style>
</head>
<body>
  <div id=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 500 - margin.left - margin.right;
    const height = 500 - margin.top - margin.bottom;

    const svg = d3.select(""#chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Enrollment Number""] = +d[""Enrollment Number""];
        });

        const q2Data = data.filter(d => d.Quarter === ""Q2-2021"");

        const educationLevels = [...new Set(q2Data.map(d => d[""Education Level""]))];

        const pie = d3.pie()
          .value(d => d[""Enrollment Number""]);

        const arcs = svg.selectAll(""arc"")
          .data(pie(q2Data))
          .enter()
          .append(""path"")
          .attr(""d"", d3.arc()
            .innerRadius(0)
            .outerRadius(Math.min(width, height) / 2)
          )
          .attr(""fill"", (d, i) => d3.schemeCategory10[i % 10])
          .attr(""transform"", `translate(${width / 2}, ${height / 2})`);

        const legend = svg.selectAll(""legend"")
          .data(educationLevels)
          .enter()
          .append(""g"")
          .attr(""transform"", (d, i) => `translate(0, ${i * 20})`);

        legend.append(""rect"")
          .attr(""x"", width / 2 + 10)
          .attr(""y"", 10)
          .attr(""width"", 10)
          .attr(""height"", 10)
          .attr(""fill"", (d, i) => d3.schemeCategory10[i % 10]);

        legend.append(""text"")
          .attr(""x"", width / 2 + 25)
          .attr(""y"", 20)
          .text(d => d);
      });
  </script>
</body>
</html>
```"
5,donut chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Donut Chart that visualizes the distribution of Enrollment Number among Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Educational Enrollment Donut Chart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .chart {
            width: 500px;
            height: 500px;
            margin: 50px auto;
        }
    </style>
</head>
<body>
    <div class=""chart"" id=""chart""></div>
    <script src=""https://d3js.org/d3.v7.min.js""></script>
    <script>
        const margin = { top: 50, right: 50, bottom: 50, left: 50 };
        const width = 500 - margin.left - margin.right;
        const height = 500 - margin.top - margin.bottom;
        const radius = Math.min(width, height) / 2;

        const svg = d3.select(""#chart"")
            .append(""svg"")
            .attr(""width"", width + margin.left + margin.right)
            .attr(""height"", height + margin.top + margin.bottom)
            .append(""g"")
            .attr(""transform"", `translate(${width / 2 + margin.left}, ${height / 2 + margin.top})`);

        d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"")
            .then(data => {
                data.forEach(d => {
                    d[""Enrollment Number""] = +d[""Enrollment Number""];
                    d.Quarter = d.Quarter;
                });

                const q2Data = data.filter(d => d.Quarter === ""Q2-2021"");

                const educationLevels = Array.from(new Set(q2Data.map(d => d[""Education Level""])));

                const pie = d3.pie()
                    .value(d => d[""Enrollment Number""]);

                const arc = d3.arc()
                    .outerRadius(radius - 10)
                    .innerRadius(radius - 100);

                const arcs = svg.selectAll(""arc"")
                    .data(pie(q2Data))
                    .enter()
                    .append(""g"")
                    .attr(""class"", ""arc"");

                arcs.append(""path"")
                    .attr(""d"", arc)
                    .attr(""fill"", (d, i) => d3.schemeCategory10[i]);

                arcs.append(""text"")
                    .attr(""transform"", d => `translate(${arc.centroid(d)})`)
                    .attr(""dy"", ""0.35em"")
                    .text(d => educationLevels[d.index]);

                svg.append(""text"")
                    .attr(""x"", 0)
                    .attr(""y"", -200)
                    .attr(""text-anchor"", ""middle"")
                    .style(""font-size"", ""24px"")
                    .text(""Distribution of Enrollment Number among Education Level in Q2-2021"");
            });
    </script>
</body>
</html>
```"
6,coxcomb chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Coxcomb Chart(polar area chart) to compare the Enrollment Number of different Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Coxcomb Chart</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      width: 600px;
      height: 600px;
      margin: 0 auto;
    }
  </style>
</head>
<body>
  <div class=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 20, left: 20 };
    const width = 600 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select('.chart')
      .append('svg')
      .attr('width', width + margin.left + margin.right)
      .attr('height', height + margin.top + margin.bottom)
      .append('g')
      .attr('transform', `translate(${margin.left}, ${margin.top})`);

    d3.csv('https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv')
      .then(data => {
        data.forEach(d => {
          d['Enrollment Number'] = +d['Enrollment Number'];
        });

        const filteredData = data.filter(d => d.Quarter === 'Q2-2021');

        const educationLevels = [...new Set(filteredData.map(d => d['Education Level']))];

        const angles = educationLevels.map((_, i) => i * (360 / educationLevels.length));

        const radiusScale = d3.scaleLinear()
          .domain([0, d3.max(filteredData, d => d['Enrollment Number'])])
          .range([0, Math.min(width, height) / 2]);

        const pie = d3.pie()
          .value(d => d['Enrollment Number'])
          .sort(null);

        const arcs = pie(filteredData);

        svg.selectAll('path')
          .data(arcs)
          .enter()
          .append('path')
          .attr('d', d3.arc()
            .innerRadius(0)
            .outerRadius(d => radiusScale(d.value))
          )
          .attr('fill', (d, i) => d3.schemeCategory10[i % 10])
          .attr('transform', `rotate(${angles[educationLevels.indexOf(d.data['Education Level'])]})`);

        svg.selectAll('text')
          .data(educationLevels)
          .enter()
          .append('text')
          .attr('x', (d, i) => Math.cos(angles[i] * Math.PI / 180) * (radiusScale(d3.max(filteredData, d => d['Enrollment Number'])) + 20))
          .attr('y', (d, i) => Math.sin(angles[i] * Math.PI / 180) * (radiusScale(d3.max(filteredData, d => d['Enrollment Number'])) + 20))
          .text(d => d);
      });
  </script>
</body>
</html>
```"
7,radar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Radar Chart to compare the Enrollment Number of different Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Radar Chart</title>
  <style>
    .axis text {
      font-size: 12px;
    }
    .axis path,
    .axis line {
      fill: none;
      stroke: #777;
      stroke-width: 1;
    }
  </style>
</head>
<body>
  <svg width=""600"" height=""600""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 100, right: 100, bottom: 100, left: 100 };
    const width = 600 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select(""svg"")
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Enrollment Number""] = +d[""Enrollment Number""];
        });

        const q2Data = data.filter(d => d.Quarter === ""Q2-2021"");

        const educationLevels = [...new Set(q2Data.map(d => d[""Education Level""]))];

        const angles = educationLevels.map((_, i) => i * (2 * Math.PI / educationLevels.length));

        const radius = Math.min(width, height) / 2;

        const radarLine = d3.lineRadial()
          .radius(d => d.value)
          .angle((d, i) => angles[i]);

        const maxEnrollment = d3.max(q2Data, d => d[""Enrollment Number""]);

        const yScale = d3.scaleLinear()
          .domain([0, maxEnrollment])
          .range([radius, 0]);

        const axis = svg.selectAll("".axis"")
          .data(angles)
          .enter()
          .append(""g"")
          .attr(""class"", ""axis"")
          .attr(""transform"", (d, i) => `rotate(${d * 180 / Math.PI}) translate(0, ${-radius})`);

        axis.append(""line"")
          .attr(""x2"", 0)
          .attr(""y2"", radius);

        axis.append(""text"")
          .attr(""x"", 0)
          .attr(""y"", radius + 10)
          .attr(""text-anchor"", ""middle"")
          .text((d, i) => educationLevels[i]);

        const circles = svg.selectAll("".circle"")
          .data([maxEnrollment / 4, maxEnrollment / 2, maxEnrollment * 3 / 4])
          .enter()
          .append(""circle"")
          .attr(""class"", ""circle"")
          .attr(""r"", d => yScale(d))
          .attr(""cx"", 0)
          .attr(""cy"", 0);

        const lines = svg.selectAll("".line"")
          .data([maxEnrollment / 4, maxEnrollment / 2, maxEnrollment * 3 / 4])
          .enter()
          .append(""line"")
          .attr(""class"", ""line"")
          .attr(""x1"", 0)
          .attr(""y1"", d => yScale(d))
          .attr(""x2"", 0)
          .attr(""y2"", d => yScale(d))
          .attr(""transform"", `rotate(${2 * Math.PI / educationLevels.length})`);

        const radarData = educationLevels.map(educationLevel => {
          const enrollment = q2Data.find(d => d[""Education Level""] === educationLevel)[""Enrollment Number""];
          return { educationLevel, value: enrollment };
        });

        const path = svg.append(""path"")
          .datum(radarData)
          .attr(""class"", ""radar"")
          .attr(""d"", radarLine)
          .attr(""stroke"", ""black"")
          .attr(""stroke-width"", 2)
          .attr(""fill"", ""none"");

        const area = svg.append(""path"")
          .datum(radarData)
          .attr(""class"", ""area"")
          .attr(""d"", radarLine)
          .attr(""stroke"", ""none"")
          .attr(""fill"", ""lightblue"")
          .attr(""fill-opacity"", 0.5);
      });
  </script>
</body>
</html>
```"
8,streamgraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Streamgraph that visualizes the changes of Enrollment Number over the Quarter for each Education Level.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Streamgraph</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      margin: 20px;
    }
  </style>
</head>
<body>
  <div class=""chart"" id=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 800 - margin.left - margin.right;
    const height = 500 - margin.top - margin.bottom;

    const svg = d3.select(""#chart"")
      .append(""svg"")
      .attr(""width"", width + margin.left + margin.right)
      .attr(""height"", height + margin.top + margin.bottom)
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Enrollment Number""] = +d[""Enrollment Number""];
          d.Quarter = +d.Quarter;
        });

        const educationLevels = [...new Set(data.map(d => d[""Education Level""]))];

        const stack = d3.stack()
          .keys(educationLevels)
          .offset(d3.stackOffsetExpand);

        const stackedData = stack(data);

        const xScale = d3.scaleLinear()
          .domain(d3.extent(data, d => d.Quarter))
          .range([0, width]);

        const yScale = d3.scaleLinear()
          .domain([d3.min(stackedData, d => d3.min(d, d => d[0])), d3.max(stackedData, d => d3.max(d, d => d[1]))])
          .range([height, 0]);

        const area = d3.area()
          .x(d => xScale(d.data.Quarter))
          .y0(d => yScale(d[0]))
          .y1(d => yScale(d[1]));

        svg.selectAll(""path"")
          .data(stackedData)
          .enter()
          .append(""path"")
          .attr(""d"", area)
          .attr(""fill"", (d, i) => d3.schemeCategory10[i]);

        svg.append(""g"")
          .attr(""transform"", `translate(0, ${height})`)
          .call(d3.axisBottom(xScale));

        svg.append(""g"")
          .call(d3.axisLeft(yScale));
      });
  </script>
</body>
</html>
```"
9,slopegraph,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Slopegraph to compare the Enrollment Number between Q1-2020 and Q2-2020 for each Education Level.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Slopegraph</title>
  <style>
    .line {
      stroke: #666;
      stroke-width: 1.5px;
    }
    .circle {
      fill: #666;
      stroke: #fff;
      stroke-width: 1.5px;
    }
    .label {
      font-size: 12px;
    }
  </style>
</head>
<body>
  <svg width=""800"" height=""600""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 50, right: 50, bottom: 50, left: 100 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select('svg')
      .append('g')
      .attr('transform', `translate(${margin.left}, ${margin.top})`);

    d3.csv('https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv')
      .then(data => {
        data.forEach(d => {
          d['Enrollment Number'] = +d['Enrollment Number'];
        });

        const q1Data = data.filter(d => d.Quarter === 'Q1-2020');
        const q2Data = data.filter(d => d.Quarter === 'Q2-2020');

        const educationLevels = [...new Set(data.map(d => d['Education Level']))];
        const maxEnrollment = Math.max(...data.map(d => d['Enrollment Number']));

        const xScale = d3.scalePoint()
          .domain(['Q1-2020', 'Q2-2020'])
          .range([0, width])
          .padding(0.5);

        const yScale = d3.scaleLinear()
          .domain([0, maxEnrollment])
          .range([height, 0]);

        svg.selectAll('line')
          .data(educationLevels)
          .enter()
          .append('line')
          .attr('class', 'line')
          .attr('x1', d => xScale('Q1-2020'))
          .attr('y1', d => yScale(q1Data.find(q => q['Education Level'] === d)['Enrollment Number']))
          .attr('x2', d => xScale('Q2-2020'))
          .attr('y2', d => yScale(q2Data.find(q => q['Education Level'] === d)['Enrollment Number']));

        svg.selectAll('circle')
          .data(educationLevels)
          .enter()
          .append('circle')
          .attr('class', 'circle')
          .attr('cx', d => xScale('Q1-2020'))
          .attr('cy', d => yScale(q1Data.find(q => q['Education Level'] === d)['Enrollment Number']))
          .attr('r', 5);

        svg.selectAll('circle2')
          .data(educationLevels)
          .enter()
          .append('circle')
          .attr('class', 'circle')
          .attr('cx', d => xScale('Q2-2020'))
          .attr('cy', d => yScale(q2Data.find(q => q['Education Level'] === d)['Enrollment Number']))
          .attr('r', 5);

        svg.selectAll('text')
          .data(educationLevels)
          .enter()
          .append('text')
          .attr('class', 'label')
          .attr('x', d => xScale('Q1-2020') - 10)
          .attr('y', d => yScale(q1Data.find(q => q['Education Level'] === d)['Enrollment Number']))
          .attr('text-anchor', 'end')
          .text(d => d);

        svg.selectAll('text2')
          .data(educationLevels)
          .enter()
          .append('text')
          .attr('class', 'label')
          .attr('x', d => xScale('Q2-2020') + 10)
          .attr('y', d => yScale(q2Data.find(q => q['Education Level'] === d)['Enrollment Number']))
          .attr('text-anchor', 'start')
          .text(d => d);

        svg.append('g')
          .attr('transform', `translate(0, ${height})`)
          .call(d3.axisBottom(xScale));

        svg.append('g')
          .call(d3.axisLeft(yScale));
      });
  </script>
</body>
</html>
```"
10,heatmap,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Heatmap that visualizes the Enrollment Number across Education Level and Quarters.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Heatmap of Enrollment Number</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .axis text {
      font-size: 12px;
    }
    .axis path,
    .axis line {
      fill: none;
      stroke: #777;
      stroke-width: 1;
    }
  </style>
</head>
<body>
  <svg width=""800"" height=""600""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 80, right: 100, bottom: 100, left: 100 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select(""svg"")
      .append(""g"")
      .attr(""transform"", `translate(${margin.left}, ${margin.top})`);

    d3.csv(""https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv"")
      .then(data => {
        data.forEach(d => {
          d[""Enrollment Number""] = +d[""Enrollment Number""];
          d.Quarter = d.Quarter;
          d[""Education Level""] = d[""Education Level""];
        });

        const educationLevels = [...new Set(data.map(d => d[""Education Level""]))].sort();
        const quarters = [...new Set(data.map(d => d.Quarter))].sort();

        const xScale = d3.scaleBand()
          .domain(quarters)
          .range([0, width])
          .padding(0.1);

        const yScale = d3.scaleBand()
          .domain(educationLevels)
          .range([height, 0])
          .padding(0.1);

        const colorScale = d3.scaleSequential()
          .domain([0, d3.max(data, d => d[""Enrollment Number""])])
          .interpolator(d3.interpolateBlues);

        svg.selectAll(""rect"")
          .data(data)
          .enter()
          .append(""rect"")
          .attr(""x"", d => xScale(d.Quarter))
          .attr(""y"", d => yScale(d[""Education Level""]))
          .attr(""width"", xScale.bandwidth())
          .attr(""height"", yScale.bandwidth())
          .attr(""fill"", d => colorScale(d[""Enrollment Number""]));

        svg.append(""g"")
          .attr(""transform"", `translate(0, ${height})`)
          .call(d3.axisBottom(xScale))
          .selectAll(""text"")
          .attr(""transform"", ""rotate(-45)"")
          .attr(""text-anchor"", ""end"");

        svg.append(""g"")
          .call(d3.axisLeft(yScale));

        svg.append(""text"")
          .attr(""x"", width / 2)
          .attr(""y"", -50)
          .attr(""text-anchor"", ""middle"")
          .text(""Heatmap of Enrollment Number"");

        svg.append(""text"")
          .attr(""x"", width / 2)
          .attr(""y"", height + 30)
          .attr(""text-anchor"", ""middle"")
          .text(""Quarter"");

        svg.append(""text"")
          .attr(""x"", -height / 2)
          .attr(""y"", -60)
          .attr(""text-anchor"", ""middle"")
          .attr(""transform"", ""rotate(-90)"")
          .text(""Education Level"");

        const legend = svg.append(""g"")
          .attr(""transform"", `translate(${width + 20}, 0)`);

        legend.append(""text"")
          .attr(""x"", 0)
          .attr(""y"", -20)
          .attr(""text-anchor"", ""middle"")
          .text(""Enrollment Number"");

        const legendScale = d3.scaleLinear()
          .domain([0, d3.max(data, d => d[""Enrollment Number""])])
          .range([0, 200]);

        legend.selectAll(""rect"")
          .data(d3.range(0, 1.01, 0.01))
          .enter()
          .append(""rect"")
          .attr(""x"", 0)
          .attr(""y"", d => 200 - legendScale(d * d3.max(data, d => d[""Enrollment Number""])))
          .attr(""width"", 20)
          .attr(""height"", d => legendScale(d * d3.max(data, d => d[""Enrollment Number""])))
          .attr(""fill"", d => colorScale(d * d3.max(data, d => d[""Enrollment Number""])));

        legend.append(""g"")
          .call(d3.axisRight(legendScale)
            .ticks(5)
            .tickFormat(d3.format("".0f"")));
      });
  </script>
</body>
</html>
```"
11,bar chart+stacked bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Stacked Bar Chart that visualizes the given data table.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Stacked Bar Chart</title>
  <style>
    .chart {
      width: 800px;
      height: 600px;
      margin: 0 auto;
    }
  </style>
</head>
<body>
  <div class=""chart""></div>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 20, right: 20, bottom: 30, left: 40 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select('.chart')
      .append('svg')
      .attr('width', width + margin.left + margin.right)
      .attr('height', height + margin.top + margin.bottom)
      .append('g')
      .attr('transform', `translate(${margin.left}, ${margin.top})`);

    d3.csv('https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv')
      .then(data => {
        data.forEach(d => {
          d['Enrollment Number'] = +d['Enrollment Number'];
          d['Revenue'] = +d['Revenue'];
          d['Operating Costs'] = +d['Operating Costs'];
          d['Profit'] = +d['Profit'];
          d['Average Tuition'] = +d['Average Tuition'];
          d['Number of Staff'] = +d['Number of Staff'];
          d['Graduation Rate'] = +d['Graduation Rate'];
        });

        const keys = ['Revenue', 'Operating Costs', 'Profit'];
        const stackedData = d3.stack()
          .keys(keys)
          (data);

        const xScale = d3.scaleBand()
          .domain(data.map(d => d['Quarter']))
          .range([0, width])
          .padding(0.2);

        const yScale = d3.scaleLinear()
          .domain([0, d3.max(stackedData[stackedData.length - 1], d => d[1])])
          .range([height, 0]);

        svg.append('g')
          .attr('transform', `translate(0, ${height})`)
          .call(d3.axisBottom(xScale));

        svg.append('g')
          .call(d3.axisLeft(yScale));

        svg.selectAll('g.layer')
          .data(stackedData)
          .enter()
          .append('g')
          .attr('class', 'layer')
          .attr('fill', (d, i) => ['#4f81bd', '#c0504e', '#9bbb59'][i])
          .selectAll('rect')
          .data(d => d)
          .enter()
          .append('rect')
          .attr('x', d => xScale(d.data['Quarter']))
          .attr('y', d => yScale(d[1]))
          .attr('width', xScale.bandwidth())
          .attr('height', d => yScale(d[0]) - yScale(d[1]));
      });
  </script>
</body>
</html>
```"
12,bar chart+horizontal bar chart,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate
Your task is to create a Horizontal Bar Chart that visualizes the Enrollment Number for each Education Level in Q2-2021.
Use the following visualization library: D3.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the `d3.csv()` function to load data; when iterating over the data and converting data types, be sure to use square brackets to access property names that contain special characters (such as spaces or symbols).","https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv

The data table contains the following columns: Quarter,Education Level,Enrollment Number,Revenue,Operating Costs,Profit,Average Tuition,Number of Staff,Graduation Rate",D3,static view,"```html
<!DOCTYPE html>
<html>
<head>
  <meta charset=""UTF-8"">
  <title>Enrollment Number by Education Level in Q2-2021</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .chart {
      margin: 40px auto;
    }
    .chart rect {
      fill: steelblue;
    }
    .chart text {
      fill: #fff;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <svg class=""chart"" width=""800"" height=""600""></svg>
  <script src=""https://d3js.org/d3.v7.min.js""></script>
  <script>
    const margin = { top: 40, right: 20, bottom: 30, left: 200 };
    const width = 800 - margin.left - margin.right;
    const height = 600 - margin.top - margin.bottom;

    const svg = d3.select('.chart')
      .attr('width', width + margin.left + margin.right)
      .attr('height', height + margin.top + margin.bottom)
      .append('g')
      .attr('transform', `translate(${margin.left}, ${margin.top})`);

    d3.csv('https://gist.githubusercontent.com/FFFFFancy/e84fa1e18efa3cd9ab2c4fb5c27c6191/raw/da2c085514a6958572f6ed3fb7efaaaa967e40d5/Educational%2520Enrollment.csv')
      .then(data => {
        data.forEach(d => {
          d['Enrollment Number'] = +d['Enrollment Number'];
        });

        const q2Data = data.filter(d => d.Quarter === 'Q2-2021');

        const xScale = d3.scaleLinear()
          .domain([0, d3.max(q2Data, d => d['Enrollment Number'])])
          .range([0, width]);

        const yScale = d3.scaleBand()
          .domain(q2Data.map(d => d['Education Level']))
          .range([height, 0])
          .padding(0.2);

        svg.selectAll('rect')
          .data(q2Data)
          .enter()
          .append('rect')
          .attr('x', 0)
          .attr('y', d => yScale(d['Education Level']))
          .attr('width', d => xScale(d['Enrollment Number']))
          .attr('height', yScale.bandwidth());

        svg.selectAll('text')
          .data(q2Data)
          .enter()
          .append('text')
          .attr('x', d => xScale(d['Enrollment Number']) + 10)
          .attr('y', d => yScale(d['Education Level']) + yScale.bandwidth() / 2)
          .attr('text-anchor', 'start')
          .text(d => d['Enrollment Number']);

        svg.append('g')
          .attr('transform', `translate(0, ${height})`)
          .call(d3.axisBottom(xScale));

        svg.append('g')
          .call(d3.axisLeft(yScale));
      });
  </script>
</body>
</html>
```"

Prompt Number,title,Prompt,dataset,library,view_type,response
1,scatterplot+highlight,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Units Sold and Revenue. And add the following interactive function: when the mouse hovers over a specific data point, the value of the data point will be highlighted on the axis.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Retail Sales Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const unitsSold = [];
                const revenue = [];
                csvData.forEach(row => {
                    const [year, product, units, revenueValue, profit, stores, satisfaction] = row.split(',');
                    unitsSold.push(parseFloat(units));
                    revenue.push(parseFloat(revenueValue));
                });
                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Units Sold vs Revenue'
                    },
                    tooltip: {
                        trigger: 'item',
                        formatter: function (params) {
                            return `Units Sold: ${params.data[0]}<br>Revenue: ${params.data[1]}`;
                        }
                    },
                    xAxis: {
                        type: 'value',
                        name: 'Units Sold'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Revenue'
                    },
                    series: [
                        {
                            type: 'scatter',
                            data: unitsSold.map((unit, index) => [unit, revenue[index]]),
                            emphasis: {
                                itemStyle: {
                                    shadowBlur: 10,
                                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                                }
                            }
                        }
                    ]
                });
            });
    </script>
</body>
</html>
```"
2,scatterplot+brush,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Units Sold and Revenue. And add the following interactive functions: Brushing this Scatterplot will show the selected data points.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Retail Sales Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const chartData = csvData.map(row => {
                    const columns = row.split(',');
                    return [parseFloat(columns[2]), parseFloat(columns[3])];
                });

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Units Sold vs Revenue'
                    },
                    tooltip: {
                        trigger: 'item'
                    },
                    xAxis: {
                        type: 'value',
                        name: 'Units Sold'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Revenue'
                    },
                    series: [{
                        type: 'scatter',
                        data: chartData,
                        emphasis: {
                            itemStyle: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        },
                        selectData: true,
                        selectMode: 'multiple',
                        selectItemStyle: {
                            opacity: 0.5
                        },
                        unSelectItemStyle: {
                            opacity: 1
                        }
                    }]
                });

                chart.on('brushSelected', params => {
                    const selectedData = params.selected[0].data;
                    console.log(selectedData);
                });
            });
    </script>
</body>
</html>
```"
3,scatterplot+zoom,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Scatterplot that visualizes the relationship between Units Sold and Revenue. And add the following interactive functions: the Scatterplot can be zoomed via the mouse wheel.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Retail Sales Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const chartData = csvData.map(row => {
                    const columns = row.split(',');
                    return [parseFloat(columns[2]), parseFloat(columns[3])];
                });
                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Units Sold vs Revenue'
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'cross'
                        }
                    },
                    xAxis: {
                        type: 'value',
                        name: 'Units Sold'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Revenue'
                    },
                    series: [{
                        type: 'scatter',
                        data: chartData
                    }]
                });
            });
    </script>
</body>
</html>
```"
4,scatterplot+tooltip,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Scatterplot with external links and tooltips that visualizes the relationship between Units Sold and Revenue. And add the following interactive functions: opening a Google search for the point that you click on.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Retail Sales Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1).map(row => row.split(','));
                const chartData = csvData.map(row => [+row[2], +row[3]]);
                const chartCategories = csvData.map(row => row[1]);

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    tooltip: {
                        trigger: 'item',
                        formatter: params => {
                            const index = params.dataIndex;
                            return `Product: ${chartCategories[index]}<br/>Units Sold: ${params.value[0]}<br/>Revenue: ${params.value[1]}`;
                        }
                    },
                    series: [{
                        type: 'scatter',
                        data: chartData,
                        symbolSize: 10,
                        itemStyle: {
                            opacity: 0.8
                        },
                        emphasis: {
                            itemStyle: {
                                opacity: 1
                            }
                        }
                    }],
                    xAxis: {
                        type: 'value',
                        name: 'Units Sold'
                    },
                    yAxis: {
                        type: 'value',
                        name: 'Revenue'
                    }
                });

                chart.on('click', params => {
                    const index = params.dataIndex;
                    const product = chartCategories[index];
                    window.open(`https://www.google.com/search?q=${product}`, '_blank');
                });
            });
    </script>
</body>
</html>
```"
5,scatterplot+query widgets,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Scatterplot with query widgets showing the Units Sold and Revenue of the given dataset. Add a slider to represent the Year.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Retail Sales Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-gl@2.0.8/dist/echarts-gl.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-stat@1.1.1/dist/ecStat.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/extension/bmap.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-gl@2.0.8/dist/echarts-gl.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts-stat@1.1.1/dist/ecStat.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/extension/dataTool.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <div>
        <label for=""year"">Year:</label>
        <input type=""range"" id=""year"" min=""2015"" max=""2019"" value=""2015"">
        <label id=""yearValue"">2015</label>
    </div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const chartData = [];
                csvData.forEach(row => {
                    const [Year, Product, UnitsSold, Revenue, Profit, NumberOfStores, CustomerSatisfactionScore] = row.split(',');
                    chartData.push([parseFloat(UnitsSold), parseFloat(Revenue)]);
                });
                const yearData = [...new Set(csvData.map(row => row.split(',')[0]))].sort((a, b) => a - b);
                const chart = echarts.init(document.getElementById('chart'));
                const option = {
                    xAxis: {
                        type: 'value'
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: [{
                        type: 'scatter',
                        data: chartData.filter(([, , year]) => year === '2015')
                    }]
                };
                chart.setOption(option);
                $('#year').on('input', function() {
                    const year = $(this).val();
                    $('#yearValue').text(year);
                    const filteredData = chartData.filter(([ , , yearValue]) => yearValue === year);
                    chart.setOption({
                        series: [{
                            type: 'scatter',
                            data: filteredData
                        }]
                    });
                });
            });
    </script>
</body>
</html>
```"
6,scatterplot+animated,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Scatterplot showing the Units Sold of Clothing. Add animated transitions that connect these points using lines in order.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Retail Sales Scatterplot</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 800px; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const clothingData = csvData.filter(row => row.split(',')[1] === 'Clothing');
                const years = clothingData.map(row => parseInt(row.split(',')[0]));
                const unitsSold = clothingData.map(row => parseInt(row.split(',')[2]));

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    title: {
                        text: 'Units Sold of Clothing'
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    xAxis: {
                        type: 'category',
                        data: years
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: [
                        {
                            type: 'scatter',
                            data: unitsSold.map((value, index) => [years[index], value]),
                            symbolSize: 10,
                            label: {
                                show: true,
                                formatter: '{b}: {c}'
                            },
                            encode: {
                                x: 0,
                                y: 1
                            }
                        },
                        {
                            type: 'line',
                            data: unitsSold.map((value, index) => [years[index], value]),
                            symbolSize: 10,
                            label: {
                                show: true,
                                formatter: '{b}: {c}'
                            },
                            encode: {
                                x: 0,
                                y: 1
                            },
                            animationDuration: 2000,
                            animationEasing: 'cubicInOut'
                        }
                    ],
                    animationDuration: 2000,
                    animationEasing: 'cubicInOut'
                });
            });
    </script>
</body>
</html>
```"
7,line chart+highlight,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a multi-series Line Chart with an interactive line highlight showing the Units Sold of the given dataset. Add the following interaction function: when the mouse is hovered over a line, the line will be highlighted.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Retail Sales Line Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const years = [...new Set(csvData.map(row => row.split(',')[0]))];
                const products = [...new Set(csvData.map(row => row.split(',')[1]))];
                const seriesData = products.map(product => {
                    const productData = csvData.filter(row => row.split(',')[1] === product);
                    return productData.map(row => parseInt(row.split(',')[2]));
                });

                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        data: products
                    },
                    grid: {
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'category',
                        data: years
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: seriesData.map((data, index) => ({
                        name: products[index],
                        type: 'line',
                        data: data,
                        emphasis: {
                            focus: 'series'
                        }
                    }))
                });
            });
    </script>
</body>
</html>
```"
8,bar chart+zoom,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Units Sold for each Product in 2020. And add the following interactive functions: scroll the mouse wheel to zoom the Bar Chart, click the left mouse button and drag to pan the Bar Chart.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Retail Sales</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const chartData = {};
                csvData.forEach(row => {
                    const [year, product, unitsSold] = row.split(',');
                    if (year === '2020') {
                        if (!chartData[product]) {
                            chartData[product] = 0;
                        }
                        chartData[product] += parseInt(unitsSold);
                    }
                });
                const products = Object.keys(chartData);
                const unitsSold = Object.values(chartData);
                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    xAxis: {
                        type: 'category',
                        data: products
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: [
                        {
                            data: unitsSold,
                            type: 'bar'
                        }
                    ],
                    dataZoom: [
                        {
                            type: 'inside'
                        },
                        {
                            type: 'slider'
                        }
                    ]
                });
            });
    </script>
</body>
</html>
```"
9,bar chart+drag,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Units Sold for each Product in 2020. Add the following interactive functions: allows users to drag and drop bars to reorder them, enabling a customized arrangement based on user preferences.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Units Sold for each Product in 2020</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 100%; height: 600px;""></div>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const csvData = data.split('\n').slice(1);
                const chartData = {};
                csvData.forEach(row => {
                    const [Year, Product, UnitsSold] = row.split(',');
                    if (Year === '2020') {
                        if (!chartData[Product]) {
                            chartData[Product] = 0;
                        }
                        chartData[Product] += parseInt(UnitsSold);
                    }
                });
                const products = Object.keys(chartData);
                const unitsSold = Object.values(chartData);
                const chart = echarts.init(document.getElementById('chart'));
                chart.setOption({
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    grid: {
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'value',
                        position: 'top'
                    },
                    yAxis: {
                        type: 'category',
                        data: products,
                        axisLabel: {
                            interval: 0,
                            rotate: 30
                        }
                    },
                    series: [
                        {
                            name: 'Units Sold',
                            type: 'bar',
                            data: unitsSold
                        }
                    ],
                    dataZoom: [
                        {
                            type: 'inside',
                            start: 0,
                            end: 100
                        },
                        {
                            start: 0,
                            end: 100
                        }
                    ]
                });
                chart.on('click', params => {
                    const productIndex = products.indexOf(params.name);
                    const unitsSoldValue = unitsSold[productIndex];
                    const newUnitsSold = unitsSold.slice();
                    newUnitsSold.splice(productIndex, 1);
                    newUnitsSold.unshift(unitsSoldValue);
                    const newProducts = products.slice();
                    newProducts.splice(productIndex, 1);
                    newProducts.unshift(params.name);
                    chart.setOption({
                        yAxis: {
                            data: newProducts
                        },
                        series: [
                            {
                                name: 'Units Sold',
                                type: 'bar',
                                data: newUnitsSold
                            }
                        ]
                    });
                });
            });
    </script>
</body>
</html>
```"
10,bar chart+animated,"Now you have the dataset in CSV format: https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score
Your task is to create a Bar Chart that visualizes the Units Sold for each Product in 2020. Add animated transitions and use the drop-down menu to change the sorting order to ascending or descending based on the Units Sold.
Use the following visualization library: ECharts.
Use the following format:
code: (The code should be complete. And the HTML structure and code should be merged together.)
Please provide only the codes written in the specified library with no other words.
Hint: You can use the fetch() function to load data.","https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv

The data table contains the following columns: Year,Product,Units Sold,Revenue,Profit,Number of Stores,Customer Satisfaction Score",ECharts,advanced view,"```html
<!DOCTYPE html>
<html>
<head>
    <meta charset=""UTF-8"">
    <title>Retail Sales Chart</title>
    <script src=""https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js""></script>
</head>
<body>
    <div id=""chart"" style=""width: 100%; height: 600px;""></div>
    <select id=""sort-order"">
        <option value=""desc"">Descending</option>
        <option value=""asc"">Ascending</option>
    </select>
    <script>
        fetch('https://gist.githubusercontent.com/FFFFFancy/2e1f7830c2fdc1304e65312d1c1d7657/raw/5da822cdbec89a5118d004cfa12aea0862ca65af/Retail%2520Sales.csv')
            .then(response => response.text())
            .then(data => {
                const chartData = [];
                const rows = data.split('\n').slice(1);
                rows.forEach(row => {
                    const columns = row.split(',');
                    if (columns[0] === '2020') {
                        chartData.push({
                            product: columns[1],
                            unitsSold: parseFloat(columns[2])
                        });
                    }
                });
                chartData.sort((a, b) => b.unitsSold - a.unitsSold);
                const chart = echarts.init(document.getElementById('chart'));
                const option = {
                    xAxis: {
                        type: 'category',
                        data: chartData.map(item => item.product)
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: [
                        {
                            data: chartData.map(item => item.unitsSold),
                            type: 'bar',
                            animationDuration: 2000,
                            animationEasing: 'cubicInOut'
                        }
                    ]
                };
                chart.setOption(option);
                document.getElementById('sort-order').addEventListener('change', () => {
                    const sortOrder = document.getElementById('sort-order').value;
                    chartData.sort((a, b) => sortOrder === 'desc' ? b.unitsSold - a.unitsSold : a.unitsSold - b.unitsSold);
                    chart.setOption({
                        xAxis: {
                            data: chartData.map(item => item.product)
                        },
                        series: [
                            {
                                data: chartData.map(item => item.unitsSold)
                            }
                        ]
                    });
                });
            });
    </script>
</body>
</html>
```"
